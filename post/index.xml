<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on 小松哥的博客</title><link>https://lisongrc.github.io/post/</link><description>Recent content in Posts on 小松哥的博客</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sat, 15 Jul 2023 13:50:24 +0800</lastBuildDate><atom:link href="https://lisongrc.github.io/post/index.xml" rel="self" type="application/rss+xml"/><item><title>OpenWrt旁路由设置</title><link>https://lisongrc.github.io/p/2023071c69725e/</link><pubDate>Sat, 15 Jul 2023 13:50:24 +0800</pubDate><guid>https://lisongrc.github.io/p/2023071c69725e/</guid><description>&lt;h1 id="旁路由自身设置">旁路由自身设置&lt;/h1>
&lt;p>进入 &lt;code>OpenWrt&lt;/code> 后台，打开 &lt;code>网络-接口&lt;/code> 菜单，编辑 &lt;code>LAN&lt;/code> 口：&lt;/p>
&lt;ul>
&lt;li>将协议改为 &lt;code>静态地址&lt;/code> ，然后把 &lt;code>IP&lt;/code> 设置为一个和现有局域网同网段的静态IP地址&lt;/li>
&lt;li>将 &lt;code>网关&lt;/code> 和 &lt;code>DNS服务器&lt;/code> 设为主路由的IP地址&lt;/li>
&lt;li>在 &lt;code>DHCP服务器&lt;/code> 中勾选 &lt;code>忽略此接口&lt;/code>&lt;/li>
&lt;li>保存并应用，建议重启一次&lt;/li>
&lt;/ul>
&lt;p>这样旁路由的网络就正常能通了。接下来就是让局域网设备的流量经过旁路由以实现一些功能。&lt;/p>
&lt;h1 id="让设备走旁路由">让设备走旁路由&lt;/h1>
&lt;p>有三种方式，根据自己情况选择。&lt;/p>
&lt;h2 id="方式一设备自己设置走旁路网">方式一：设备自己设置走旁路网&lt;/h2>
&lt;p>在指定的设备上，手动设置IP地址，将 &lt;code>网关&lt;/code> 和 &lt;code>DNS&lt;/code> 改为旁路由的IP地址。&lt;/p>
&lt;p>优点：如果旁路由挂了，不影响其他设备的正常上网&lt;br>
缺点：需要在每个设备上单独设置&lt;/p>
&lt;h2 id="方式二主路由设置所有设备都走旁路由">方式二：主路由设置所有设备都走旁路由&lt;/h2>
&lt;p>在主路由上设置 &lt;code>DHCP默认网关&lt;/code> 为旁路由的IP，则可以实现自动路由。部分路由器可能不支持设置默认网关。&lt;/p>
&lt;p>优点：一劳永逸，不用在每个设备上设置&lt;br>
缺点：如果旁路由挂了，局域网里的设备就都不能正常上网了；&lt;/p>
&lt;h2 id="方式三主路由上指定部分设备走旁路由">方式三：主路由上指定部分设备走旁路由&lt;/h2>
&lt;p>如果主路由是高级一点的系统，例如iKuai等，可以在DHCP里为不同的设备指定不同的网关和DNS服务器。&lt;/p>
&lt;p>我目前在用的就是这种方式，融合了前两种方式的优缺点。&lt;/p></description></item><item><title>ESXi上安装OpenWrt虚拟机</title><link>https://lisongrc.github.io/p/202307da3c2c71/</link><pubDate>Sun, 09 Jul 2023 12:11:18 +0800</pubDate><guid>https://lisongrc.github.io/p/202307da3c2c71/</guid><description>&lt;h1 id="下载openwrt固件">下载OpenWrt固件&lt;/h1>
&lt;p>获取固件的方式大概有三种：&lt;/p>
&lt;ul>
&lt;li>直接下载别人编译好的固件 例如 &lt;a class="link" href="https://github.com/coolsnowwolf/lede/releases" target="_blank" rel="noopener"
>Github&lt;/a>、&lt;a class="link" href="https://drive.google.com/drive/folders/1uRXg_krKHPrQneI3F2GNcSVRoCgkqESr" target="_blank" rel="noopener"
>eSir固件谷歌硬盘&lt;/a>&lt;/li>
&lt;li>去 &lt;a class="link" href="https://supes.top/" target="_blank" rel="noopener"
>supes.top&lt;/a> 网站下载或定制适用于您设备的OpenWrt固件，可以自定义一些插件和设置。&lt;/li>
&lt;li>自己编译，定制化程度高，但是需要时间学习相关的东西，这里不讨论。&lt;/li>
&lt;/ul>
&lt;h1 id="将openwrt固件镜像img转换为vmware-esxi支持的vmdk格式文件">将OpenWrt固件镜像(.img)转换为VMWare ESXi支持的.vmdk格式文件&lt;/h1>
&lt;p>由于ESXi并不支持直接从img镜像创建虚拟机，需要先将.img文件转换为.vmdk文件。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">brew install qemu
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">qemu-img convert -f raw -O vmdk &amp;lt;OpenWrt固件镜像&amp;gt;.img &amp;lt;目标新文件名&amp;gt;.vmdk
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="将vmdk上传到esxi主机的数据存储空间">将VMDK上传到ESXi主机的数据存储空间。&lt;/h1>
&lt;p>打开数据存储浏览器，把刚刚转换好的.vmdk文件上传到数据存储空间。
&lt;img src="https://gitee.com/lisongrc/images/raw/master/image/5c71bc95b2befa1ab8d741b0d0b97be0.png"
loading="lazy"
>&lt;/p>
&lt;h1 id="ssh进入esxi使用-vmkfstools-将不支持的vmdk转换为esxi支持的vmdk格式">SSH进入ESXi，使用 &lt;code>vmkfstools&lt;/code> 将不支持的vmdk转换为ESXi支持的vmdk格式&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">ssh root@esxi
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">vmkfstools -i &amp;lt;旧的.vmdk&amp;gt; &amp;lt;新的.vmdk&amp;gt; -d thin
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="安装openwrt虚拟机">安装OpenWrt虚拟机&lt;/h1>
&lt;h2 id="创建虚拟机-选择linux其他linux64位">创建虚拟机, 选择Linux/其他Linux(64位)&lt;/h2>
&lt;p>&lt;img src="https://gitee.com/lisongrc/images/raw/master/image/908c8167f590c17408f76b32bd601f63.png"
loading="lazy"
>&lt;/p>
&lt;h2 id="删掉默认的硬盘设置好cpu和内存">删掉默认的硬盘，设置好cpu和内存&lt;/h2>
&lt;h2 id="添加vmdk文件作为硬盘选择刚刚已经转好的esxi支持的vmdk文件">添加vmdk文件作为硬盘，选择刚刚已经转好的ESXi支持的vmdk文件。&lt;/h2>
&lt;p>&lt;img src="https://gitee.com/lisongrc/images/raw/master/image/c1115762e3f38654461bb7a39b21a3e4.png"
loading="lazy"
>
&lt;img src="https://gitee.com/lisongrc/images/raw/master/image/815426441470663b51aeb6945b3ff8d7.png"
loading="lazy"
>&lt;/p>
&lt;h2 id="完成创建打开电源">完成创建，打开电源。&lt;/h2>
&lt;p>等控制台不再刷新以后，按下回车，出现下边的画面，表示安装成功了。
&lt;img src="https://gitee.com/lisongrc/images/raw/master/image/1e61a7b6793fb3936032531474074f2e.png"
loading="lazy"
>&lt;/p>
&lt;h1 id="在esxi控制台中修改openwrt的网卡ip">在ESXi控制台中修改OpenWrt的网卡ip&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">vi /etc/config/network
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>将ip改成自己想要的。
&lt;img src="https://gitee.com/lisongrc/images/raw/master/image/bff73302f56470af9a0f83de7455e74f.png"
loading="lazy"
>&lt;/p>
&lt;h1 id="通过浏览器访问openwrt管理界面">通过浏览器访问OpenWrt管理界面&lt;/h1>
&lt;p>在浏览器里输入刚刚修改的OpenWrt IP，例如192.168.1.5，就会看到登陆界面了。&lt;/p>
&lt;p>参考：&lt;br>
&lt;a class="link" href="https://wi1dcard.dev/posts/convert-openwrt-image-to-esxi-vmdk/" target="_blank" rel="noopener"
>Convert OpenWrt Image to ESXi VMDK&lt;/a>&lt;/p></description></item><item><title>ESXI开启RDM硬盘直通</title><link>https://lisongrc.github.io/p/2023078a0a4260/</link><pubDate>Sat, 08 Jul 2023 20:35:22 +0800</pubDate><guid>https://lisongrc.github.io/p/2023078a0a4260/</guid><description>&lt;h1 id="进入esxi后台打开ssh功能">进入ESXI后台，打开SSH功能&lt;/h1>
&lt;p>&lt;img src="https://gitee.com/lisongrc/images/raw/master/image/93985ccea566b66629199d1d1461a7a3.png"
loading="lazy"
>&lt;/p>
&lt;h1 id="进入esxi后台查看硬盘信息">进入ESXI后台，查看硬盘信息&lt;/h1>
&lt;h2 id="点击-存储设备选择硬盘查找硬盘标识符记住括号里面这一串">点击 &lt;code>存储&amp;gt;&amp;gt;设备&amp;gt;&amp;gt;选择硬盘&lt;/code>，查找硬盘标识符，记住括号里面这一串&lt;/h2>
&lt;p>&lt;img src="https://gitee.com/lisongrc/images/raw/master/image/0e9f572b673ac66b9b34bfa98d8e3d6a.png"
loading="lazy"
>&lt;/p>
&lt;h2 id="查找esxi系统盘的路径点击-存储数据存储选择esxi的系统盘复制位置对应的路径">查找ESXI系统盘的路径，点击 &lt;code>存储&amp;gt;&amp;gt;数据存储&amp;gt;&amp;gt;选择ESXI的系统盘&lt;/code>，复制&lt;code>位置&lt;/code>对应的路径&lt;/h2>
&lt;p>&lt;img src="https://gitee.com/lisongrc/images/raw/master/image/61de9d0622c733085027046bee6ea704.png"
loading="lazy"
>&lt;/p>
&lt;h1 id="登陆esxi的ssh进行配置rdm">登陆ESXI的SSH进行配置RDM&lt;/h1>
&lt;p>输入命令，回车无任何提示说明配置成功，注意将里面的东西换成自己的：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">vmkfstools -z /vmfs/devices/disks/未格式化硬盘标识符 /vmfs/volumes/ESXI系统盘路径/自定义名称.vmdk
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>例如：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">vmkfstools -z /vmfs/devices/disks/t10.ATA_____WDC_WD20EURS2D63S48Y0_________________________WD2DWCAZAJ063809 /vmfs/volumes/5ac791f9-74172f6b-18d1-e43a6e0448e3/DSM.vmdk
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="查看是否已经有dsmvmdk这个文件">查看是否已经有DSM.vmdk这个文件&lt;/h1>
&lt;p>有这个文件就说明已经成功开启RDM直连硬盘了，我们新建虚拟机时选择现有磁盘时选择这个文件即可。
&lt;img src="https://gitee.com/lisongrc/images/raw/master/image/591442d1f556b020aed1a2e86d4b5beb.png"
loading="lazy"
>&lt;/p></description></item><item><title>引入MLeaksFinder报错的解决办法</title><link>https://lisongrc.github.io/p/2023066d00befe/</link><pubDate>Sat, 10 Jun 2023 18:54:27 +0800</pubDate><guid>https://lisongrc.github.io/p/2023066d00befe/</guid><description>&lt;p>前段时间想导入 &lt;a class="link" href="https://github.com/Tencent/MLeaksFinder" target="_blank" rel="noopener"
>MLeaksFinder&lt;/a> 看下内存泄露问题。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">pod &amp;#39;MLeaksFinder&amp;#39;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>但是 &lt;code>pod install&lt;/code> 之后项目编译报错了，&lt;code>Cannot initialize a parameter of type 'id&amp;lt;NSCopying&amp;gt; _Nonnull' with an rvalue of type 'Class'&lt;/code>
&lt;img src="https://gitee.com/lisongrc/images/raw/master/image/c7583a85734ff84c075e467f818f8953.png"
loading="lazy"
>&lt;/p>
&lt;p>解决办法是在 &lt;code>Podfile&lt;/code> 里写入以下两段代码，重新 &lt;code>pod install&lt;/code> 会将有问题的代码替换，就可以编译通过了。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="line">&lt;span class="cl">&lt;span class="n">post_install&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">installer&lt;/span>&lt;span class="o">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">## Fix for XCode 12.5&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">find_and_replace&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Pods/FBRetainCycleDetector/FBRetainCycleDetector/Layout/Classes/FBClassStrongLayout.mm&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;layoutCache[currentClass] = ivars;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;layoutCache[(id&amp;lt;NSCopying&amp;gt;)currentClass] = ivars;&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">## Fix for XCode 13.0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">find_and_replace&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Pods/FBRetainCycleDetector/fishhook/fishhook.c&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;indirect_symbol_bindings[i] = cur-&amp;gt;rebindings[j].replacement;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;if (i &amp;lt; (sizeof(indirect_symbol_bindings) / sizeof(indirect_symbol_bindings[0]))) { &lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2"> indirect_symbol_bindings[i]=cur-&amp;gt;rebindings[j].replacement; &lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2"> }&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p> &lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">find_and_replace&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dir&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">findstr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">replacestr&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="no">Dir&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">dir&lt;/span>&lt;span class="o">].&lt;/span>&lt;span class="n">each&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="nb">name&lt;/span>&lt;span class="o">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">text&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="no">File&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">read&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">name&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">replace&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">text&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">gsub&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">findstr&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">replacestr&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">text&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="n">replace&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">puts&lt;/span> &lt;span class="s2">&amp;#34;Fix: &amp;#34;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nb">name&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="no">File&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;w&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="o">|&lt;/span> &lt;span class="n">file&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">puts&lt;/span> &lt;span class="n">replace&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="no">STDOUT&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">flush&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="no">Dir&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">dir&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s1">&amp;#39;*/&amp;#39;&lt;/span>&lt;span class="o">].&lt;/span>&lt;span class="n">each&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nb">method&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="ss">:find_and_replace&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Hugo博客搭建+Stack主题</title><link>https://lisongrc.github.io/p/2023051d887323/</link><pubDate>Sat, 20 May 2023 22:51:34 +0800</pubDate><guid>https://lisongrc.github.io/p/2023051d887323/</guid><description>&lt;img src="https://gitee.com/lisongrc/images/raw/master/image/147a04013614c94609c5788402cfe3f2.jpeg" alt="Featured image of post Hugo博客搭建+Stack主题" />&lt;p>&lt;a class="link" href="https://gohugo.io/" target="_blank" rel="noopener"
>Hugo&lt;/a> 是用 Go 实现的博客工具，采用 Markdown 进行文章编辑，自动生成静态站点文件，支持丰富的主题配置，也可以通过 js 嵌入像是评论系统等插件。Hugo大大加快了网页生成的速度，而且在源文件处修改的内容可以实时地显示在网页上。&lt;/p>
&lt;h2 id="安装">安装&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">brew install hugo
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="生成博客">生成博客&lt;/h2>
&lt;p>找一个合适的目录，输入&lt;code>hugo new site &amp;quot;博客文件夹名字&amp;quot;&lt;/code>，便可以生成一个用于存放博客的文件夹。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">hugo new site Blog
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cd Blog
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="安装主题">安装主题&lt;/h2>
&lt;p>我用的&lt;a class="link" href="https://stack.jimmycai.com/" target="_blank" rel="noopener"
>stack&lt;/a>主题，大家根据自己的喜好选择。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-v" data-lang="v">&lt;span class="line">&lt;span class="cl">&lt;span class="nv">git&lt;/span> &lt;span class="nv">submodule&lt;/span> &lt;span class="nv">add&lt;/span> &lt;span class="nv">https&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="c1">//github.com/CaiJimmy/hugo-theme-stack.git themes/hugo-theme-stack
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="配置文件">配置文件&lt;/h2>
&lt;p>将&lt;code>themes/hugo-theme-stack/exampleSite&lt;/code>文件夹下的&lt;code>config.yaml&lt;/code>、&lt;code>content&lt;/code>、&lt;code>.gitignore&lt;/code>文件复制到博客根目录，并删除&lt;code>config.toml&lt;/code>。&lt;/p>
&lt;p>将&lt;code>themes/hugo-theme-stack/archetypes&lt;/code>文件夹复制到博客根目录，这里面是博文模版，可以根据自己的情况自定义修改里面的内容。&lt;/p>
&lt;h2 id="生成博文">生成博文&lt;/h2>
&lt;p>在博客根目录执行&lt;code>hugo new post/xxxx.md&lt;/code>，这时候就会在文件夹 &lt;code>content/post&lt;/code>形成你要的markdown文件，打开进行编辑即可。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">hugo new post/blog-test.md
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="渲染查看效果">渲染查看效果&lt;/h2>
&lt;p>在博客文件夹中执行&lt;code>hugo server&lt;/code>，然后打开&lt;a class="link" href="http://localhost:1313/" target="_blank" rel="noopener"
>http://localhost:1313/&lt;/a>来查看效果。&lt;/p>
&lt;p>注意，markdown文件中的&lt;code>front matter&lt;/code>部分有一个&lt;code>draft&lt;/code>参数代表是否是草稿，是否渲染草稿需要执行不同命令：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 不会渲染草稿文件&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">hugo server
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 将草稿文件也进行渲染&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">hugo server -D
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="博客美化">博客美化&lt;/h2>
&lt;h3 id="修改语言">修改语言&lt;/h3>
&lt;p>修改&lt;code>config.yaml&lt;/code>里面的对应字段：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">languageCode&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">zh-CN&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">DefaultContentLanguage&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">zh-cn&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">hasCJKLanguage&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果不需要多语言切换功能，&lt;code>languages&lt;/code>里面只留&lt;code>zh-cn&lt;/code>，把其它语言全删掉。&lt;/p>
&lt;h3 id="更换头像">更换头像&lt;/h3>
&lt;p>将自己的头像图片&lt;code>avatar.png&lt;/code>放在&lt;code>assets/img/&lt;/code>目录即可。&lt;/p>
&lt;h3 id="使博文支持html内容">使博文支持html内容&lt;/h3>
&lt;p>将&lt;code>config.yaml&lt;/code>里的&lt;code>unsafe&lt;/code>配置项改为true&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">markup&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">goldmark&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">renderer&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">## Set to true if you have HTML content inside Markdown&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">unsafe&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="博文图片防盗链">博文图片防盗链&lt;/h3>
&lt;p>如果有一些博文用到的外部图片加了防盗链，就会加载失败。可以在这些博文里加入&lt;code>&amp;lt;meta name=&amp;quot;referrer&amp;quot; content=&amp;quot;no-referrer&amp;quot;/&amp;gt;&lt;/code>代码来解决。&lt;/p>
&lt;p>或者将这段代码放到&lt;code>layout/partials/head/custom.html&lt;/code>里，这样就是对所有博文生效的。&lt;/p>
&lt;h3 id="永久链接permalink">永久链接permalink&lt;/h3>
&lt;p>Hugo可以通过博文里&lt;code>front matter&lt;/code>的&lt;code>slug&lt;/code>来实现永久链接，如果没有设置或者是为空时，将使用&lt;code>title&lt;/code>代替&lt;code>slug&lt;/code>。&lt;/p>
&lt;p>每一次都手动添加slug实在是不方便，可以在默认模板&lt;code>\archetypes\default.md&lt;/code>里设置自动生成:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">slug: {{ substr (md5 (printf &amp;#34;%s%s&amp;#34; .Date (replace .TranslationBaseName &amp;#34;-&amp;#34; &amp;#34; &amp;#34; | title))) 4 8 }}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="其它">其它&lt;/h3>
&lt;p>还有很多其它的配置可以查看&lt;a class="link" href="https://stack.jimmycai.com/config/" target="_blank" rel="noopener"
>官方文档&lt;/a>，根据自己需要修改。&lt;/p></description></item><item><title>查看Mac SSD寿命与健康度</title><link>https://lisongrc.github.io/p/2022023fc8d0f9/</link><pubDate>Sun, 13 Feb 2022 18:31:00 +0000</pubDate><guid>https://lisongrc.github.io/p/2022023fc8d0f9/</guid><description>&lt;p>如何确认目前Mac 电脑所用的SSD 寿命和健康度还剩多久呢？&lt;/p>
&lt;h1 id="安装工具smartmontools">安装工具smartmontools&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">brew install smartmontools
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="通过diskutil-list指令来查询ssd硬盘设备标签代码">通过&lt;code>diskutil list&lt;/code>指令来查询SSD硬盘设备标签代码&lt;/h1>
&lt;p>&lt;img src="https://lisongrc.github.io/../images/disk_identifier.png"
loading="lazy"
>&lt;/p>
&lt;p>或者打开磁盘管理工具查看：&lt;/p>
&lt;p>&lt;img src="https://lisongrc.github.io/../images/QQ%e6%88%aa%e5%9b%be20210225084247.png"
loading="lazy"
>&lt;/p>
&lt;h1 id="执行命令">执行命令&lt;/h1>
&lt;p>注意命令里面的&lt;code>disk1s1&lt;/code>换成你自己的标识符。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">smartctl -a disk1s1
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://lisongrc.github.io/../images/QQ%e6%88%aa%e5%9b%be20210225084324.png"
loading="lazy"
>&lt;/p>
&lt;p>至于SMART 工具里面显示的数据可对照底下说明：&lt;/p>
&lt;ul>
&lt;li>严重警告（Critical Warning）：会显示控制器状态警告讯息，如果都显示0x00 就表示没事&lt;/li>
&lt;li>温度（Temperature）：会显示当前SSD 温度资讯&lt;/li>
&lt;li>可用备用空间（Available Spare）：SSD 剩余空间百分比&lt;/li>
&lt;li>可用备用临界值（Available Spare Threshold）：临界值全由厂商定义&lt;/li>
&lt;li>寿命百分比（Percentage Used）：目前SSD 寿命百分比数值，具体取决于实际设备使用情况和厂商对设备寿命的预测。&lt;/li>
&lt;li>资料读取（Data Units Read）：记录电脑从SSD读取512字节数据单元的总量，每1000个单元记录一次，即这项Raw数据1的值等于500KB。&lt;/li>
&lt;li>资料写入（Data Units Read）：如上，就是写入总量。&lt;/li>
&lt;li>主机读取命令（Host Read Commands）：主控收到的读取命令数量。&lt;/li>
&lt;li>主机写入命令（Host Write Commands）：主控收到的写入命令数量。&lt;/li>
&lt;li>控制器忙碌时间（Controller Busy Time）：主控忙于I/O命令的时间。&lt;/li>
&lt;li>意外关机（Unsafe Shutdowns）：纪录不正常断电次数&lt;/li>
&lt;li>媒体和资料完整性错误（Media and Data Integrity Errors）：主控检测得到的未恢复的数据完整性错误次数。&lt;/li>
&lt;li>错误资料纪录（Number of Error Information Log Entries）：主控总共收到的错误信息日志数量。&lt;/li>
&lt;/ul>
&lt;p>通常我们主要确认「寿命百分比（Percentage Used）」这项数值就好，通常达到90%以上就要额外注意。&lt;/p></description></item><item><title>Homebrew的使用</title><link>https://lisongrc.github.io/p/2021043dc4d0c2/</link><pubDate>Sun, 25 Apr 2021 23:18:12 +0000</pubDate><guid>https://lisongrc.github.io/p/2021043dc4d0c2/</guid><description>&lt;meta name="referrer" content="no-referrer"/>
&lt;p>&lt;a class="link" href="https://brew.sh/" target="_blank" rel="noopener"
>Homebrew&lt;/a>可以方便地安装你需要的包或者app。&lt;/p>
&lt;h1 id="一安装">一、安装&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">/bin/bash -c &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="k">$(&lt;/span>curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh&lt;span class="k">)&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="二使用">二、使用&lt;/h1>
&lt;h2 id="搜索包">搜索包&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">brew search wget
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="安装包">安装包&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">brew install wget
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="卸载包">卸载包&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">brew uninstall wget
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="显示包信息">显示包信息&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">brew info wget
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="查看已安装的包">查看已安装的包&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">brew list
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">brew list --cask
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="更新homebew">更新Homebew&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">brew update
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="列出可以升级的包">列出可以升级的包&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">brew outdated
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="升级所有已安装的包">升级所有已安装的包&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">brew upgrade --force --greedy
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="升级某些包">升级某些包&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">brew upgrade wget
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="清理缓存">清理缓存&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">brew cleanup
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="三卸载">三、卸载&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">/bin/bash -c &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="k">$(&lt;/span>curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/uninstall.sh&lt;span class="k">)&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="四homebrew-bundle">四、homebrew-bundle&lt;/h1>
&lt;p>homebrew-bundle可以帮助我们备份已安装的包和app们，这样我们在重装系统或者换电脑后可以一键恢复安装，节省时间。&lt;/p>
&lt;h2 id="备份">备份&lt;/h2>
&lt;p>下面这条命令意思是备份我的安装列表，&amp;ndash;describe代表会加上包的描述，&amp;ndash;force代表覆盖已有的文件，&amp;ndash;file指定输出文件，这里我指定iCloud云盘里的Brewfile文件，因为这样系统就会自动同步这个文件了哈哈。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">brew bundle dump --describe --force --all --file&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;~/Library/Mobile Documents/com~apple~CloudDocs/Brewfile&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>生成的文件大概是这样：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="line">&lt;span class="cl">&lt;span class="n">tap&lt;/span> &lt;span class="s2">&amp;#34;homebrew/bundle&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">tap&lt;/span> &lt;span class="s2">&amp;#34;homebrew/cask&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">tap&lt;/span> &lt;span class="s2">&amp;#34;homebrew/core&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Mac App Store command-line interface&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">brew&lt;/span> &lt;span class="s2">&amp;#34;mas&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Open source relational database management system&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">brew&lt;/span> &lt;span class="s2">&amp;#34;mysql&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Tool to list all active shortcuts of the current application&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">cask&lt;/span> &lt;span class="s2">&amp;#34;cheatsheet&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Free and open-source media player&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">cask&lt;/span> &lt;span class="s2">&amp;#34;iina&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">mas&lt;/span> &lt;span class="s2">&amp;#34;Developer&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">640199958&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">mas&lt;/span> &lt;span class="s2">&amp;#34;Hidden Bar&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1452453066&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">mas&lt;/span> &lt;span class="s2">&amp;#34;The Unarchiver&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">425424353&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">mas&lt;/span> &lt;span class="s2">&amp;#34;Xcode&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">497799835&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="恢复安装">恢复安装&lt;/h2>
&lt;p>因为iCloud备份了Brewfile文件，我们可以一键恢复安装：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">brew install mas
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">brew bundle install --file&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;~/Library/Mobile Documents/com~apple~CloudDocs/Brewfile&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Chrome好用的插件，持续更新</title><link>https://lisongrc.github.io/p/2021045dc07d30/</link><pubDate>Sat, 24 Apr 2021 10:15:05 +0000</pubDate><guid>https://lisongrc.github.io/p/2021045dc07d30/</guid><description>&lt;meta name="referrer" content="no-referrer"/>
&lt;p>本文总结一些Chrome上好用的插件们。&lt;/p>
&lt;h1 id="扩展管理器extension-managerhttpschromegooglecomwebstoredetailextension-managergjldcdngmdknpinoemndlidpcabkggco">&lt;a class="link" href="https://chrome.google.com/webstore/detail/extension-manager/gjldcdngmdknpinoemndlidpcabkggco" target="_blank" rel="noopener"
>扩展管理器（Extension Manager）&lt;/a>&lt;/h1>
&lt;p>一键管理所有扩展，快速开启/禁用、批量闪电管理，智能排序，右键卸载、锁定、选项配置，角标提醒，大小布局随心配。快捷、简单、安全。&lt;/p>
&lt;p>&lt;img src="https://lh3.googleusercontent.com/i1quYLmDyiU7N5ES24UQEj74GRSnnMn7eBRwXLBfUK6zwaqWDzmmRAPH6YI7ih0aVKXdH9giVh5W7OjDs4sGdor_=w640-h400-e365-rj-sc0x00ffffff"
loading="lazy"
>&lt;/p>
&lt;h1 id="adguardhttpschromegooglecomwebstoredetailadguard-adblockerbgnkhhnnamicmpeenaelnjfhikgbkllg">&lt;a class="link" href="https://chrome.google.com/webstore/detail/adguard-adblocker/bgnkhhnnamicmpeenaelnjfhikgbkllg" target="_blank" rel="noopener"
>AdGuard&lt;/a>&lt;/h1>
&lt;p>AdGuard 广告拦截器可有效的拦截所有网页上的所有类型的广告，甚至是在 Facebook、Youtube 以及其他万千网站上的广告！&lt;/p>
&lt;h1 id="tampermonkeyhttpschromegooglecomwebstoredetailtampermonkeydhdgffkkebhmkfjojejmpbldmpobfkfo">&lt;a class="link" href="https://chrome.google.com/webstore/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo" target="_blank" rel="noopener"
>Tampermonkey&lt;/a>&lt;/h1>
&lt;p>Tampermonkey用于在网站上运行所谓的用户脚本（有时也称为Greasemonkey脚本）。&lt;/p>
&lt;p>&lt;img src="https://lh3.googleusercontent.com/MhMg9fwCD5qVhqcSCRfhIYqz5_xUfrziMtZ-Vtwlb2BT2wFkFuy_CWGtc9Gx4GtzO6qP3FTzCXy3jN-PqOgBlPbYqA=w640-h400-e365-rj-sc0x00ffffff"
loading="lazy"
>&lt;/p>
&lt;h1 id="awesome-screenshothttpschromegooglecomwebstoredetailawesome-screenshot-screennlipoenfbbikpbjkfpfillcgkoblgpmj">&lt;a class="link" href="https://chrome.google.com/webstore/detail/awesome-screenshot-screen/nlipoenfbbikpbjkfpfillcgkoblgpmj" target="_blank" rel="noopener"
>Awesome Screenshot&lt;/a>&lt;/h1>
&lt;p>截图和录屏2合1的工具，支持截取整个页面，快速分享屏幕。&lt;/p>
&lt;h1 id="json-handlehttpschromegooglecomwebstoredetailjson-handleiahnhfdhidomcpggpaimmmahffihkfnj">&lt;a class="link" href="https://chrome.google.com/webstore/detail/json-handle/iahnhfdhidomcpggpaimmmahffihkfnj" target="_blank" rel="noopener"
>JSON-handle&lt;/a>&lt;/h1>
&lt;p>对JSON格式的内容进行浏览和编辑，以树形图样式展现JSON文档，并可实时编辑。&lt;/p>
&lt;p>&lt;img src="https://lh3.googleusercontent.com/Q7b4wi7gG4SJhFxT3n633dFHVcm1XNn7UUA87bblaUoT32aUQrn6VygY_vzH7W6yE2of4ypEzrJetlO9LDHzFzucoA=w640-h400-e365-rj-sc0x00ffffff"
loading="lazy"
>&lt;/p>
&lt;h1 id="恢复关闭的标签httpschromegooglecomwebstoredetaile681a2e5a48de585b3e997ade79a84e6a087e7adbenhdghhbkaaohocakiepiogjhlllekfma">&lt;a class="link" href="https://chrome.google.com/webstore/detail/%E6%81%A2%E5%A4%8D%E5%85%B3%E9%97%AD%E7%9A%84%E6%A0%87%E7%AD%BE/nhdghhbkaaohocakiepiogjhlllekfma" target="_blank" rel="noopener"
>恢复关闭的标签&lt;/a>&lt;/h1>
&lt;p>只要点击弹窗可让您轻而易举的撤销关闭的标签！&lt;/p>
&lt;p>&lt;img src="https://lh3.googleusercontent.com/MWOJm5K3Ur5f0ZN1yp_O-wK1SMSwMVYZd4pEbDlz4fy3sy-a-n3GaM4UThgkzIMdDMSJ1j9HJPL5QqNCd0Ixw8lhtLw=w640-h400-e365-rj-sc0x00ffffff"
loading="lazy"
>&lt;/p>
&lt;h1 id="工具喵httpschromegooglecomwebstoredetaile5b7a5e585b7e596b5coppgeobilocdhiclhgmadabblhfjgpm">&lt;a class="link" href="https://chrome.google.com/webstore/detail/%E5%B7%A5%E5%85%B7%E5%96%B5/coppgeobilocdhiclhgmadabblhfjgpm" target="_blank" rel="noopener"
>工具喵&lt;/a>&lt;/h1>
&lt;p>工具喵（开发常用工具）：Unix时间戳、URL编码/解码、IP地址查询、MD5加密、BASE64编码/解码、随机字符串&lt;/p>
&lt;p>&lt;img src="https://lh3.googleusercontent.com/HZuYXNH40knDyCi7aYg_r2Uwq2mNfHUpSqFtLuYtvZ9clPmR_XX3f0JPPu6r3VwBD0vBFmutzjLgfGQ9mIF0M96-Rw=w640-h400-e365-rj-sc0x00ffffff"
loading="lazy"
>&lt;/p>
&lt;h1 id="speedtest-by-ooklahttpschromegooglecomwebstoredetailspeedtest-by-ooklapgjjikdiikihdfpoppgaidccahalehjh">&lt;a class="link" href="https://chrome.google.com/webstore/detail/speedtest-by-ookla/pgjjikdiikihdfpoppgaidccahalehjh" target="_blank" rel="noopener"
>Speedtest by Ookla&lt;/a>&lt;/h1>
&lt;p>测试网络表现和网站加载速度&lt;/p>
&lt;p>&lt;img src="https://lh3.googleusercontent.com/XL7wsubp9oQ6UoHKaoFv_XKTrVWIsQwTXupHytkb8Wv7qtCg6lWJjKXFW6SupavIyD-KqXSzREQM_xGLiPhcYbtDlA=w640-h400-e365-rj-sc0x00ffffff"
loading="lazy"
>&lt;/p>
&lt;h1 id="imagushttpschromegooglecomwebstoredetailimagusimmpkjjlgappgfkkfieppnmlhakdmaab">&lt;a class="link" href="https://chrome.google.com/webstore/detail/imagus/immpkjjlgappgfkkfieppnmlhakdmaab" target="_blank" rel="noopener"
>Imagus&lt;/a>&lt;/h1>
&lt;p>鼠标指针悬停在链接或缩略图上时直接在当前页面的弹出视图上显示这些图片、HTML5 视频/音频和内容专辑。&lt;/p>
&lt;p>&lt;img src="https://lh3.googleusercontent.com/Ggd8q0G7oLNkaBMH5ZpBOUQOSh6xUttQkQPXJlwcAWJH89-NOjj1yRJZT0E-Os3bEGo-MMnoNuDDgwQudFpV0PWwLg=w640-h400-e365-rj-sc0x00ffffff"
loading="lazy"
>&lt;/p>
&lt;h1 id="image-downloaderhttpschromegooglecomwebstoredetailimage-downloadercnpniohnfphhjihaiiggeabnkjhpaldj">&lt;a class="link" href="https://chrome.google.com/webstore/detail/image-downloader/cnpniohnfphhjihaiiggeabnkjhpaldj" target="_blank" rel="noopener"
>Image Downloader&lt;/a>&lt;/h1>
&lt;p>显示和下载一个网页上的图片们&lt;/p>
&lt;p>&lt;img src="https://lh3.googleusercontent.com/LMhuL15xpcXQsblr8OJIcIh0GGqElLqYq1SPn4Pt3DG6FSJQz0Vh8gD88mzHA8Bhrlcb5Kd7wGvCv7Tuh6AkzYDrD-M=w640-h400-e365-rj-sc0x00ffffff"
loading="lazy"
>&lt;/p>
&lt;h1 id="giphy-for-chromehttpschromegooglecomwebstoredetailgiphy-for-chromejlleokkdhkflpmghiioglgmnminbekdi">&lt;a class="link" href="https://chrome.google.com/webstore/detail/giphy-for-chrome/jlleokkdhkflpmghiioglgmnminbekdi" target="_blank" rel="noopener"
>GIPHY for Chrome&lt;/a>&lt;/h1>
&lt;p>搜索gif图片&lt;/p>
&lt;p>&lt;img src="https://lh3.googleusercontent.com/l_kDiZth-ROWbXLKLTN0Vxe7ID69uOBMVYGTv7RCM8dzX6UTsqAPkjfKmPygZ71legxtUGV_hC6oPxVsU5GcLKP1Sg=w640-h400-e365-rj-sc0x00ffffff"
loading="lazy"
>&lt;/p>
&lt;h1 id="octotree---github-code-treehttpschromegooglecomwebstoredetailoctotree-github-code-treebkhaagjahfmjljalopjnoealnfndnagc">&lt;a class="link" href="https://chrome.google.com/webstore/detail/octotree-github-code-tree/bkhaagjahfmjljalopjnoealnfndnagc" target="_blank" rel="noopener"
>Octotree - GitHub code tree&lt;/a>&lt;/h1>
&lt;p>更方便地浏览Github的代码&lt;/p>
&lt;p>&lt;img src="https://lh3.googleusercontent.com/1EP4WO0Y8yCHR3k_YohUBvlZuKmVsaV8jhii3YpRxytaFlLKVBIxckIUw9iZcU6H4MhqLmtgFINmJx3xGE1FPlHl6bo=w640-h400-e365-rj-sc0x00ffffff"
loading="lazy"
>&lt;/p>
&lt;h1 id="native-hls-playbackhttpschromegooglecomwebstoredetailnative-hls-playbackemnphkkblegpebimobpbekeedfgemhof">&lt;a class="link" href="https://chrome.google.com/webstore/detail/native-hls-playback/emnphkkblegpebimobpbekeedfgemhof" target="_blank" rel="noopener"
>Native HLS Playback&lt;/a>&lt;/h1>
&lt;p>播放m3u8视频&lt;/p>
&lt;p>&lt;img src="https://lh3.googleusercontent.com/A4jwtVSlIjDNjF0DhASdTXvSJzdIuHzSMnJwE2qZudPuPqzVYiTHg_6t0uXm920cIlQP1OeP8p8m4Rik_1qhH7u4ig=w640-h400-e365-rj-sc0x00ffffff"
loading="lazy"
>&lt;/p>
&lt;h1 id="购物党自动比价工具httpschromegooglecomwebstoredetaile8b4ade789a9e5859ae887aae58aa8e6af94e4bbb7e5b7a5e585b7jgphnjokjhjlcnnajmfjlacjnjkhleah">&lt;a class="link" href="https://chrome.google.com/webstore/detail/%E8%B4%AD%E7%89%A9%E5%85%9A%E8%87%AA%E5%8A%A8%E6%AF%94%E4%BB%B7%E5%B7%A5%E5%85%B7/jgphnjokjhjlcnnajmfjlacjnjkhleah" target="_blank" rel="noopener"
>购物党自动比价工具&lt;/a>&lt;/h1>
&lt;p>浏览商品页面时，自动查询180天历史价格、比较同款商品的全网最低价、提示促销和隐藏优惠券、一旦降价还能通过微信提醒你，海淘、二手房和Steam游戏也能比价！&lt;/p>
&lt;p>&lt;img src="https://lh3.googleusercontent.com/jAQ34Jca1rZH3XRyI5G0k6xzJDzt75dfNOkrS-edfeyjfpP0lfGG2w6BACobyyjNlYG-lGCt2i-9i830LKiaVIhsFw=w640-h400-e365-rj-sc0x00ffffff"
loading="lazy"
>&lt;/p>
&lt;h1 id="掘金httpschromegooglecomwebstoredetaile68e98e98791lecdifefmmfjnjjinhaennhdlmcaeeeb">&lt;a class="link" href="https://chrome.google.com/webstore/detail/%E6%8E%98%E9%87%91/lecdifefmmfjnjjinhaennhdlmcaeeeb" target="_blank" rel="noopener"
>掘金&lt;/a>&lt;/h1>
&lt;p>在新标签页展示聚合内容，包含前端、Android、iOS、后端、产品、设计六大频道，每个频道内都有一到多个内容源。&lt;/p>
&lt;p>&lt;img src="https://lh3.googleusercontent.com/eqXFbVdPoGwnBDRsAtUiaQ0Mzijt6_bpBLmHE7yOBRjCjTWheH806Pw7m-fSsPWVvBt-KMP2iQPthhReUUc0910q=w640-h400-e365-rj-sc0x00ffffff"
loading="lazy"
>&lt;/p></description></item><item><title>一些网站们，持续更新</title><link>https://lisongrc.github.io/p/2021044decb28c/</link><pubDate>Sat, 17 Apr 2021 20:46:53 +0000</pubDate><guid>https://lisongrc.github.io/p/2021044decb28c/</guid><description>&lt;meta name="referrer" content="no-referrer"/>
&lt;p>本文总结一些有用的网站们。&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="https://www.processon.com/" target="_blank" rel="noopener"
>processon&lt;/a> ：免费在线作图、实时协作，支持流程图、思维导图、原型图、UML、网络拓扑图、组织结构图等&lt;/li>
&lt;li>&lt;a class="link" href="https://lottiefiles.com/" target="_blank" rel="noopener"
>lottiefiles&lt;/a> ：在线看lottie效果&lt;/li>
&lt;li>&lt;a class="link" href="https://regex101.com/" target="_blank" rel="noopener"
>regex101&lt;/a> ：在线正则匹配&lt;/li>
&lt;li>&lt;a class="link" href="http://blog.luckly-mjw.cn/tool-show/m3u8-downloader/index.html" target="_blank" rel="noopener"
>m3u8 downloader&lt;/a> ：m3u8 视频在线提取工具&lt;/li>
&lt;li>&lt;a class="link" href="https://minhaskamal.github.io/DownGit/#/home" target="_blank" rel="noopener"
>DownGit&lt;/a> ：下载github项目上的文部分文件&lt;/li>
&lt;li>&lt;a class="link" href="https://msdn.itellyou.cn/" target="_blank" rel="noopener"
>msdn.itellyou&lt;/a> ：下载Windows系统&lt;/li>
&lt;li>&lt;a class="link" href="https://www.progit.cn/" target="_blank" rel="noopener"
>Pro Git 中文版&lt;/a> ：讲解Git的使用&lt;/li>
&lt;li>&lt;a class="link" href="https://swift.org/" target="_blank" rel="noopener"
>swift&lt;/a> ：Swift官方网站&lt;/li>
&lt;li>&lt;a class="link" href="https://www.cnswift.org/" target="_blank" rel="noopener"
>cnswift&lt;/a> ：Swift 编程语言 – 可能是最用心的翻译了吧&lt;/li>
&lt;li>&lt;a class="link" href="https://swiftify.com/converter/code/n0qt4d/" target="_blank" rel="noopener"
>swiftify&lt;/a> ：OC转Swift&lt;/li>
&lt;li>&lt;a class="link" href="https://developer.apple.com/system-status/" target="_blank" rel="noopener"
>system-status&lt;/a> ：查看苹果服务状态&lt;/li>
&lt;li>&lt;a class="link" href="https://www.ipip.net/" target="_blank" rel="noopener"
>IPIP.NET&lt;/a> ：一些网络工具&lt;/li>
&lt;li>&lt;a class="link" href="https://dns.ip.cn/" target="_blank" rel="noopener"
>IP.cn&lt;/a> ：全国 DNS 服务器 IP 地址汇总&lt;/li>
&lt;li>&lt;a class="link" href="https://onevcat.com/" target="_blank" rel="noopener"
>onevcat&lt;/a> ：喵神的博客&lt;/li>
&lt;li>&lt;a class="link" href="https://tech.meituan.com/" target="_blank" rel="noopener"
>美团技术团队&lt;/a> ：美团的技术博客&lt;/li>
&lt;li>&lt;a class="link" href="https://fontawesome.com/icons?d=gallery&amp;amp;p=2" target="_blank" rel="noopener"
>Font Awesome&lt;/a> ：图标字体&lt;/li>
&lt;li>&lt;a class="link" href="https://theme-next.iissnan.com/" target="_blank" rel="noopener"
>NexT&lt;/a> ：NexT 使用文档&lt;/li>
&lt;li>&lt;a class="link" href="https://leetcode-cn.com/" target="_blank" rel="noopener"
>leetcode&lt;/a> ：练习算法&lt;/li>
&lt;li>&lt;a class="link" href="https://app.quicktype.io/" target="_blank" rel="noopener"
>quicktype&lt;/a> ： json解析为多种语言&lt;/li>
&lt;li>&lt;a class="link" href="https://opensource.tencent.com/projects" target="_blank" rel="noopener"
>腾讯开源项目&lt;/a>&lt;/li>
&lt;li>&lt;/li>
&lt;/ul></description></item><item><title>iOS开发常用的效率工具，持续更新</title><link>https://lisongrc.github.io/p/202104d0a1724/</link><pubDate>Sat, 17 Apr 2021 18:29:22 +0000</pubDate><guid>https://lisongrc.github.io/p/202104d0a1724/</guid><description>&lt;meta name="referrer" content="no-referrer"/>
&lt;p>之前总结了 &lt;a class="link" href="https://blog.lisong.pro/2021/04e9bf20fb.html" target="_blank" rel="noopener"
>Mac上好用的软件推荐&lt;/a>，本文总结一下iOS开发常用的效率工具，所谓工欲善其事，必先利其器，好的工具会使我们的生活更美好。&lt;/p>
&lt;h1 id="imageoptimhttpsimageoptimcommac">&lt;a class="link" href="https://imageoptim.com/mac" target="_blank" rel="noopener"
>imageoptim&lt;/a>&lt;/h1>
&lt;p>压缩图片，减少包体积。&lt;/p>
&lt;p>&lt;img src="https://lisongrc.github.io/images/ImageOptim.png"
loading="lazy"
alt="ImageOptim"
>&lt;/p>
&lt;h1 id="lsunusedresourceshttpsgithubcomtinymindlsunusedresources">&lt;a class="link" href="https://github.com/tinymind/LSUnusedResources" target="_blank" rel="noopener"
>LSUnusedResources&lt;/a>&lt;/h1>
&lt;p>找到项目里没用的图片，可以批量删除（但还是建议确认无误后再删）。&lt;/p>
&lt;p>&lt;img src="https://lisongrc.github.io/images/LSUnusedResources.gif"
loading="lazy"
alt="LSUnusedResources"
>&lt;/p>
&lt;h1 id="catclearprojecttoolhttpsgithubcomcatchzengcatclearprojecttool">&lt;a class="link" href="https://github.com/CatchZeng/CATClearProjectTool" target="_blank" rel="noopener"
>CATClearProjectTool&lt;/a>&lt;/h1>
&lt;p>找到项目里没用的类文件，可以设置过滤条件一键删除（同样还是建议先确认后再删）。&lt;/p>
&lt;p>&lt;img src="https://lisongrc.github.io/images/CATClearProjectTool.png"
loading="lazy"
alt="CATClearProjectTool"
>&lt;/p>
&lt;h1 id="nwpusherhttpsgithubcomnoodlewerknwpusher">&lt;a class="link" href="https://github.com/noodlewerk/NWPusher" target="_blank" rel="noopener"
>NWPusher&lt;/a>&lt;/h1>
&lt;p>模拟推送，方便调试推送相关的东西。&lt;/p>
&lt;p>&lt;img src="https://lisongrc.github.io/images/NWPusher.png"
loading="lazy"
alt="NWPusher"
>&lt;/p>
&lt;h1 id="developerhttpsappsapplecomcnappapple-developerid640199958">&lt;a class="link" href="https://apps.apple.com/cn/app/apple-developer/id640199958" target="_blank" rel="noopener"
>Developer&lt;/a>&lt;/h1>
&lt;p>苹果官方应用，可以看历年的WWDC视频。&lt;/p>
&lt;p>&lt;img src="https://lisongrc.github.io/images/Developer.png"
loading="lazy"
alt="Developer"
>&lt;/p>
&lt;h1 id="buildtimeanalyzerhttpsgithubcomrobertgummessonbuildtimeanalyzer-for-xcode">&lt;a class="link" href="https://github.com/RobertGummesson/BuildTimeAnalyzer-for-Xcode" target="_blank" rel="noopener"
>BuildTimeAnalyzer&lt;/a>&lt;/h1>
&lt;p>对Swift文件的编译时间进行分解，方便后续优化。&lt;/p>
&lt;p>&lt;img src="https://lisongrc.github.io/images/BuildTimeAnalyzer.png"
loading="lazy"
alt="BuildTimeAnalyzer"
>&lt;/p>
&lt;h1 id="opensimhttpsgithubcomluoshengopensim">&lt;a class="link" href="https://github.com/luosheng/OpenSim" target="_blank" rel="noopener"
>OpenSim&lt;/a>&lt;/h1>
&lt;p>一个iOS开发查看模拟器沙盒里面文件的应用，很方便。
&lt;img src="https://lisongrc.github.io/images/OpenSim.png"
loading="lazy"
>&lt;/p>
&lt;h1 id="linguanhttplinguanappcom">&lt;a class="link" href="http://linguanapp.com/" target="_blank" rel="noopener"
>Linguan&lt;/a>&lt;/h1>
&lt;p>一款Mac/iOS应用汉化工具，它可以帮助你对任何软件进行语言本地化翻译，操作比较简单，你只需要选择目标程序的.project，然后Linguan里就回加载出来然后进行编辑。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-65f064fd10d632df.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="Linguan.png"
>&lt;/p>
&lt;h1 id="swiftifyhttpsswiftifycomconvertercode">&lt;a class="link" href="https://swiftify.com/converter/code/" target="_blank" rel="noopener"
>swiftify&lt;/a>&lt;/h1>
&lt;p>OC代码转Swift&lt;/p>
&lt;p>&lt;img src="https://lisongrc.github.io/images/swiftify.png"
loading="lazy"
alt="swiftify"
>&lt;/p>
&lt;h1 id="appsighthttpswwwappsightio">&lt;a class="link" href="https://www.appsight.io/" target="_blank" rel="noopener"
>appsight&lt;/a>&lt;/h1>
&lt;p>查看某款iOS APP使用了哪些SDK和服务&lt;/p>
&lt;p>&lt;img src="https://lisongrc.github.io/images/appsight.png"
loading="lazy"
alt="appsight"
>&lt;/p></description></item><item><title>Mac上好用的软件推荐，持续更新</title><link>https://lisongrc.github.io/p/202104e9bf20fb/</link><pubDate>Fri, 16 Apr 2021 14:08:24 +0000</pubDate><guid>https://lisongrc.github.io/p/202104e9bf20fb/</guid><description>&lt;meta name="referrer" content="no-referrer"/>
&lt;p>本文总结一下Mac上的软件们，不仅限于开发相关的软件。所谓工欲善其事，必先利其器，好的软件会使我们的生活更美好。&lt;/p>
&lt;h1 id="安装包打不开的问题">安装包打不开的问题&lt;/h1>
&lt;p>有时候我们下载下来的安装包双击后打不开，提示&lt;code>来自身份不明的开发者&lt;/code>或者提示&lt;code>已损坏&lt;/code>，解决办法如下：&lt;/p>
&lt;p>在终端输入&lt;code>sudo spctl --master-disable&lt;/code>回车，输入密码回车，然后进入&lt;code>系统偏好设置-安全性与隐私-通用&lt;/code>，然后点击左下角的锁，输入密码开锁，然后选择&lt;code>任何来源&lt;/code>就可以了。系统会记录这个选择，如果30天没有安装过其它来源的软件，系统会还原到默认设置。&lt;/p>
&lt;p>你也可以输入&lt;code>sudo spctl --master-enable&lt;/code>再去隐藏这个选项。&lt;/p>
&lt;p>下面是一些推荐软件：&lt;/p>
&lt;h1 id="homebrewhttpsbrewsh">&lt;a class="link" href="https://brew.sh/" target="_blank" rel="noopener"
>Homebrew&lt;/a>&lt;/h1>
&lt;p>Homebrew可以方便地安装你需要的包或者app。&lt;/p>
&lt;p>&lt;img src="https://lisongrc.github.io/images/HomeBrew.png"
loading="lazy"
>&lt;/p>
&lt;h1 id="cheatsheethttpswwwmediaateliercomcheatsheet">&lt;a class="link" href="https://www.mediaatelier.com/CheatSheet/" target="_blank" rel="noopener"
>CheatSheet&lt;/a>&lt;/h1>
&lt;p>长按command键可以查看当前应用的快捷键，很方便。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-1111c41d24b23c1a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="CheatSheet.png"
>&lt;/p>
&lt;h1 id="shuttlehttpsfitztrevgithubioshuttle">&lt;a class="link" href="https://fitztrev.github.io/shuttle/" target="_blank" rel="noopener"
>Shuttle&lt;/a>&lt;/h1>
&lt;p>支持快捷执行一些常用的命令。&lt;/p>
&lt;p>&lt;img src="https://lisongrc.github.io/images/Shuttle.gif"
loading="lazy"
alt="Shuttle"
>&lt;/p>
&lt;h1 id="hidden-barhttpsgithubcomdwarvesfhidden">&lt;a class="link" href="https://github.com/dwarvesf/hidden" target="_blank" rel="noopener"
>Hidden Bar&lt;/a>&lt;/h1>
&lt;p>一款实用的菜单栏管理工具，可以隐藏一些不常用的图标。&lt;/p>
&lt;p>&lt;img src="https://lisongrc.github.io/images/HiddenBar.gif"
loading="lazy"
alt="HiddenBar"
>&lt;/p>
&lt;h1 id="weiboxhttpweiboformacsinaappcom">&lt;a class="link" href="http://weiboformac.sinaapp.com/" target="_blank" rel="noopener"
>WeiboX&lt;/a>&lt;/h1>
&lt;p>几乎是全功能微博，用它看大图和看视频比手机爽多了有木有。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-0ec9f1e32458cf40.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="WeiboX.png"
>&lt;/p>
&lt;h1 id="switchhostshttpsgithubcomoldjswitchhosts">&lt;a class="link" href="https://github.com/oldj/SwitchHosts" target="_blank" rel="noopener"
>SwitchHosts&lt;/a>&lt;/h1>
&lt;p>管理hosts文件的工具。&lt;/p>
&lt;p>&lt;img src="https://lisongrc.github.io/images/SwitchHosts.png"
loading="lazy"
alt="SwitchHosts"
>&lt;/p>
&lt;h1 id="downiehttpssoftwarecharliemonroenetdownie">&lt;a class="link" href="https://software.charliemonroe.net/downie/" target="_blank" rel="noopener"
>Downie&lt;/a>&lt;/h1>
&lt;p>Downie 是 macOS 上的知名视频下载工具，支持全球超过 1000 个在线视频网站的下载&lt;/p>
&lt;p>&lt;img src="https://software.charliemonroe.net/img/downie/downie_title.png"
loading="lazy"
>&lt;/p>
&lt;h1 id="sniphttpwwwsnipqqcom-">&lt;a class="link" href="http://www.snip.qq.com/" target="_blank" rel="noopener"
>Snip&lt;/a>&lt;/h1>
&lt;p>腾讯出品的简单高效的截图工具，可以滚屏截网页全屏，也可以截取完简单编辑图片，例如加箭头、写文字等等。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-0b25cdee88bead6d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="Snip.png"
>&lt;/p>
&lt;h1 id="xmindhttpwwwxmindchinanet">&lt;a class="link" href="http://www.xmindchina.net/" target="_blank" rel="noopener"
>XMind&lt;/a>&lt;/h1>
&lt;p>思维导图工具，在易用性和灵活性方面引人瞩目。将脑中的源源不断涌现的想法完美的展现出来，其思维导图与其他导图图表等更是简单易用，吸引着人们的眼球。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-e94ea89f48d3167c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="XMind.png"
>&lt;/p>
&lt;h1 id="imageoptimhttpsimageoptimcommac">&lt;a class="link" href="https://imageoptim.com/mac" target="_blank" rel="noopener"
>imageoptim&lt;/a>&lt;/h1>
&lt;p>优化图片体积的应用，直接把图片拖进去就可以了。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-d8ae8f2cdb1ed46c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="ImageOptim.png"
>&lt;/p>
&lt;h1 id="sourcetreehttpswwwsourcetreeappcom">&lt;a class="link" href="https://www.sourcetreeapp.com/" target="_blank" rel="noopener"
>SourceTree&lt;/a>&lt;/h1>
&lt;p>一个Git客户端，图形化的界面很好用。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-2fa2f07317f4025b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="SourceTree.png"
>&lt;/p>
&lt;h1 id="foxmailhttpswwwfoxmailcom">&lt;a class="link" href="https://www.foxmail.com/" target="_blank" rel="noopener"
>Foxmail&lt;/a>&lt;/h1>
&lt;p>邮件客户端，添加账户后使用非常方便，很多人都在用他收发公司的企业邮件。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-f75ff064a4fe5f2c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="Foxmail.png"
>&lt;/p>
&lt;h1 id="the-unarchiverhttpstheunarchivercom">&lt;a class="link" href="https://theunarchiver.com/" target="_blank" rel="noopener"
>The Unarchiver&lt;/a>&lt;/h1>
&lt;p>一款解压缩软件。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-50d1d862677533d5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="The Unarchiver.png"
>&lt;/p>
&lt;h1 id="istat-menushttpsbjangocommacistatmenus">&lt;a class="link" href="https://bjango.com/mac/istatmenus/" target="_blank" rel="noopener"
>iStat Menus&lt;/a>&lt;/h1>
&lt;p>系统与硬件监控软件，可以在Finder菜单栏显示CPU使用率、内存使用、硬盘读写速度、网络上传下载速率使用情况、温度传感器温度等数据。
刚开始安装各个功能是分开展示在菜单栏上的，看起来很乱，可以设置为聚合下拉显示。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-336a1df75407e9e5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="iStat Menus.png"
>&lt;/p>
&lt;h1 id="sublime-texthttpswwwsublimetextcom">&lt;a class="link" href="https://www.sublimetext.com/" target="_blank" rel="noopener"
>Sublime Text&lt;/a>&lt;/h1>
&lt;p>Sublime Text 是一个非常好用的代码编辑器。拥有漂亮的用户界面和非凡的功能，例如迷你地图，代码段等等。可以自定义快捷键，菜单和工具栏，还支持插件扩展机制。&lt;/p>
&lt;p>&lt;img src="https://lisongrc.github.io/images/SublimeText.png"
loading="lazy"
>&lt;/p>
&lt;h1 id="xscopehttpsxscopeappcom">&lt;a class="link" href="https://xscopeapp.com/" target="_blank" rel="noopener"
>xScope&lt;/a>&lt;/h1>
&lt;p>一款设计开发辅助应用，包含多个实用的小工具，如度量距离，角度的标尺，放大镜，精确垂直，水平标记辅助线等等，都是设计时非常实用的辅助工具。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-42f74137b4561c82.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="xScope.png"
>&lt;/p>
&lt;h1 id="omnigrafflehttpswwwomnigroupcomomnigraffle">&lt;a class="link" href="https://www.omnigroup.com/omnigraffle/" target="_blank" rel="noopener"
>OmniGraffle&lt;/a>&lt;/h1>
&lt;p>可以用来绘制图表，流程图，组织结构图以及插图。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-f88ebe9a4749129f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="OmniGraffle.png"
>&lt;/p>
&lt;h1 id="sketchhttpswwwsketchcom">&lt;a class="link" href="https://www.sketch.com/" target="_blank" rel="noopener"
>Sketch&lt;/a>&lt;/h1>
&lt;p>强大的移动应用矢量绘图设计工具。使用简单，学习曲线低，能够大大节省设计师的时间和工作量，非常适合进行网站设计、移动应用设计、图标设计等。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-5007f4e7cd850280.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="Sketch.png"
>&lt;/p>
&lt;h1 id="mindnodehttpsmindnodecom">&lt;a class="link" href="https://mindnode.com/" target="_blank" rel="noopener"
>MindNode&lt;/a>&lt;/h1>
&lt;p>一款思维导图软件，能够让我们快速的创建出美观的思维导图，并且具有iPhone和iPad客户端，支持 iCloud Drive 和 HandsOff 协作功能。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-df4a8456895184b9.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="MindNode.jpg"
>&lt;/p>
&lt;h1 id="1passwordhttps1passwordcom">&lt;a class="link" href="https://1password.com/" target="_blank" rel="noopener"
>1Password&lt;/a>&lt;/h1>
&lt;p>1Password 可以记住你所有的密码并保障他们的安全。你只需要记住主密码即可。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-4a756ab7d9fb2a15.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="1Password.png"
>&lt;/p>
&lt;h1 id="tickeyshttpsgithubcomyingdevtickeys">&lt;a class="link" href="https://github.com/yingDev/Tickeys" target="_blank" rel="noopener"
>Tickeys&lt;/a>&lt;/h1>
&lt;p>一款能够在打字时模拟机械键盘音效的应用，此外还能模拟冒泡、打字机、剑气、爆裂鼓手的音效。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-c235f8661aafa5d2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="Tickeys.png"
>&lt;/p>
&lt;h1 id="shazamhttpswwwshazamcomzh">&lt;a class="link" href="https://www.shazam.com/zh" target="_blank" rel="noopener"
>Shazam&lt;/a>&lt;/h1>
&lt;p>一款音乐识别软件。在打开过程中会接收周围声音，一旦侦测到歌曲，就弹出推送通知。点击顶部菜单栏的 Shazam 图标可以开/关接收功能，或者查看所有识别出的歌曲。点某一首歌曲的可以跳到详情网页，查看专辑、歌手、同专辑音乐等详细信息。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-1217586577f2e014.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="Shazam.png"
>
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-6178e88d44805d44.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="歌曲的详情网页.png"
>&lt;/p>
&lt;h1 id="bartenderhttpswwwmacbartendercom">&lt;a class="link" href="https://www.macbartender.com/" target="_blank" rel="noopener"
>Bartender&lt;/a>&lt;/h1>
&lt;p>一款非常实用的菜单栏管理小助手。用Bartender来对杂乱的菜单栏进行管理是再好不过的了。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-42d3b915ddafb37a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="Bartender"
>&lt;/p>
&lt;p>&lt;strong>Mark Man&lt;/strong>
下载地址：http://www.getmarkman.com/ 。
高效的设计稿标注、测量工具。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-ab34dbfc9f6c5b65.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="Mark Man"
>&lt;/p>
&lt;h1 id="paintcodehttpswwwpaintcodeappcom">&lt;a class="link" href="https://www.paintcodeapp.com/" target="_blank" rel="noopener"
>PaintCode&lt;/a>&lt;/h1>
&lt;p>简单的矢量图形绘图应用程序，能画出美丽的控件，图标或其他UI界面元素并直接生成适用于iOS或者OS X或者Java或者Web的代码。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-8921479f65a45b02.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="PaintCode"
>&lt;/p>
&lt;h1 id="reflectorhttpswwwairsquirrelscomreflector">&lt;a class="link" href="https://www.airsquirrels.com/reflector" target="_blank" rel="noopener"
>Reflector&lt;/a>&lt;/h1>
&lt;p>iOS录屏、AirPlay镜像工具。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-4758734ea9ecef50.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="Reflector"
>&lt;/p>
&lt;h1 id="charleshttpswwwcharlesproxycom">&lt;a class="link" href="https://www.charlesproxy.com/" target="_blank" rel="noopener"
>Charles&lt;/a>&lt;/h1>
&lt;p>Mac上的抓包工具
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-ed22abad9a73a10d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="Charles"
>&lt;/p>
&lt;h1 id="navicat-premiumhttpswwwnavicatcomenproductsnavicat-premium">&lt;a class="link" href="https://www.navicat.com/en/products/navicat-premium" target="_blank" rel="noopener"
>Navicat Premium&lt;/a>&lt;/h1>
&lt;p>强大的数据库管理工具
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-aeaf94ccc00b733f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="Navicat Premium"
>&lt;/p>
&lt;h1 id="gitnotehttpsgitnoteappcom">&lt;a class="link" href="https://gitnoteapp.com/" target="_blank" rel="noopener"
>GitNote&lt;/a>&lt;/h1>
&lt;p>一款基于 Git 的云笔记工具，支持 Windows、macOS、Linux，使用 Git 仓库作为数据保存，如 GitHub、GitLab 等，内置 git 支持，依托 Git 仓库的特性，拥有历史版本、私密笔记、无限空间等特点。&lt;/p>
&lt;p>支持MarkDown、思维导图、流程图等等。&lt;/p>
&lt;p>&lt;img src="https://lisongrc.github.io/images/GitNote.jpeg"
loading="lazy"
alt="GitNote"
>&lt;/p>
&lt;h1 id="google-drive-file-streamhttpswwwgooglecomintlzh-cn_alldrivedownload">&lt;a class="link" href="https://www.google.com/intl/zh-CN_ALL/drive/download/" target="_blank" rel="noopener"
>Google Drive File Stream&lt;/a>&lt;/h1>
&lt;p>谷歌硬盘同步工具，可根据不同的文件夹设置在线还是离线使用。&lt;/p>
&lt;p>&lt;img src="https://lisongrc.github.io/images/GoogleDriveFileStream.png"
loading="lazy"
alt="GoogleDriveFileStream"
>&lt;/p>
&lt;h1 id="typorahttpstyporaio">&lt;a class="link" href="https://typora.io/" target="_blank" rel="noopener"
>Typora&lt;/a>&lt;/h1>
&lt;p>Typora 是一款支持实时预览的 Markdown 文本编辑器&lt;/p>
&lt;p>&lt;img src="https://typora.io/img/new/lists.png"
loading="lazy"
alt="Typora"
>&lt;/p>
&lt;h1 id="marktexthttpsgithubcommarktextmarktext">&lt;a class="link" href="https://github.com/marktext/marktext" target="_blank" rel="noopener"
>marktext&lt;/a>&lt;/h1>
&lt;p>一款开源的编写Markdown的工具。&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/marktext/marktext/develop/docs/marktext.png"
loading="lazy"
alt="marktext"
>&lt;/p></description></item><item><title>Linux使用相关的一些东西</title><link>https://lisongrc.github.io/p/20210391370673/</link><pubDate>Sat, 27 Mar 2021 23:05:38 +0000</pubDate><guid>https://lisongrc.github.io/p/20210391370673/</guid><description>&lt;meta name="referrer" content="no-referrer"/>
&lt;p>本文记录一些我使用Linux时遇到的一些东西，因为我主要用&lt;a class="link" href="https://www.debian.org/" target="_blank" rel="noopener"
>Debian&lt;/a>，所以这些基本上都是在Debian环境下的。&lt;/p>
&lt;h1 id="启用root帐户登录ssh">启用root帐户登录ssh&lt;/h1>
&lt;p>先用其它帐户登录ssh，然后su到root输入密码登录，然后修改 &lt;code>/etc/ssh/sshd_config&lt;/code> ：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#PermitRootLogin prohibit-password&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">PermitRootLogin yes
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后重启ssh服务，就可以root用户登录ssh了：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">/etc/init.d/ssh restart
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="设置或者修改时区">设置或者修改时区&lt;/h1>
&lt;p>检查当前时区：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">timedatectl
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>修改时区：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">sudo timedatectl set-timezone your_time_zone
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>例如修改为Shanghai:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">sudo timedatectl set-timezone Asia/Shanghai
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>至于具体有哪些时区可用呢，可以用 &lt;code>timedatectl list-timezones&lt;/code> 命令查看或者去 &lt;code>/usr/share/zoneinfo&lt;/code> 目录里面看。&lt;/p>
&lt;h1 id="自定义开机启动项">自定义开机启动项&lt;/h1>
&lt;p>首先，进入 &lt;code>/etc/init.d&lt;/code> 目录中：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> /etc/init.d/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>你会发现里面已经有一些启动项了。然后我们创建一个自己的：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">vim MyTest
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在里面输入以下内容：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#!/bin/sh
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">### BEGIN INIT INFO&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Provides: MyTest&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Required-Start: $network $remote_fs $local_fs&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Required-Stop: $network $remote_fs $local_fs&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Default-Start: 2 3 4 5&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Default-Stop: 0 1 6&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Short-Description: MyTest&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Description: MyTest&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">### END INIT INFO&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;Hello World !&amp;#34;&lt;/span> &amp;gt;&amp;gt; ~/mytest.txt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">exit&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这个是一个大概的模板，其中 &lt;code>echo &amp;quot;Hello World !&amp;quot; &amp;gt;&amp;gt; ~/mytest.txt&lt;/code> 部分就是系统启动时要执行的命令，意思在指定文件里写入一句话。你可以在根据自己的需要写一些命令。&lt;/p>
&lt;p>写完保存之后，给文件加上可执行的属性：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">chmod +x MyTest
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后，将脚本加入开机启动项中：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">update-rc.d MyTest defaults
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果需要删除这个开机启动项，则使用命令：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">update-rc.d -f MyTest remove
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>nmap和masscan的使用</title><link>https://lisongrc.github.io/p/202103f85f9aaa/</link><pubDate>Thu, 25 Mar 2021 22:53:10 +0000</pubDate><guid>https://lisongrc.github.io/p/202103f85f9aaa/</guid><description>&lt;p>&lt;a class="link" href="https://nmap.org/man/zh/" target="_blank" rel="noopener"
>nmap&lt;/a> 和 &lt;a class="link" href="https://github.com/robertdavidgraham/masscan" target="_blank" rel="noopener"
>masscan&lt;/a> 都是出名的端口扫描工具，本文讲解一下大概怎么使用。&lt;/p>
&lt;h1 id="nmap">nmap&lt;/h1>
&lt;p>nmap是一个老牌的互联网端口扫描器。&lt;/p>
&lt;h2 id="安装">安装&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">brew install nmap
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="使用">使用&lt;/h2>
&lt;p>一个最简单的例子，扫描ip &lt;code>10.0.0.0&lt;/code>的一些已知协议的端口：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">nmap 10.0.0.0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>不判断主机是否在线：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">nmap 10.0.0.0 -Pn
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>扫描多个ip:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">nmap 10.0.0.0/24 -Pn
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">nmap 10.0.1-255.1-255 -Pn
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>扫描指定端口：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">nmap 10.0.0.0 -Pn -p20-200,7777,8888
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>只显示开放端口：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">nmap 10.0.0.0 -Pn -p0-65525 --open
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>从文件读取要扫描的ip：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">nmap -Pn --open -iL ip.txt
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>将结果输出到文件：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">nmap 10.0.0.0/8 -Pn --open -oG result.txt
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="masscan">masscan&lt;/h1>
&lt;p>masscan号称是最快的互联网端口扫描器，可以在六分钟内扫遍互联网。也支持nmap的一些参数设置。&lt;/p>
&lt;h2 id="安装-1">安装&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">brew install masscan
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="使用-1">使用&lt;/h2>
&lt;p>一个最简单的例子，扫描ip &lt;code>10.0.0.0&lt;/code>的80端口:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">masscan -p80 10.0.0.0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>扫描ip段的多端口：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">masscan -p80 10.0.0.0/8
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>扫描多端口：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">masscan 10.0.0.0/8 -p0-65535
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>设置扫描速度：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">masscan 10.0.0.0/8 -p0-65535 --max-rate &lt;span class="m">10000&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>将结果输出到文件：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">masscan 10.0.0.0/8 -p0-65535 --max-rate &lt;span class="m">10000&lt;/span> -oJ result.json
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">masscan 10.0.0.0/8 -p0-65535 --max-rate &lt;span class="m">10000&lt;/span> -oL result.txt
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>从文件读取要扫描的ip：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">masscan -p0-65535 --max-rate &lt;span class="m">10000&lt;/span> -iL ip.txt -oJ result.json
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>使用配置文件：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"># myscan.conf
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">rate = 100000.00
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">output-format = xml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">output-status = all
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">output-filename = scan.xml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ports = 0-65535
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">range = 0.0.0.0-255.255.255.255
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">excludefile = exclude.txt
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">masscan -c myscan.conf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>更过高级和详细的用法可以去看官方文档。&lt;/p></description></item><item><title>Xcode好用的快捷键</title><link>https://lisongrc.github.io/p/2021034535997/</link><pubDate>Sat, 06 Mar 2021 21:58:55 +0000</pubDate><guid>https://lisongrc.github.io/p/2021034535997/</guid><description>&lt;p>这片文章总结一些好用的Xcode快捷键，可以提高开发的效率。&lt;/p>
&lt;h1 id="对应键位">对应键位&lt;/h1>
&lt;blockquote>
&lt;p>⌘：command&lt;/p>
&lt;p>⌥：option&lt;/p>
&lt;p>⌃：control&lt;/p>
&lt;p>⇧：shift&lt;/p>
&lt;/blockquote>
&lt;h1 id="xcode常用快捷键">Xcode常用快捷键&lt;/h1>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>快捷键&lt;/th>
&lt;th>含义&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>⌘ + [ ]&lt;/td>
&lt;td>左右移动代码&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>⌘ + ⌥ + [ ]&lt;/td>
&lt;td>上下移动代码&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>⌃ + D&lt;/td>
&lt;td>删除光标右侧字符&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>⌃ + K&lt;/td>
&lt;td>删除本行光标后面所有字符&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>⌃ + \&lt;/td>
&lt;td>依次回到编辑过的地方&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>⌘ + ⌃ + ↑↓&lt;/td>
&lt;td>&lt;code>.h&lt;/code>与&lt;code>.m&lt;/code>之间切换&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>⌘ + ⌃ + E&lt;/td>
&lt;td>批量高亮并修改一个变量&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>⌘ + ⌃ + J&lt;/td>
&lt;td>跳到类或者变量定义的地方&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>⌘ + L&lt;/td>
&lt;td>快速跳转到特定行&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>⌘ + ⇧ + j&lt;/td>
&lt;td>快速定位当前文件在项目文件中的位置&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>⌘ + ⇧ + O&lt;/td>
&lt;td>快速搜索打开文件和类&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h1 id="cheatsheet">CheatSheet&lt;/h1>
&lt;p>大家可以安装CheatSheet这个app，然后长按⌘键就会出现当前使用的app的快捷键。这样如果忘了某个快捷键可以快速查找。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">brew install cheatsheet
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Hexo切换NexT主题</title><link>https://lisongrc.github.io/p/202103259164c9/</link><pubDate>Tue, 02 Mar 2021 12:44:06 +0000</pubDate><guid>https://lisongrc.github.io/p/202103259164c9/</guid><description>&lt;p>Hexo默认的主题是 &lt;code>landscape&lt;/code>，由于它的功能和样式我都不太喜欢，所以决定换个样式玩玩。&lt;/p>
&lt;p>找Hexo主题的话可以去Github搜索 &lt;code>hexo-theme&lt;/code>，然后都点进去看看，挑一个自己喜欢的样式；一般主题下都有使用教程。&lt;/p>
&lt;p>这里以 &lt;a class="link" href="https://github.com/theme-next/hexo-theme-next" target="_blank" rel="noopener"
>hexo-theme-next&lt;/a> 为例。&lt;/p>
&lt;h1 id="安装-next">安装 NexT&lt;/h1>
&lt;p>执行以下命令会把 &lt;code>NexT &lt;/code> 主题clone到博客的 &lt;code>themes/next&lt;/code> 目录下。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">cd hexo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git clone https://github.com/theme-next/hexo-theme-next themes/next
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后将Hexo根目录下的 &lt;code>_config.yml&lt;/code> 里面的 &lt;code>theme&lt;/code> 设置成 &lt;code>next&lt;/code>：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">theme: next
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后 &lt;code>hexo s&lt;/code> 启动服务器，刷新自己的博客发现样式已经变了。下一步我们将要更改一些主题的设定，包括个性化以及集成第三方服务&lt;/p>
&lt;h1 id="选择-scheme">选择 Scheme&lt;/h1>
&lt;p>NexT可以通过Scheme提供多种不同的外观，Scheme 的切换通过更改 &lt;code>themes/next&lt;/code> 目录下的 &lt;code>_config.yml&lt;/code> 文件，搜索 &lt;code>scheme&lt;/code> 关键字，可以看到有四种，你可以都试一试，选择自己喜欢的。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"># Schemes
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">scheme: Muse
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">#scheme: Mist
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">#scheme: Pisces
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">#scheme: Gemini
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="详细设置">详细设置&lt;/h1>
&lt;p>这个主题的一些详细设置，比如添加菜单、添加分类什么的，可以看 &lt;a class="link" href="https://theme-next.iissnan.com/" target="_blank" rel="noopener"
>官方文档&lt;/a> ，讲的很详细。&lt;/p></description></item><item><title>给博客绑定域名并启用HTTPS</title><link>https://lisongrc.github.io/p/2021039700ba13/</link><pubDate>Tue, 02 Mar 2021 01:12:48 +0000</pubDate><guid>https://lisongrc.github.io/p/2021039700ba13/</guid><description>&lt;p>你可能觉得 username.gitlab.io 和 username.github.io 这样的域名有点长，或者说不好看，可以设置用自己的域名来访问自己的博客，接下来我们一个一个说。&lt;/p>
&lt;h1 id="gitlab-pages">GitLab Pages&lt;/h1>
&lt;p>在仓库的 &lt;code>Settings -&amp;gt; Pages&lt;/code> 里面，点击 &lt;code>New Domain&lt;/code> 出现这个界面：&lt;/p>
&lt;p>&lt;img src="https://lisongrc.github.io/images/NewPagesDomain.png"
loading="lazy"
>&lt;/p>
&lt;p>输入自己的域名然后点击 &lt;code>Create&lt;/code> 出现这个界面：&lt;/p>
&lt;p>&lt;img src="https://lisongrc.github.io/images/PagesDomain.png"
loading="lazy"
>&lt;/p>
&lt;p>可以看到，它让我们加一个 &lt;code>CNAME&lt;/code> 记录将域名解析到gitlab.io上，然后需要设置一个 &lt;code>TXT&lt;/code> 记录为那一长串字符。比如在 &lt;code>DNSPod&lt;/code> 里是这样设置的：&lt;/p>
&lt;p>&lt;img src="https://lisongrc.github.io/images/DnsPod%e9%85%8d%e7%bd%aeGitLab.png"
loading="lazy"
>&lt;/p>
&lt;p>GitLab还会用 &lt;code> Let's Encrypt&lt;/code> 为我们自动生成证书，这样就可以启用HTTPS了。&lt;/p>
&lt;p>配置完成后稍等一会，就可以用自己的域名访问GitLab博客了。&lt;/p>
&lt;h1 id="github-pages">GitHub Pages&lt;/h1>
&lt;p>在仓库的 &lt;code>GitHub Pages -&amp;gt; Custom domain&lt;/code> 里输入自己的域名，点击 &lt;code>Save&lt;/code> ；然后勾选上 &lt;code>Enforce HTTPS&lt;/code> 启用HTTPS（可能需要等一会才可以勾选）。&lt;/p>
&lt;p>&lt;img src="https://lisongrc.github.io/images/github_domain.png"
loading="lazy"
>&lt;/p>
&lt;p>然后需要加一个 &lt;code>CNAME&lt;/code> 记录将域名解析到github.io上，比如在 &lt;code>DNSPod&lt;/code> 里是这样设置的：&lt;/p>
&lt;p>&lt;img src="https://lisongrc.github.io/images/DnsPod%e9%85%8d%e7%bd%aeGitHub.png"
loading="lazy"
>&lt;/p>
&lt;p>配置完成后稍等一会，就可以用自己的域名访问GitHub博客了。&lt;/p>
&lt;p>为了防止以后每次 &lt;code>hexo d&lt;/code> 会清空 &lt;code>CNAME&lt;/code> 文件导致GitHub Pages域名解绑，需要在本地博客的 &lt;code>source&lt;/code>目录下创建一个 &lt;code>CNAME&lt;/code> 文件，文件内容为你的域名，例如：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">blog.lisong.com
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Hexo搭建个人博客并部署到Gitlab和GitHub</title><link>https://lisongrc.github.io/p/202102d52b09e8/</link><pubDate>Sun, 28 Feb 2021 22:37:01 +0000</pubDate><guid>https://lisongrc.github.io/p/202102d52b09e8/</guid><description>&lt;h1 id="前言">前言&lt;/h1>
&lt;p>之前在一些平台写过一段时间博客，后来由于各种原因就慢慢荒废了；最近心血来潮想要把一些东西记录下来，所以决定搭建一个博客玩玩。&lt;/p>
&lt;h1 id="hexo介绍">Hexo介绍&lt;/h1>
&lt;p>&lt;a class="link" href="https://hexo.io/zh-cn/" target="_blank" rel="noopener"
>Hexo&lt;/a> 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。&lt;/p>
&lt;h1 id="hexo安装">Hexo安装&lt;/h1>
&lt;p>我用的Mac系统，所以直接homebrew安装:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">brew install hexo
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="hexo建站">Hexo建站&lt;/h1>
&lt;p>安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">hexo init &amp;lt;folder&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>新建完成后，文件夹的目录大致如下:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── _config.landscape.yml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── _config.yml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── package.json
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── scaffolds
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│   ├── draft.md
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│   ├── page.md
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│   └── post.md
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── source
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│   └── _posts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│   └── hello-world.md
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── themes
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">└── yarn.lock
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>_config.yml&lt;/code> 是一些配置信息，你可以在此配置大部分的参数。
&lt;code>package.json&lt;/code> 是依赖的一些包。
&lt;code>scaffolds&lt;/code> 是模版文件夹。
&lt;code>source&lt;/code> 是存放用户资源的地方，那个 &lt;code>hello-world.md&lt;/code> 就是默认生成的一篇文章。
&lt;code>themes&lt;/code> 是主题文件夹，你可以在里面配置自己喜欢的主题。&lt;/p>
&lt;h1 id="hexo指令">Hexo指令&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">hexo g
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>生成静态文件，在 &lt;code>public&lt;/code> 目录下。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">hexo s
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>启动本地服务器。打开 http://localhost:4000/ 就可以看到我们的博客啦。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">hexo new &amp;#34;article title&amp;#34;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>新建一篇文章。在 &lt;code>source\_posts&lt;/code> 目录下就多了一个.md文件。&lt;/p>
&lt;h1 id="将博客部署到gitlab-pages">将博客部署到GitLab Pages&lt;/h1>
&lt;p>在&lt;a class="link" href="https://gitlab.com/" target="_blank" rel="noopener"
>Gitlab&lt;/a>创建一个repository，名字为&lt;code>username.gitlab.io&lt;/code>，username就是你的Gitlab用户名。&lt;/p>
&lt;p>在博客目录下生成git，并配置远端仓库，然后提交代码。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">git init
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git remote add origin git@gitlab.com:username/username.gitlab.io.git
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在你的博客目录下新建一个 &lt;code>.gitlab-ci.yml&lt;/code> 文件内容如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">image: node:10-alpine # use nodejs v10 LTS
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cache:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> paths:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - node_modules/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">before_script:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - npm install hexo-cli -g
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - npm install
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pages:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> script:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - hexo generate
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> artifacts:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> paths:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - public
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> only:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - master
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>GitLab CI 会自动开始运行，构建成功以后稍等几分钟，打开 &lt;a class="link" href="https://username.gitlab.io" target="_blank" rel="noopener"
>https://username.gitlab.io&lt;/a> 应该就能看到自己的博客了。&lt;/p>
&lt;p>如果想隐藏博客源码，又不想影响博客的正常访问，可以在仓库的 &lt;code>Settings -&amp;gt; General -&amp;gt; Visibility, project features, permissions&lt;/code> 里面将仓库权限设置为 &lt;code>private&lt;/code>，然后把下面的 &lt;code>Pages&lt;/code> 选项改为 &lt;code>Everyone&lt;/code>。&lt;/p>
&lt;h1 id="将博客部署到github-pages">将博客部署到GitHub Pages&lt;/h1>
&lt;p>在这里我将继续用Gitlab的仓库存储博客源码，将生成的静态博客部署到Github。&lt;/p>
&lt;p>在&lt;a class="link" href="https://github.com/" target="_blank" rel="noopener"
>GitHub&lt;/a>创建一个repository，名字为&lt;code>username.github.io&lt;/code>，username就是你的GitHub用户名。如果是免费账户的话，repository要是public的，不然不能启用GitHub Pages。&lt;/p>
&lt;p>安装 &lt;a class="link" href="https://github.com/hexojs/hexo-deployer-git" target="_blank" rel="noopener"
>hexo-deployer-git&lt;/a> :&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">npm install hexo-deployer-git --save
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>修改 &lt;code>_config.yml&lt;/code> 里面的 &lt;code>deploy&lt;/code> 配置改为&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">deploy:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> type: git
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> repo: git@github.com:username/username.github.io.git
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> branch: main
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后运行以下命令，就会把生成的 &lt;code>public&lt;/code> 文件夹里的东西都push上去。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">hexo clean &amp;amp;&amp;amp; hexo d
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在Github上，打开项目的 &lt;code>Settings&lt;/code> ，找到 &lt;code>GitHub Pages&lt;/code> 设置，如果没有开启的话先开启，然后 &lt;code>Branch&lt;/code>选择 &lt;code>main&lt;/code>，&lt;code>folder&lt;/code> 选择 &lt;code>/(root)&lt;/code>。勾选上 &lt;code>Enforce HTTPS&lt;/code> 启用HTTPS。&lt;/p>
&lt;p>都弄好之后，稍等片刻，打开 &lt;code>https://username.github.io&lt;/code> 就能看到自己的博客了。&lt;/p></description></item><item><title>iOSer都要知道的LLDB介绍与Chisel进阶</title><link>https://lisongrc.github.io/p/2019035053e96d/</link><pubDate>Sun, 10 Mar 2019 20:05:31 +0000</pubDate><guid>https://lisongrc.github.io/p/2019035053e96d/</guid><description>&lt;h1 id="一lldb">一、LLDB&lt;/h1>
&lt;h2 id="什么是lldb">什么是LLDB&lt;/h2>
&lt;p>&lt;a class="link" href="http://lldb.llvm.org/" target="_blank" rel="noopener"
>LLDB&lt;/a> 是一个有着 REPL 的特性和 C++ ,Python 插件的开源调试器。Xcode中绑定了LLDB，调试器允许你在程序运行时暂停它，可以查看变量的值，执行自定的指令。&lt;/p>
&lt;p>在程序里你需要的地方设置断点。当断点断住的时候你就能看到我们进入LLDB调试器了，下面这个界面对于iOS开发者来说应该不陌生了：&lt;/p>
&lt;p>&lt;img src="https://upload-images.jianshu.io/upload_images/1608265-b21e475e796f9734.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
>&lt;/p>
&lt;h2 id="几个常用命令">几个常用命令&lt;/h2>
&lt;h3 id="help">help&lt;/h3>
&lt;p>help命令可以查看LLDB的所有命令：&lt;/p>
&lt;p>&lt;img src="https://upload-images.jianshu.io/upload_images/1608265-7daddb7fbe67b3f6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
>&lt;/p>
&lt;p>它也可以查看某一条命令的使用帮助，比如：help print会打印print命令的使用帮助：&lt;/p>
&lt;p>&lt;img src="https://upload-images.jianshu.io/upload_images/1608265-30600ec8195bd1c6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
>&lt;/p>
&lt;h3 id="print">print&lt;/h3>
&lt;p>print命令的简化方式有p，po等等。p输出的是基本类型，po输出的Objective-C对象，调试器会输出这个 object 的 description。&lt;/p>
&lt;p>&lt;img src="https://upload-images.jianshu.io/upload_images/1608265-0f40e1f06b86ca57.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
>&lt;/p>
&lt;h3 id="expression命令">expression命令&lt;/h3>
&lt;p>expression的简写就是e。可以用来执行一条语句。例如：&lt;/p>
&lt;p>&lt;img src="https://upload-images.jianshu.io/upload_images/1608265-d80aa54982531ccc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
>&lt;/p>
&lt;p>LLDB还有很多命令可以使用，具体用法大家可以看&lt;a class="link" href="http://lldb.llvm.org/lldb-gdb.html" target="_blank" rel="noopener"
>文档&lt;/a>&lt;/p>
&lt;h1 id="二chisel">二、Chisel&lt;/h1>
&lt;h2 id="什么是chisel">什么是Chisel&lt;/h2>
&lt;p>&lt;a class="link" href="https://github.com/facebook/chisel" target="_blank" rel="noopener"
>Chisel&lt;/a>是facebook开源的一个LLDB命令的集合，它里面简化和扩展了LLDB的命令。使用它会更方便的调试我们的程序。在它的&lt;a class="link" href="https://github.com/facebook/chisel" target="_blank" rel="noopener"
>GitHub&lt;/a>上有详细的安装方式，这里就不赘述了。&lt;/p>
&lt;h2 id="常用命令">常用命令：&lt;/h2>
&lt;p>他的所有命令在它的&lt;a class="link" href="https://github.com/facebook/chisel/wiki" target="_blank" rel="noopener"
>wiki&lt;/a>上都列出来了，这里我挑几个示范一下。&lt;/p>
&lt;h3 id="pviews">pviews&lt;/h3>
&lt;p>这个命令可以按层级递归打印指定view的所有subView，相当于 UIView 的私有辅助方法 [view recursiveDescription]。如果不指定view的话就是默认window：&lt;/p>
&lt;p>&lt;img src="https://upload-images.jianshu.io/upload_images/1608265-aa29872aa258ce26.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
>&lt;/p>
&lt;p>&lt;img src="https://upload-images.jianshu.io/upload_images/1608265-a1267c2b03d8400d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
>&lt;/p>
&lt;h3 id="pvc">pvc&lt;/h3>
&lt;p>这个命令递归打印出viewController的层级，相当于 UIViewController 的一个私有辅助方法 [UIViewController _printHierarchy] ：&lt;/p>
&lt;p>&lt;img src="https://upload-images.jianshu.io/upload_images/1608265-45ed40f6223b3e5c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
>&lt;/p>
&lt;h3 id="visualize">visualize&lt;/h3>
&lt;p>它可以使用Mac的预览打开一个 UIImage, CGImageRef, UIView, 或 CALayer。 我们其实可以用这个功能来截图或者查看一个view的具体内容：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">(lldb) visualize 0x7feb5cf18210
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">(lldb) visualize self.view
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="maskunmask">mask/unmask&lt;/h3>
&lt;p>mask用来在view或者layer上覆盖一个半透明的矩形， unmask解除。当我们想找一个view的时候可以使用。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">(lldb) mask self.imageView
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">(lldb) unmask 0x7f8732e037b0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://upload-images.jianshu.io/upload_images/1608265-7d874313aee8c544.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
>&lt;/p>
&lt;h3 id="borderunborder">border/unborder&lt;/h3>
&lt;p>border可以给view或者layer添加边框，unborder解除。当我们想找一个view的时候可以使用。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">(lldb) border self.imageView
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">(lldb) unborder 0x7f8732e037b0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://upload-images.jianshu.io/upload_images/1608265-d20ce0e42c41a40f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
>&lt;/p>
&lt;h3 id="showhide">show/hide&lt;/h3>
&lt;p>显示隐藏一个view或者layer。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">(lldb) hide self.imageView
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">(lldb) show self.imageView
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="caflush">caflush&lt;/h3>
&lt;p>这个命令用来刷新UI，当我们改变了UI的时候，不用重新启动，使用caflush刷新UI就行。&lt;/p>
&lt;h3 id="presponder">presponder&lt;/h3>
&lt;p>打印响应者链：&lt;/p>
&lt;p>&lt;img src="https://upload-images.jianshu.io/upload_images/1608265-26be30d883b78ba6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
>&lt;/p>
&lt;h3 id="pclass">pclass&lt;/h3>
&lt;p>打印指定对象的class的继承关系：&lt;/p>
&lt;p>&lt;img src="https://upload-images.jianshu.io/upload_images/1608265-94672c144549b699.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
>&lt;/p>
&lt;h3 id="pjson">pjson&lt;/h3>
&lt;p>打印一个字典或者数组的json样式。&lt;/p>
&lt;p>&lt;img src="https://upload-images.jianshu.io/upload_images/1608265-2ea4767defffe64f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
>&lt;/p>
&lt;h3 id="slowanimunslowanim">slowanim/unslowanim&lt;/h3>
&lt;p>减慢动画的效果，检查一个动画哪里有问题时可以使用。&lt;/p>
&lt;h3 id="pdocspath">pdocspath&lt;/h3>
&lt;p>打印App的Documents路径：&lt;/p>
&lt;p>&lt;img src="https://upload-images.jianshu.io/upload_images/1608265-f05202f2aeb475cf.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
>&lt;/p>
&lt;h3 id="fv--fvc">fv &amp;amp; fvc&lt;/h3>
&lt;p>这两个命令是用来搜索当前内存中存在的view和viewController实例的命令，支持正则搜索。&lt;/p>
&lt;p>&lt;img src="https://upload-images.jianshu.io/upload_images/1608265-b29c00197c407177.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
>&lt;/p>
&lt;h3 id="taplog">taplog&lt;/h3>
&lt;p>点击某个view时，程序会暂停，会打印被点击的view。&lt;/p>
&lt;p>&lt;img src="https://upload-images.jianshu.io/upload_images/1608265-a50a583cc8abd76f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
>&lt;/p>
&lt;h3 id="pcurl">pcurl&lt;/h3>
&lt;p>把一个NSURLRequest (HTTP)打印成curl命令。&lt;/p>
&lt;p>更多的命令大家可以去&lt;a class="link" href="https://github.com/facebook/chisel/wiki" target="_blank" rel="noopener"
>官方文档&lt;/a>看。&lt;/p></description></item><item><title>iOS中@功能的完整实现</title><link>https://lisongrc.github.io/p/201805784ea6a5/</link><pubDate>Sat, 26 May 2018 23:31:55 +0000</pubDate><guid>https://lisongrc.github.io/p/201805784ea6a5/</guid><description>&lt;p>哼哼想不到吧，我又回来啦！好久没写文章了，以后尽量多写写吧。最近看到有人问@功能的需求，就大概写了写，先看看实现效果：
&lt;img src="https://upload-images.jianshu.io/upload_images/1608265-293158e5eb301f17.gif?imageMogr2/auto-orient/strip"
loading="lazy"
>&lt;/p>
&lt;p>这个功能的具体要求如下：&lt;/p>
&lt;blockquote>
&lt;p>1、一个@是由一个&lt;code>@&lt;/code>字符和一个空格&lt;code> &lt;/code>字符包起来的。
2、支持手写输入，只要符合就高亮显示。
3、支持从列表选择，选择后插入光标所在位置并高亮。
4、光标不能出现在一个@词中间，点击中间后自动移动到@词后面，长按滑动光标时也要越过@词。但是当用户长按选择文本时可以。
5、当光标正好在一个@词后面时，按删除键@词要整体删除。&lt;/p>
&lt;/blockquote>
&lt;p>先附上&lt;a class="link" href="https://github.com/lisongrc/ATDemo" target="_blank" rel="noopener"
>本文demo&lt;/a>，算下来代码也没有多少，还算简洁，大家一看就懂。其中包括的功能：&lt;/p>
&lt;blockquote>
&lt;p>1、输入框@编辑和选择功能，也就是上面那些需求。
2、输入框随着文字多少改变高度，并根据键盘随动。
3、发布后显示在列表上，并将符合的@高亮显示。
4、列表上的cell根据文字自动计算高度。
5、点击高亮词后可以捕获到事件，自己实现跳转就可以。&lt;/p>
&lt;/blockquote>
&lt;p>好了，下面大概讲解一下，有不明白的地方可以下载demo具体看看。&lt;/p>
&lt;h4 id="用到的第三方">用到的第三方&lt;/h4>
&lt;p>1、&lt;a class="link" href="https://github.com/HansPinckaers/GrowingTextView" target="_blank" rel="noopener"
>HPGrowingTextView&lt;/a>，用来实现输入框根据文字改变高度。使用和UITextView类似，代理也和UITextView差不多：
&lt;img src="https://upload-images.jianshu.io/upload_images/1608265-df453bab14eb0d62.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
>&lt;/p>
&lt;p>2、&lt;a class="link" href="https://github.com/molon/MLLabel" target="_blank" rel="noopener"
>MLLabel&lt;/a>，用来高亮显示label文本中的某些文字，支持自动识别一些常见的，也可以自定义规则。支持链接色和点击色等等一些配置。点击回调里面自己实现跳转就可以。&lt;/p>
&lt;p>&lt;img src="https://upload-images.jianshu.io/upload_images/1608265-2d74a6961c6202f6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
>&lt;/p>
&lt;p>集成这些第三方用的是cocoapods，关于cocoapods的教程可以看我的&lt;a class="link" href="https://www.jianshu.com/p/1711e131987d" target="_blank" rel="noopener"
>这篇文章&lt;/a>;&lt;/p>
&lt;h4 id="具体实现的一些细节">具体实现的一些细节&lt;/h4>
&lt;h6 id="1检验文本中所有的词">1、检验文本中所有的@词&lt;/h6>
&lt;p>用的是系统的&lt;code>NSRegularExpression&lt;/code>类，不熟悉的大家可以去查一下，这里就不细讲了：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="p">-&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">NSArray&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">NSTextCheckingResult&lt;/span> &lt;span class="o">*&amp;gt;&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nf">findAllAt&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 找到文本中所有的@
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">NSString&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">string&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">growingTextView&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">text&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">NSRegularExpression&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">regex&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">NSRegularExpression&lt;/span> &lt;span class="nl">regularExpressionWithPattern&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">kATRegular&lt;/span> &lt;span class="nl">options&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">NSRegularExpressionCaseInsensitive&lt;/span> &lt;span class="nl">error&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nb">nil&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">NSArray&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">matches&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">regex&lt;/span> &lt;span class="nl">matchesInString&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">string&lt;/span> &lt;span class="nl">options&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">NSMatchingReportProgress&lt;/span> &lt;span class="nl">range&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">NSMakeRange&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">string&lt;/span> &lt;span class="n">length&lt;/span>&lt;span class="p">])];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">matches&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h6 id="2输入框根据输入文字多少自动改变高度">2、输入框根据输入文字多少自动改变高度&lt;/h6>
&lt;p>在HPGrowingTextView的代理里面实现：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="p">-&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nf">growingTextView:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">HPGrowingTextView&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">growingTextView&lt;/span> &lt;span class="nf">willChangeHeight:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">float&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">height&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">commentViewHeight&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">constant&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">height&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">14&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h6 id="3输入框中的文字要随着文字改变实时将词高亮">3、输入框中的文字要随着文字改变实时将@词高亮&lt;/h6>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="p">-&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nf">growingTextViewDidChange:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">HPGrowingTextView&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">growingTextView&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">UITextRange&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">selectedRange&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">growingTextView&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">internalTextView&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">markedTextRange&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">NSString&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">newText&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">growingTextView&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">internalTextView&lt;/span> &lt;span class="nl">textInRange&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">selectedRange&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">newText&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">length&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 高亮输入框中的@
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">UITextView&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">textView&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">growingTextView&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">internalTextView&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">NSRange&lt;/span> &lt;span class="n">range&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">textView&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">selectedRange&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">NSMutableAttributedString&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">string&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[[&lt;/span>&lt;span class="n">NSMutableAttributedString&lt;/span> &lt;span class="n">alloc&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="nl">initWithString&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">textView&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">text&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="n">string&lt;/span> &lt;span class="nl">addAttribute&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">NSForegroundColorAttributeName&lt;/span> &lt;span class="nl">value&lt;/span>&lt;span class="p">:[&lt;/span>&lt;span class="n">UIColor&lt;/span> &lt;span class="n">blackColor&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="nl">range&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">NSMakeRange&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">string&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">string&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">length&lt;/span>&lt;span class="p">)];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">NSArray&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">matches&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="nb">self&lt;/span> &lt;span class="n">findAllAt&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">NSTextCheckingResult&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">match&lt;/span> &lt;span class="k">in&lt;/span> &lt;span class="n">matches&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="n">string&lt;/span> &lt;span class="nl">addAttribute&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">NSForegroundColorAttributeName&lt;/span> &lt;span class="nl">value&lt;/span>&lt;span class="p">:[&lt;/span>&lt;span class="n">UIColor&lt;/span> &lt;span class="n">redColor&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="nl">range&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">NSMakeRange&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">match&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">range&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">location&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">match&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">range&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">length&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">textView&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">attributedText&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">string&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">textView&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">selectedRange&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">range&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>首先判断是不是正在输入拼音，不是的话我们才应该处理。然后就是用正则找到所有的@词，用NSMutableAttributedString的方法加上高亮色，然后把最终的attributedString赋值给TextView，并将光标的位置复原为替换文本之前的状态。&lt;/p>
&lt;h6 id="4删除时词要整体删除">4、删除时@词要整体删除&lt;/h6>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="p">-&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">BOOL&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nf">growingTextView:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">HPGrowingTextView&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">growingTextView&lt;/span> &lt;span class="nf">shouldChangeTextInRange:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">NSRange&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">range&lt;/span> &lt;span class="nf">replacementText:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">NSString&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">text&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">([&lt;/span>&lt;span class="n">text&lt;/span> &lt;span class="nl">isEqualToString&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s">@&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">NSRange&lt;/span> &lt;span class="n">selectRange&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">growingTextView&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">selectedRange&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">selectRange&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">length&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//用户长按选择文本时不处理
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="nb">YES&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 判断删除的是一个@中间的字符就整体删除
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">NSMutableString&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">string&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">NSMutableString&lt;/span> &lt;span class="nl">stringWithString&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">growingTextView&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">text&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">NSArray&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">matches&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="nb">self&lt;/span> &lt;span class="n">findAllAt&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">BOOL&lt;/span> &lt;span class="n">inAt&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">NO&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">NSInteger&lt;/span> &lt;span class="n">index&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">range&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">location&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">NSTextCheckingResult&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">match&lt;/span> &lt;span class="k">in&lt;/span> &lt;span class="n">matches&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">NSRange&lt;/span> &lt;span class="n">newRange&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">NSMakeRange&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">match&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">range&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">location&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">match&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">range&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">length&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">NSLocationInRange&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">range&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">location&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">newRange&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">inAt&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">YES&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">index&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">match&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">range&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">location&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="n">string&lt;/span> &lt;span class="nl">replaceCharactersInRange&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">match&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">range&lt;/span> &lt;span class="nl">withString&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s">@&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">inAt&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">growingTextView&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">text&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">string&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">growingTextView&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">selectedRange&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">NSMakeRange&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">index&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nb">NO&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//判断是回车键就发送出去
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">([&lt;/span>&lt;span class="n">text&lt;/span> &lt;span class="nl">isEqualToString&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s">@&amp;#34;&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="nb">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">comments&lt;/span> &lt;span class="nl">addObject&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">growingTextView&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">text&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">growingTextView&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">text&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">@&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="nb">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">growingTextView&lt;/span> &lt;span class="n">resignFirstResponder&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="nb">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">tableView&lt;/span> &lt;span class="n">reloadData&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nb">NO&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nb">YES&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>首先判断替换词是空字符串就代表是删除操作，然后找出输入框文字中所有的@词，判断要删除的字符是否在任意一个@词中间，如果在就把输入框文字中这个@词整体删除，然后重新赋值给TextView，并纠正光标的位置。但是要判断用户在长按选择文本时不处理。&lt;/p>
&lt;h6 id="5光标不能点击落在一个词中间">5、光标不能点击落在一个@词中间：&lt;/h6>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="p">-&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nf">growingTextViewDidChangeSelection:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">HPGrowingTextView&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">growingTextView&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 光标不能点落在@词中间
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">NSRange&lt;/span> &lt;span class="n">range&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">growingTextView&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">selectedRange&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">range&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">length&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 选择文本时可以
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">return&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">NSArray&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">matches&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="nb">self&lt;/span> &lt;span class="n">findAllAt&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">NSTextCheckingResult&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">match&lt;/span> &lt;span class="k">in&lt;/span> &lt;span class="n">matches&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">NSRange&lt;/span> &lt;span class="n">newRange&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">NSMakeRange&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">match&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">range&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">location&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">match&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">range&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">length&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">NSLocationInRange&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">range&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">location&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">newRange&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">growingTextView&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">internalTextView&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">selectedRange&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">NSMakeRange&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">match&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">range&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">location&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">match&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">range&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">length&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>其实就是判断光标改变位置后是否在@词中间，如果在就把光标强制移动到@词后面。但是当用户长按选择文本时可以。&lt;/p>
&lt;h6 id="6从列表中选择人去他">6、从列表中选择人去@他&lt;/h6>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="p">-&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nf">prepareForSegue:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">UIStoryboardSegue&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">segue&lt;/span> &lt;span class="nf">sender:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">id&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">sender&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 去选择@的人
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="nb">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">growingTextView&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">internalTextView&lt;/span> &lt;span class="n">unmarkText&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">NSInteger&lt;/span> &lt;span class="n">index&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">growingTextView&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">text&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">length&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nb">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">growingTextView&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">isFirstResponder&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">index&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">growingTextView&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">selectedRange&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">location&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nb">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">growingTextView&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">selectedRange&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">length&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="nb">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">growingTextView&lt;/span> &lt;span class="n">resignFirstResponder&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">SelectUserController&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">atVC&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">segue&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">destinationViewController&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">atVC&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">selectBlock&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">^&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">NSString&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">UITextView&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">textView&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">growingTextView&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">internalTextView&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">NSString&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">insertString&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">NSString&lt;/span> &lt;span class="nl">stringWithFormat&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">kATFormat&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">NSMutableString&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">string&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">NSMutableString&lt;/span> &lt;span class="nl">stringWithString&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">textView&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">text&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="n">string&lt;/span> &lt;span class="nl">insertString&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">insertString&lt;/span> &lt;span class="nl">atIndex&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">index&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">growingTextView&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">text&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">string&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="nb">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">growingTextView&lt;/span> &lt;span class="n">becomeFirstResponder&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">textView&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">selectedRange&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">NSMakeRange&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">index&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">insertString&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">length&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>其实就是选择后将@词插入到光标位置，并将光标纠正到@词后面。&lt;/p>
&lt;h6 id="7评论列表cell上的高亮并可点击使用mllabel实现起来还是比较简单的">7、评论列表cell上的@高亮并可点击。使用MLLabel实现起来还是比较简单的：&lt;/h6>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="p">-&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nf">setComment:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">NSString&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">comment&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">_comment&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">comment&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">titleLabel&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">text&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">comment&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 高亮@
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">NSRegularExpression&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">regex&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">NSRegularExpression&lt;/span> &lt;span class="nl">regularExpressionWithPattern&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">kATRegular&lt;/span> &lt;span class="nl">options&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">NSRegularExpressionCaseInsensitive&lt;/span> &lt;span class="nl">error&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nb">nil&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="n">regex&lt;/span> &lt;span class="nl">enumerateMatchesInString&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">comment&lt;/span> &lt;span class="nl">options&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">NSMatchingReportProgress&lt;/span> &lt;span class="nl">range&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">NSMakeRange&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">comment&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">length&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nl">usingBlock&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">NSTextCheckingResult&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">_Nullable&lt;/span> &lt;span class="n">result&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">NSMatchingFlags&lt;/span> &lt;span class="n">flags&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">BOOL&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">_Nonnull&lt;/span> &lt;span class="n">stop&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="nb">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">titleLabel&lt;/span> &lt;span class="nl">addLinkWithType&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">MLLinkTypeUserHandle&lt;/span> &lt;span class="nl">value&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">comment&lt;/span> &lt;span class="nl">range&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">range&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">titleLabel&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">didClickLinkBlock&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">^&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">MLLink&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">link&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">NSString&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">linkText&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">MLLinkLabel&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">label&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">NSLog&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">@&amp;#34;点击了%@&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">linkText&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h6 id="8cell高度自动计算系统自己支持不了解的可以看我的这篇文章httpswwwjianshucomp64f0e1557562">8、cell高度自动计算，系统自己支持，不了解的可以看我的&lt;a class="link" href="https://www.jianshu.com/p/64f0e1557562" target="_blank" rel="noopener"
>这篇文章&lt;/a>。&lt;/h6>
&lt;p>好了，大概就是这么些东西，是不是很简单呢，如果还有不明白的地方就下载&lt;a class="link" href="https://github.com/lisongrc/ATDemo" target="_blank" rel="noopener"
>本文demo&lt;/a>仔细看看吧。&lt;/p></description></item><item><title>Runtime的运用和减少应用崩溃</title><link>https://lisongrc.github.io/p/201706dfe7f658/</link><pubDate>Sat, 03 Jun 2017 14:18:38 +0000</pubDate><guid>https://lisongrc.github.io/p/201706dfe7f658/</guid><description>&lt;p>Objective-C 是一个动态语言，它需要一个运行时系统来动态的创建类和对象、进行消息传递和转发。关于Runtime的知识大家可以参看&lt;a class="link" href="https://opensource.apple.com/tarballs/objc4/" target="_blank" rel="noopener"
>Apple开源的Runtime代码&lt;/a> 和&lt;a class="link" href="https://developer.apple.com/library/content/documentation/Cocoa/Conceptual/ObjCRuntimeGuide/Introduction/Introduction.html#//apple_ref/doc/uid/TP40008048-CH1-SW1" target="_blank" rel="noopener"
>Rumtime编程指南&lt;/a> 。&lt;/p>
&lt;p>本文总结一些其常用的方法。&lt;/p>
&lt;h1 id="一新建测试demo">一、新建测试Demo&lt;/h1>
&lt;p>我们先创建一个测试Demo如下图，其中TestClass是一个测试类，TestClass+Category是它的一个分类，NSObject+Runtime封装了一些Runtime的方法。大家可以在这里下载&lt;a class="link" href="https://github.com/lisongrc/RuntimeDemo" target="_blank" rel="noopener"
>Demo&lt;/a>。&lt;/p>
&lt;p>&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-886229082decc1c6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="Demo"
>&lt;/p>
&lt;p> 下面是几个类的主要部分：&lt;/p>
&lt;p>&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-cc6760e06809b906.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="TestClass.h"
>&lt;/p>
&lt;p>&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-c172fdcefb800b4c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="TestClass.m"
>&lt;/p>
&lt;p>&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-fe53c4089117125c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="TestClass&amp;#43;Category.h"
>&lt;/p>
&lt;p>&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-bbdd92ab3525f7a4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="TestClass&amp;#43;Category.m"
>&lt;/p>
&lt;h1 id="二runtime的封装">二、Runtime的封装&lt;/h1>
&lt;p>接下来我们就来看看NSObject+Runtime中的内容，其对Runtime常用的方法进行了简单的封装：&lt;/p>
&lt;p>&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-96e17f323e8dd503.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="Paste_Image.png"
>&lt;/p>
&lt;p>别着急，我们一个一个看。&lt;/p>
&lt;h2 id="1获取成员变量">1、获取成员变量&lt;/h2>
&lt;p>下面这个方法就是获取类的成员变量列表，其中包括属性生成的成员变量。我们可以用ivar_getTypeEncoding()来获取成员变量的类型，用ivar_getName()来获取成员变量的名称：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">+ (NSArray *)fetchIvarList
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> unsigned int count = 0;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Ivar *ivarList = class_copyIvarList(self, &amp;amp;count);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> NSMutableArray *mutableList = [NSMutableArray arrayWithCapacity:count];
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> for (unsigned int i = 0; i &amp;lt; count; i++ )
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> NSMutableDictionary *dic = [NSMutableDictionary dictionaryWithCapacity:2];
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> const char *ivarName = ivar_getName(ivarList[i]);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> const char *ivarType = ivar_getTypeEncoding(ivarList[i]);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> dic[@&amp;#34;type&amp;#34;] = [NSString stringWithUTF8String: ivarType];
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> dic[@&amp;#34;ivarName&amp;#34;] = [NSString stringWithUTF8String: ivarName];
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> [mutableList addObject:dic];
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> free(ivarList);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return [NSArray arrayWithArray:mutableList];
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>使用&lt;code>[TestClass fetchIvarList]&lt;/code>方法获取TestClass类的成员变量结果：&lt;/p>
&lt;p>&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-68b9595bcfbeea46.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="TestClass的成员变量列表"
>&lt;/p>
&lt;h2 id="2获取属性列表">2、获取属性列表&lt;/h2>
&lt;p>下面这个方法获取的是属性列表，包括私有和公有属性，也包括分类中的属性：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">+ (NSArray *)fetchPropertyList
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> unsigned int count = 0;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> objc_property_t *propertyList = class_copyPropertyList(self, &amp;amp;count);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> NSMutableArray *mutableList = [NSMutableArray arrayWithCapacity:count];
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> for (unsigned int i = 0; i &amp;lt; count; i++)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> const char *propertyName = property_getName(propertyList[i]);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> [mutableList addObject:[NSString stringWithUTF8String:propertyName]];
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> free(propertyList);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return [NSArray arrayWithArray:mutableList];
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>使用&lt;code>[TestClass fetchPropertyList]&lt;/code>获取TestClass的属性列表结果:&lt;/p>
&lt;p>&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-cd35b30a7aac027b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="TestClass的属性列表"
>&lt;/p>
&lt;h2 id="3获取实例方法">3、获取实例方法&lt;/h2>
&lt;p>下面这个方法就是获取类的实例方法列表，包括getter, setter, 分类中的方法等：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">+ (NSArray *)fetchInstanceMethodList
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> unsigned int count = 0;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Method *methodList = class_copyMethodList(self, &amp;amp;count);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> NSMutableArray *mutableList = [NSMutableArray arrayWithCapacity:count];
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> for (unsigned int i = 0; i &amp;lt; count; i++)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Method method = methodList[i];
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> SEL methodName = method_getName(method);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> [mutableList addObject:NSStringFromSelector(methodName)];
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> free(methodList);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return [NSArray arrayWithArray:mutableList];
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>使用&lt;code>[TestClass fetchInstanceMethodList]&lt;/code>获取TestClass的实例方法列表的结果：&lt;/p>
&lt;p>&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-a5d56f29800661d7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="TestClass实例方法列表"
>&lt;/p>
&lt;h2 id="4获取类方法列表">4、获取类方法列表&lt;/h2>
&lt;p>下方这个方法就是获取类的类方法列表：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">+ (NSArray *)fetchClassMethodList
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> unsigned int count = 0;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Method *methodList = class_copyMethodList(object_getClass(self), &amp;amp;count);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> NSMutableArray *mutableList = [NSMutableArray arrayWithCapacity:count];
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> for (unsigned int i = 0; i &amp;lt; count; i++)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Method method = methodList[i];
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> SEL methodName = method_getName(method);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> [mutableList addObject:NSStringFromSelector(methodName)];
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> free(methodList);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return [NSArray arrayWithArray:mutableList];
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>使用&lt;code>[TestClass fetchClassMethodList]&lt;/code>获取TestClass的类方法列表的结果：&lt;/p>
&lt;p>&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-0c1cd5c21aa2c156.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="TestClass类方法列表"
>&lt;/p>
&lt;h2 id="5获取协议列表">5、获取协议列表&lt;/h2>
&lt;p>下面是获取类所遵循协议列表的方法：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">+ (NSArray *)fetchProtocolList
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> unsigned int count = 0;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> __unsafe_unretained Protocol **protocolList = class_copyProtocolList(self, &amp;amp;count);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> NSMutableArray *mutableList = [NSMutableArray arrayWithCapacity:count];
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> for (unsigned int i = 0; i &amp;lt; count; i++ )
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Protocol *protocol = protocolList[i];
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> const char *protocolName = protocol_getName(protocol);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> [mutableList addObject:[NSString stringWithUTF8String:protocolName]];
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return [NSArray arrayWithArray:mutableList];
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>使用&lt;code>[TestClass fetchProtocolList]&lt;/code>获取TestClass类所遵循的协议列表的结果：　&lt;/p>
&lt;p>&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-fb48a73483a7a5b7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="TestClass的协议列表"
>&lt;/p>
&lt;h2 id="6给类添加一个方法">6、给类添加一个方法&lt;/h2>
&lt;p>下面的方法就是给类添加方法。第一个参数是方法的SEL，第二个参数则是提供方法实现的SEL。这个可以用在找不到某个方法时就添加一个，不然有可能会崩溃。详见Demo。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">+ (void)addMethod:(SEL)methodSel methodImp:(SEL)methodImp;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Method method = class_getInstanceMethod(self, methodImp);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> IMP methodIMP = method_getImplementation(method);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> const char *types = method_getTypeEncoding(method);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> class_addMethod(self, methodSel, methodIMP, types);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="7交换实例方法">7、交换实例方法&lt;/h2>
&lt;p>下面的方法就是将类的两个实例方法进行交换。如果将originMethod与currentMethod的方法实现进行交换的话，调用originMethod时就会执行currentMethod的内容。详见Demo。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">+ (void)swapMethod:(SEL)originMethod currentMethod:(SEL)currentMethod;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Method firstMethod = class_getInstanceMethod(self, originMethod);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Method secondMethod = class_getInstanceMethod(self, currentMethod);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> method_exchangeImplementations(firstMethod, secondMethod);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="8交换类方法">8、交换类方法&lt;/h2>
&lt;p>下面的方法就是将类的两个类方法进行交换，与交换实例方法类似，详见Demo。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="p">+&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nf">swapClassMethod:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">SEL&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">originMethod&lt;/span> &lt;span class="nf">currentMethod:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">SEL&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">currentMethod&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Method&lt;/span> &lt;span class="n">firstMethod&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">class_getClassMethod&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">originMethod&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Method&lt;/span> &lt;span class="n">secondMethod&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">class_getClassMethod&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">currentMethod&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">method_exchangeImplementations&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">firstMethod&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">secondMethod&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="三利用runtime减少应用崩溃">三、利用Runtime减少应用崩溃&lt;/h1>
&lt;p>利用交换方法可以减少程序中的崩溃，例如数组越界等等。demo里面的Safe文件夹就是一些防止崩溃的分类，直接放进工程就可以了。&lt;/p>
&lt;p>&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-eaedc8b99447b10a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="Safe"
>&lt;/p>
&lt;p>&lt;strong>补充：如果有键盘推到后台崩溃的话，需要到build phase里给NSArray+Safe.m文件加上-fno-objc-arc标识&lt;/strong>。&lt;/p>
&lt;p>我们看一个例子，其他的大家可以去demo里面看。&lt;/p>
&lt;p>我们首先把&lt;code>__NSArrayI&lt;/code>的&lt;code>objectAtIndex&lt;/code>方法换成我们的&lt;code>ls_objectAtIndex&lt;/code>，然后方法里面判断但是否越界，是的话直接返回nil：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">[NSClassFromString(@&amp;#34;__NSArrayI&amp;#34;) swapMethod:@selector(objectAtIndex:) currentMethod:@selector(ls_objectAtIndex:)];
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- (id)ls_objectAtIndex:(NSUInteger)index
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if (index &amp;gt;= [self count])
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return nil;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return [self ls_objectAtIndex:index];
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后当我们想下面这样写的时候就不会崩溃了：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="n">NSArray&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">array&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="l">@[&lt;/span>&lt;span class="s">@&amp;#34;aa&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">@&amp;#34;ddd&amp;#34;&lt;/span>&lt;span class="l">]&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">array&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>好了，先说到这里吧。大家可以下载我的&lt;a class="link" href="https://github.com/lisongrc/RuntimeDemo" target="_blank" rel="noopener"
>demo&lt;/a>详细看一下。&lt;/p></description></item><item><title>iOS中使用Fastlane实现自动化打包和发布</title><link>https://lisongrc.github.io/p/201705146f90c7/</link><pubDate>Sun, 14 May 2017 00:12:27 +0000</pubDate><guid>https://lisongrc.github.io/p/201705146f90c7/</guid><description>&lt;h1 id="简介">简介&lt;/h1>
&lt;p>Fastlane是一套使用Ruby写的自动化工具集，用于iOS和Android的自动化打包、发布等工作，可以节省大量的时间。&lt;/p>
&lt;p>&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-f63702702cfa790f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="Fastlane"
>&lt;/p>
&lt;p>Github：https://github.com/fastlane/fastlane
官网：https://fastlane.tools/
文档：https://docs.fastlane.tools/&lt;/p>
&lt;p>在写这篇文章的时候，他在Github上已经有15000+ star。&lt;/p>
&lt;h1 id="安装">安装&lt;/h1>
&lt;p>1、首先要安装正确的 Ruby 版本。在终端窗口中用下列命令来确认:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">ruby -v
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>2、然后检查 Xcode 命令行工具是否安装。在终端窗口中输入命令：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">xcode-select --install
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果未安装，终端会开始安装，如果报错误：&lt;code>command line tools are already installed, use &amp;quot;Software Update&amp;quot; to install updates.&lt;/code>代表已经安装。&lt;/p>
&lt;p>3、以上依赖配置好之后就可以通过 rubygem 进行安装了：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">$ sudo gem install fastlane
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>安心等待一会，fastlane就安装完成了。&lt;/p>
&lt;h1 id="初始化">初始化&lt;/h1>
&lt;p>打开终端，cd到你的工程目录，然后执行&lt;code>fastlane init&lt;/code>：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">$ &lt;span class="nb">cd&lt;/span> to/your/ios/project
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ fastlane init
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>14:21:43&lt;span class="o">]&lt;/span>: Detected iOS/Mac project in current directory...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>14:21:43&lt;span class="o">]&lt;/span>: This setup will &lt;span class="nb">help&lt;/span> you get up and running in no time.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>14:21:43&lt;span class="o">]&lt;/span>: fastlane will check what tools you&lt;span class="s1">&amp;#39;re already using and set up
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">[14:21:43]: the tool automatically for you. Have fun!
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">[14:21:43]: Created new folder &amp;#39;&lt;/span>./fastlane&lt;span class="s1">&amp;#39;.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">[14:21:43]: $ xcodebuild -showBuildSettings -project ./xxx.xcodeproj
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">[14:21:48]: Your Apple ID (e.g. fastlane@krausefx.com): xxx@xxx.xom
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">[14:21:54]: Verifying that app is available on the Apple Developer Portal and iTunes Connect...
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">[14:21:54]: Starting login with user &amp;#39;&lt;/span>xxx@xxx.com&lt;span class="s1">&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">+----------------+--------------------------------------+
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">| Detected Values |
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">+----------------+--------------------------------------+
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">| Apple ID | xxx@xxx.com |
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">| App Name | xxx |
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">| App Identifier | com.xxx.xxx |
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">| Project | /Users/lisong/Desktop/xxx/x |
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">| | xx.xcodeproj |
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">+----------------+--------------------------------------+
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">[14:22:06]: Please confirm the above values (y/n)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">y
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">[14:22:09]: Created new file &amp;#39;&lt;/span>./fastlane/Appfile&lt;span class="s1">&amp;#39;. Edit it to manage your preferred app metadata information.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">[14:22:09]: Loading up &amp;#39;&lt;/span>deliver&lt;span class="s1">&amp;#39;, this might take a few seconds
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">[14:22:09]: Login to iTunes Connect (xxx@xxx.com)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">[14:22:13]: Login successful
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">+-----------------------+------------------------+
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">| deliver 2.30.1 Summary |
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">+-----------------------+------------------------+
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">| screenshots_path | ./fastlane/screenshots |
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">| metadata_path | ./fastlane/metadata |
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">| username | xxx@xxx.com |
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">| app_identifier | com.xxx.xxx |
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">| edit_live | false |
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">| platform | ios |
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">| skip_binary_upload | false |
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">| skip_screenshots | false |
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">| skip_metadata | false |
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">| force | false |
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">| submit_for_review | false |
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">| automatic_release | false |
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">| dev_portal_team_id | WKR87TTKML |
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">| overwrite_screenshots | false |
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">+-----------------------+------------------------+
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">[14:22:21]: Writing to &amp;#39;&lt;/span>fastlane/metadata/zh-Hans/description.txt&lt;span class="s1">&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">...
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">[14:22:21]: Writing to &amp;#39;&lt;/span>fastlane/metadata/review_information/notes.txt&lt;span class="s1">&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">[14:22:21]: Successfully created new configuration files.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">[14:22:22]: Successfully downloaded large app icon
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">[14:22:22]: Downloading all existing screenshots...
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">[14:22:27]: Downloading existing screenshot &amp;#39;&lt;/span>1_iphone4_1.1.jpg&lt;span class="s1">&amp;#39; for language &amp;#39;&lt;/span>zh-Hans&lt;span class="s1">&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">···
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">[14:22:34]: Downloading existing screenshot &amp;#39;&lt;/span>5_iphone6_5.5.jpg&lt;span class="s1">&amp;#39; for language &amp;#39;&lt;/span>zh-Hans&lt;span class="s1">&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">[14:22:34]: Successfully downloaded all existing screenshots
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">[14:22:34]: Successfully created new Deliverfile at path &amp;#39;&lt;/span>fastlane/Deliverfile&lt;span class="s1">&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">[14:22:34]: $ xcodebuild -list -project ./xxx.xcodeproj
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">[14:22:35]: &amp;#39;&lt;/span>snapshot&lt;span class="s1">&amp;#39; not enabled.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">[14:22:35]: &amp;#39;&lt;/span>cocoapods&lt;span class="s1">&amp;#39; enabled.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">[14:22:35]: &amp;#39;&lt;/span>carthage&lt;span class="s1">&amp;#39; not enabled.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">[14:22:35]: Created new file &amp;#39;&lt;/span>./fastlane/Fastfile&lt;span class="err">&amp;#39;&lt;/span>. Edit it to manage your own deployment lanes.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>14:22:35&lt;span class="o">]&lt;/span>: fastlane will collect the number of errors &lt;span class="k">for&lt;/span> each action to detect integration issues
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>14:22:35&lt;span class="o">]&lt;/span>: No sensitive/private information will be uploaded
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>14:22:35&lt;span class="o">]&lt;/span>: Learn more at https://github.com/fastlane/fastlane#metrics
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>14:22:35&lt;span class="o">]&lt;/span>: Successfully finished setting up fastlane
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在 &amp;ldquo;Your Apple ID&amp;rdquo; 这一步输入苹果开发者账号。在“Please confirm the above values”这一步，确认信息，没问题输入 y。然后，fastlane 会进行一系列的初始化操作，包括下载 App Store 上的元数据和截屏文件。&lt;/p>
&lt;p>等待初始化完成之后，工程目录下就多了一个 fastlane目录，其内容如下：&lt;/p>
&lt;p>&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-812d184b57793510.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="fastlane目录"
>&lt;/p>
&lt;p>咱们来看两个主要的，Appfile和Fastfile。&lt;/p>
&lt;h2 id="appfile">Appfile&lt;/h2>
&lt;p>Appfile用来存放app_identifier，apple_id和team_id。 &lt;a class="link" href="https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Appfile.md" target="_blank" rel="noopener"
>了解详情&lt;/a>，它的格式是这样的：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="line">&lt;span class="cl">&lt;span class="n">app_identifier&lt;/span> &lt;span class="s2">&amp;#34;com.xxx.xxx&amp;#34;&lt;/span> &lt;span class="c1"># app的bundle identifier&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">apple_id&lt;/span> &lt;span class="s2">&amp;#34;xxx@xxx.com&amp;#34;&lt;/span> &lt;span class="c1"># 你的Apple ID&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">team_id&lt;/span> &lt;span class="s2">&amp;#34;XXXXXXXXXX&amp;#34;&lt;/span> &lt;span class="c1"># Team ID&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">···&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>你也可以为每个lane(后面会讲到)提供不同的 app_identifier, apple_id 和 team_id，例如：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="line">&lt;span class="cl">&lt;span class="n">app_identifier&lt;/span> &lt;span class="s2">&amp;#34;com.aaa.aaa&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">apple_id&lt;/span> &lt;span class="s2">&amp;#34;aaa@aaa.com&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">team_id&lt;/span> &lt;span class="s2">&amp;#34;AAAAAAAAAA&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">for_lane&lt;/span> &lt;span class="ss">:inhouse&lt;/span> &lt;span class="k">do&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">app_identifier&lt;/span> &lt;span class="s2">&amp;#34;com.bbb.bbb&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">apple_id&lt;/span> &lt;span class="s2">&amp;#34;bbb@bbb.com&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">team_id&lt;/span> &lt;span class="s2">&amp;#34;AAAAAAAAAA&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这里就是为Fastfile中定义的:inhouse设置单独的信息。&lt;/p>
&lt;h2 id="fastfile">Fastfile&lt;/h2>
&lt;p>Fastfile管理你所创建的 lane， &lt;a class="link" href="https://github.com/fastlane/fastlane/tree/master/fastlane/docs#fastfile" target="_blank" rel="noopener"
>了解详情&lt;/a>。它的格式是这样的：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="line">&lt;span class="cl">&lt;span class="err">···&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 自动更新fastlane 工具&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># update_fastlane&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#需要的fastlane的最小版本，在每次执行之后会检查是否有新版本，如果有会在最后末尾追加新版本提醒&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">fastlane_version&lt;/span> &lt;span class="s2">&amp;#34;2.30.1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#默认使用平台是 ios，也就是说文件可以定义多个平台&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">default_platform&lt;/span> &lt;span class="ss">:ios&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">platform&lt;/span> &lt;span class="ss">:ios&lt;/span> &lt;span class="k">do&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">before_all&lt;/span> &lt;span class="k">do&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># ENV[&amp;#34;SLACK_URL&amp;#34;] = &amp;#34;https://hooks.slack.com/services/...&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">cocoapods&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">desc&lt;/span> &lt;span class="s2">&amp;#34;Runs all the tests&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">lane&lt;/span> &lt;span class="ss">:test&lt;/span> &lt;span class="k">do&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">scan&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">desc&lt;/span> &lt;span class="s2">&amp;#34;提交一个新的Beta版本到 Apple TestFlight&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">desc&lt;/span> &lt;span class="s2">&amp;#34;This will also make sure the profile is up to date&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">lane&lt;/span> &lt;span class="ss">:beta&lt;/span> &lt;span class="k">do&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># match(type: &amp;#34;appstore&amp;#34;) # more information: https://codesigning.guide&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">gym&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="ss">scheme&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Docment&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># Build your app - more options available&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">pilot&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># sh &amp;#34;your_script.sh&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">desc&lt;/span> &lt;span class="s2">&amp;#34;部署一个新版本到App Store&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">lane&lt;/span> &lt;span class="ss">:release&lt;/span> &lt;span class="k">do&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># match(type: &amp;#34;appstore&amp;#34;)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># snapshot&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">gym&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="ss">scheme&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Docment&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># Build your app - more options available&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">deliver&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="ss">force&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kp">true&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># frameit&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 你可以定义自己的lane&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">#执行lane成功后的回调&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">after_all&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">lane&lt;/span>&lt;span class="o">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># slack(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># message: &amp;#34;Successfully deployed new App Update.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># )&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 如果流程发生异常会走这里并终止&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">error&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">lane&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">exception&lt;/span>&lt;span class="o">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># slack(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># message: exception.message,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># success: false&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># )&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>我们也可以定义一个自己的lane：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="line">&lt;span class="cl"> &lt;span class="n">desc&lt;/span> &lt;span class="s2">&amp;#34;企业版&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">lane&lt;/span> &lt;span class="ss">:inHouse&lt;/span> &lt;span class="k">do&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">gym&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="ss">scheme&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;XXX&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="ss">export_method&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s2">&amp;#34;enterprise&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="ss">output_directory&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s2">&amp;#34;./build&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1"># 打包后的 ipa 文件存放的目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="ss">output_name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s2">&amp;#34;XXX.ipa&amp;#34;&lt;/span> &lt;span class="c1"># ipa 文件名&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>其中一个lane就是一个任务，里面是一个个的action组成的工作流。
利用目前支持的工具可以做所有包含自动化和可持续化构建的每个环节，例如：&lt;/p>
&lt;blockquote>
&lt;p>&lt;a class="link" href="https://github.com/fastlane/fastlane/tree/master/scan" target="_blank" rel="noopener"
>scan&lt;/a> 自动化测试工具，很好的封装了 Unit Test
&lt;a class="link" href="https://github.com/fastlane/fastlane/tree/master/sigh" target="_blank" rel="noopener"
>sigh&lt;/a> 针对于 iOS 项目开发证书和 Provision file 的下载工具
&lt;a class="link" href="https://github.com/fastlane/fastlane/tree/master/match" target="_blank" rel="noopener"
>match&lt;/a> 同步团队每个人的证书和 Provision file 的超赞工具
&lt;a class="link" href="https://github.com/fastlane/fastlane/tree/master/gym" target="_blank" rel="noopener"
>gym&lt;/a> 针对于 iOS 编译打包生成 ipa 文件
&lt;a class="link" href="https://github.com/fastlane/fastlane/tree/master/deliver" target="_blank" rel="noopener"
>deliver&lt;/a> 用于上传应用的二进制代码，应用截屏和元数据到 App Store
&lt;a class="link" href="https://github.com/fastlane/fastlane/tree/master/snapshot" target="_blank" rel="noopener"
>snapshot&lt;/a> 可以自动化iOS应用在每个设备上的本地化截屏过程&lt;/p>
&lt;/blockquote>
&lt;h1 id="执行">执行&lt;/h1>
&lt;p>定义完lane之后怎么执行呢？打开终端，切换到项目的根目录：执行&lt;code>fastlane lane'name&lt;/code>就可以了。成功之后会在相应的路径下生成ipa文件，如果报错的话就根据错误信息好好查看&lt;a class="link" href="https://docs.fastlane.tools/" target="_blank" rel="noopener"
>文档&lt;/a>。&lt;/p>
&lt;h1 id="其他">其他&lt;/h1>
&lt;p>1、这里是官方提供的一些&lt;a class="link" href="https://github.com/fastlane/examples" target="_blank" rel="noopener"
>例子&lt;/a>。&lt;/p>
&lt;p>2、想了解fastlane命令的话可以执行&lt;code>$ fastlane --help&lt;/code>&lt;/p>
&lt;p>3、查看可用任务的列表，可以执行命令&lt;code>$ fastlane lanes&lt;/code>&lt;/p>
&lt;p>4、fastlane也提供了很多&lt;a class="link" href="https://docs.fastlane.tools/actions/#plugins" target="_blank" rel="noopener"
>插件&lt;/a>方便我们使用，例如pgyer(发布app到蒲公英)。我们也可以打完包直接传到蒲公英上，具体的可以看蒲公英提供的&lt;a class="link" href="https://www.pgyer.com/doc/view/fastlane" target="_blank" rel="noopener"
>文档&lt;/a>。&lt;/p>
&lt;p>如果你感觉有些插件不符合自己的情况，你甚至可以&lt;a class="link" href="https://docs.fastlane.tools/plugins/create-plugin/" target="_blank" rel="noopener"
>自定义插件&lt;/a>&lt;/p>
&lt;p>5、多个 lane 的话实际上是可以相互调用的，这个其实特别实用。例如：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="line">&lt;span class="cl">&lt;span class="n">default_platform&lt;/span> &lt;span class="ss">:ios&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">platform&lt;/span> &lt;span class="ss">:ios&lt;/span> &lt;span class="k">do&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">lane&lt;/span> &lt;span class="ss">:prepare&lt;/span> &lt;span class="k">do&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">cocoapods&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">match&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">desc&lt;/span> &lt;span class="s1">&amp;#39;fastlane build&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;fastlane build type:adhoc&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">lane&lt;/span> &lt;span class="ss">:build&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">options&lt;/span>&lt;span class="o">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 调用上面的 prepare 任务&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">prepare&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="n">options&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:type&lt;/span>&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">when&lt;/span> &lt;span class="s1">&amp;#39;adhoc&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">adhoc&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">appstore&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">lane&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="n">adhoc&lt;/span> &lt;span class="k">do&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">···&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">lane&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="n">appstore&lt;/span> &lt;span class="k">do&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">···&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>6、我们可以在 Fastfile 文件中添加一个函数来设置version号和build号。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="line">&lt;span class="cl">&lt;span class="n">default_platform&lt;/span> &lt;span class="ss">:ios&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">prepare_version&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">options&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">increment_version_number&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="ss">version_number&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">options&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:version&lt;/span>&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">increment_build_number&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="ss">build_number&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">options&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="ss">:build&lt;/span>&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后可以在一个lane中使用这个函数：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="line">&lt;span class="cl">&lt;span class="n">lane&lt;/span> &lt;span class="ss">:appstore&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">options&lt;/span>&lt;span class="o">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">···&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">prepare_version&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">options&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">···&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后执行这个lane的时候：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">$ fastlane appstore version:2.4.0 build:2.0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>好啦，先说到这里吧，Fastlane能做的事情还有很多，大家可以去好好看看&lt;a class="link" href="https://docs.fastlane.tools/" target="_blank" rel="noopener"
>文档&lt;/a>，研究一些高级的用法吧！&lt;/p></description></item><item><title>Xcode自定义模板实践</title><link>https://lisongrc.github.io/p/201704535c2bd8/</link><pubDate>Thu, 13 Apr 2017 00:11:43 +0000</pubDate><guid>https://lisongrc.github.io/p/201704535c2bd8/</guid><description>&lt;p>好久没来写文章了，因为生活中有一些琐事，也因为工作比较忙。今天我们来聊聊Xcode的自定义模板。&lt;/p>
&lt;h1 id="为何要自定义xcode模板">为何要自定义Xcode模板&lt;/h1>
&lt;p>有时候公司会要求一定的代码规范，例如控制器中需要用&lt;code>#pragma mark - &lt;/code>来分割各个方法们，像这样：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#pragma mark - LifeCycle
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">-&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nf">dealloc&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">-&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nf">viewDidLoad&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">-&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nf">viewWillAppear:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">BOOL&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">animated&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#pragma mark - UITextFieldDelegate
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">-&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">BOOL&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nf">textFieldShouldReturn:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">UITextField&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">textField&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#pragma mark - Public
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#pragma mark - Private
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#pragma mark - Getter
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">-&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">NSString&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nf">name&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#pragma mark - Setter
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">-&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nf">setName:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">NSString&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">name&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这样不仅可以分割代码，方便阅读，而且可以方便找到某个方法：
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-14c1a33a378b8a5e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
>&lt;/p>
&lt;p>但是每创建一个类就写一遍这些是不是有点繁琐呢，这个时候就要用到Xcode的自定义模板功能了。&lt;/p>
&lt;h1 id="修改系统模板样式">修改系统模板样式&lt;/h1>
&lt;p>Xcode系统模板的路径是&lt;code>/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/Library/Xcode/Templates/&lt;/code>，文件夹里面有文件模板&lt;code>File Templates&lt;/code>和工程模板&lt;code>Project Templates&lt;/code>，分别对应创建文件时的选项和创建工程时的选项：&lt;/p>
&lt;p>&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-8e1012bf7ebe5fb4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="创建文件界面"
>&lt;/p>
&lt;p>&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-727c2467d531b57f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="创建工程界面"
>&lt;/p>
&lt;p>我们用的最多就是&lt;code>File Templates/Source/Cocoa Touch Class.xctemplate&lt;/code>里面的模板。里面长的是这样的：
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-6832c56d26b6646b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="Cocoa Touch Class.xctemplate"
>
例如我们今天需要改&lt;code>UIViewController&lt;/code>的模板，就需要改其中的&lt;code>UIViewControllerObjective-C&lt;/code>、 &lt;code>UIViewControllerSwift&lt;/code>、&lt;code>UIViewControllerXIBObjective-C&lt;/code>、&lt;code>UIViewControllerXIBSwift&lt;/code>。他们的区别从名字上就能看出来，就是OC与Swift，是否用Xib的区别。&lt;/p>
&lt;p>我们以OC并且不用Xib为例，打开UIViewControllerObjective-C中的&lt;code>___FILEBASENAME___.m&lt;/code>文件：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// ___FILENAME___
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// ___PROJECTNAME___
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Created by ___FULLUSERNAME___ on ___DATE___.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//___COPYRIGHT___
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#import &amp;#34;___FILEBASENAME___.h&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">@interface&lt;/span> &lt;span class="nc">___FILEBASENAMEASIDENTIFIER___&lt;/span> &lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">@end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">@implementation&lt;/span> &lt;span class="nc">___FILEBASENAMEASIDENTIFIER___&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">-&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nf">viewDidLoad&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="nb">super&lt;/span> &lt;span class="n">viewDidLoad&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Do any additional setup after loading the view.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">-&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nf">didReceiveMemoryWarning&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="nb">super&lt;/span> &lt;span class="n">didReceiveMemoryWarning&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Dispose of any resources that can be recreated.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/*
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">#pragma mark - Navigation
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">// In a storyboard-based application, you will often want to do a little preparation before navigation
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> // Get the new view controller using [segue destinationViewController].
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> // Pass the selected object to the new view controller.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">}
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">*/&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">@end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>是不是很熟悉，就是我们创建一个控制器后.m里面的代码。其中的一些宏的意义是：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>宏名&lt;/th>
&lt;th>意义&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>___FILENAME___ &lt;/code>&lt;/td>
&lt;td>文件名包括后缀&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>___PROJECTNAME___ &lt;/code>&lt;/td>
&lt;td>工程名&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>___FULLUSERNAME___ &lt;/code>&lt;/td>
&lt;td>用户的名字&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>___DATE___&lt;/code>&lt;/td>
&lt;td>当前日期，年/月/日&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>___COPYRIGHT___&lt;/code>&lt;/td>
&lt;td>版权&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>___FILEBASENAME___&lt;/code>&lt;/td>
&lt;td>不带后缀的文件名&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>___FILEBASENAMEASIDENTIFIER___ &lt;/code>&lt;/td>
&lt;td>不带后缀的文件名&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>这个文件默认是不让修改的，我们可以修改他的权限，或者复制一份到别处，修改完替换原文件。总之修改其中的内容为：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// ___FILENAME___
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// ___PROJECTNAME___
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Created by ___FULLUSERNAME___ on ___DATE___.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//___COPYRIGHT___
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#import &amp;#34;___FILEBASENAME___.h&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">@interface&lt;/span> &lt;span class="nc">___FILEBASENAMEASIDENTIFIER___&lt;/span> &lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">@end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">@implementation&lt;/span> &lt;span class="nc">___FILEBASENAMEASIDENTIFIER___&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#pragma mark - LifeCycle
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">-&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nf">viewDidLoad&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="nb">super&lt;/span> &lt;span class="n">viewDidLoad&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#pragma mark - UITableViewDelegate
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#pragma mark - Public
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#pragma mark - Private
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#pragma mark - Getter
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#pragma mark - Setter
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">@end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后把这个文件去替换原来的文件。替换成功后新建一个控制器，就会是我们自定义的结构了，如果没生效的话，可以重启下Xcode哦：
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-00d4d6fa1fe0f36a.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="新建一个控制器"
>&lt;/p>
&lt;p>相信到这里，其他的模板你也一定会改了吧。&lt;/p>
&lt;h1 id="使用自定义模板">使用自定义模板&lt;/h1>
&lt;p>如果更改系统模板会有问题，就是xcode更新后我们所做的更改就没有了。
为了解决这个问题，我们可以在&lt;code>~/Library/Developer/Xcode/Templates&lt;/code>路径下新建一个&lt;code>Templates&lt;/code>文件夹，再在&lt;code>Templates&lt;/code>里新建一个&lt;code>Custom&lt;/code>的文件夹，把系统的&lt;code>Cocoa Touch Class.xctemplate&lt;/code>复制进去，然后进行修改就可以了。&lt;/p>
&lt;p>这样在创建文件的时候，在最下面就会有你自定义的模板选项:
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-e5d1f02ca8c1384d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="选择模板"
>
好了，到这里大家应该都熟悉了Xcode模板的基本使用，快去探索更多高级用法吧！&lt;/p></description></item><item><title>iOS 9 通用链接（Universal Links）</title><link>https://lisongrc.github.io/p/20170242f0d4d/</link><pubDate>Fri, 03 Feb 2017 16:09:40 +0000</pubDate><guid>https://lisongrc.github.io/p/20170242f0d4d/</guid><description>&lt;h1 id="什么是universal-links">什么是Universal Links?&lt;/h1>
&lt;p>在iOS9之前，对于从各种从浏览器、Safari中唤醒APP的需求，我们通常只能使用scheme。但是这种方式需要提前判断系统中是否安装了能够响应此scheme的app，并且这种方式在微信中是被禁用了的。&lt;/p>
&lt;p>Universal Links是iOS9推出的一项功能，使你的应用可以通过传统的HTTP链接来启动APP(如果iOS设备上已经安装了你的app，不管在微信里还是在哪里)， 或者打开网页(iOS设备上没有安装你的app)。&lt;/p>
&lt;p>下面简单说下怎么使用Universal Links，具体的可以看&lt;a class="link" href="https://developer.apple.com/library/ios/documentation/General/Conceptual/AppSearch/UniversalLinks.html" target="_blank" rel="noopener"
>官方的说明文档&lt;/a>&lt;/p>
&lt;h1 id="怎么使用universal-links">怎么使用Universal Links&lt;/h1>
&lt;p>1.先决条件：你必须有一个域名,且这个域名需要支持https。&lt;/p>
&lt;p>2.需要在开发者中心做配置：找到对应的App ID，在Application Services列表里有Associated Domains一条，把它变为Enabled就可以了。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-fc8dfd8dbab131b6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="配置App ID支持Associated Domains"
>&lt;/p>
&lt;p>3.打开工程配置中的Associated Domains，在其中的Domains中填入你想支持的域名，必须以**applinks:**为前缀。&lt;/p>
&lt;p>&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-6e3f53186f74a1fd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="配置项目中的Associated Domains"
>&lt;/p>
&lt;p>4.创建一个内容为json格式的文件，苹果将会在合适的时候，从我们在项目中填入的域名请求这个文件。这个文件名必须为&lt;strong>apple-app-site-association&lt;/strong>，没有后缀名，文件内容大概是这样子：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">    &lt;/span>&lt;span class="nt">&amp;#34;applinks&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">        &lt;/span>&lt;span class="nt">&amp;#34;apps&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">        &lt;/span>&lt;span class="nt">&amp;#34;details&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">            &lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">                &lt;/span>&lt;span class="nt">&amp;#34;appID&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;9JA89QQLNQ.com.apple.wwdc&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">                &lt;/span>&lt;span class="nt">&amp;#34;paths&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span> &lt;span class="s2">&amp;#34;/wwdc/news/&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;/videos/wwdc/2015/*&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">            &lt;/span>&lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">            &lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">                &lt;/span>&lt;span class="nt">&amp;#34;appID&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;ABCD1234.com.apple.wwdc&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">                &lt;/span>&lt;span class="nt">&amp;#34;paths&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span> &lt;span class="s2">&amp;#34;*&amp;#34;&lt;/span> &lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">            &lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">        &lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">    &lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>说明：&lt;/p>
&lt;blockquote>
&lt;p>appID：组成方式是 teamId.yourapp’s bundle identifier。如上面的 9JA89QQLNQ就是teamId。登陆开发者中心，在Account - Membership里面可以找到Team ID。&lt;/p>
&lt;p>paths：设定你的app支持的路径列表，只有这些指定的路径的链接，才能被app所处理。星号的写法代表了可识别域名下所有链接。&lt;/p>
&lt;/blockquote>
&lt;p>&lt;a class="link" href="http://www.jackivers.me/blog/2015/9/17/list-of-universal-link-ios-9-apps" target="_blank" rel="noopener"
>这篇博客&lt;/a>里有很多其他公司的例子，可以参考一下。也有可能有的公司的已经不再适用，可以换换其他公司的。&lt;/p>
&lt;p>5.上传该文件到你的域名所对应的根目录或者&lt;code>.well-known&lt;/code>目录下，这是为了苹果能获取到你上传的文件。上传完后,自己先访问一下,看看是否能够获取到，当你在浏览器中输入这个文件链接后，应该是直接下载apple-app-site-association文件。&lt;/p>
&lt;h1 id="验证">验证&lt;/h1>
&lt;p>在iOS设备中的备忘录中输入App能识别的链接，然后直接点击此链接，就会直接跳转到你的app了。或是长按，在出现的弹出菜单中第二项是&lt;code>在’XXX’中打开&lt;/code>，这也代表着成功：&lt;/p>
&lt;p>&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-a9c2e6fd884a88e8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="出现菜单"
>&lt;/p>
&lt;p>或是你将要测试的网址在safari中打开，在出现的网页上方下滑，可以看到有&lt;code>在”XX”应用中打开&lt;/code>：
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-a7f64aa8f3ad665d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="出现菜单"
>&lt;/p>
&lt;p>在微信的网页浏览器中也是可以的，虽然微信屏蔽了所有的scheme方式跳转到其它app，但是Universal Links是由系统直接处理的，微信屏蔽不了，这也就实现了从微信跳转到我们的app。&lt;/p>
&lt;p>苹果为了方便开发者，提供了一个网页来验证我们编写的这个apple-app-site-association是否合法有效，进入&lt;a class="link" href="https://search.developer.apple.com/appsearch-validation-tool/" target="_blank" rel="noopener"
>验证网址&lt;/a>进行验证：&lt;/p>
&lt;p>&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-67e0333a4815fcf0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="验证链接"
>&lt;/p>
&lt;h1 id="进入app后的处理">进入app后的处理&lt;/h1>
&lt;p>现在用户点击某个链接，直接可以进我们的app了，但是我们的目的是要能够获取到用户进来的链接，根据链接来展示给用户相应的内容。
我们需要在工程里的 AppDelegate 里实现方法&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="p">-&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">BOOL&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nf">application:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">UIApplication&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">application&lt;/span> &lt;span class="nf">continueUserActivity:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">NSUserActivity&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">userActivity&lt;/span> &lt;span class="nf">restorationHandler:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">void&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">)(&lt;/span>&lt;span class="n">NSArray&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">_Nullable&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="nv">restorationHandler&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">([&lt;/span>&lt;span class="n">userActivity&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">activityType&lt;/span> &lt;span class="nl">isEqualToString&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">NSUserActivityTypeBrowsingWeb&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">NSURL&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">url&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">userActivity&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">webpageURL&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">url&lt;/span>&lt;span class="err">是我们希望处理的&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="c1">//进行我们的处理
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="k">else&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">[[&lt;/span>&lt;span class="n">UIApplication&lt;/span> &lt;span class="n">sharedApplication&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="nl">openURL&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">url&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">  &lt;/span> &lt;span class="err"> &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="nb">YES&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="注意">注意&lt;/h1>
&lt;p>前端开发经常面临跨域问题，必须要求跨域，如果不跨域，就不行。
只有当前webview的url域名，与跳转目标url域名不一致时，Universal Link 才生效。&lt;/p>
&lt;p>好了先说到这里，如果遇到什么问题可以详细看&lt;a class="link" href="https://developer.apple.com/library/ios/documentation/General/Conceptual/AppSearch/UniversalLinks.html" target="_blank" rel="noopener"
>官方的说明文档&lt;/a>。&lt;/p></description></item><item><title>CocoaLumberjack：简单好用的Log库</title><link>https://lisongrc.github.io/p/201701269a2739/</link><pubDate>Mon, 02 Jan 2017 22:54:17 +0000</pubDate><guid>https://lisongrc.github.io/p/201701269a2739/</guid><description>&lt;p>有的时候我们想要将程序运行过程中产生的Log保存起来或者发送到自己服务器，为了以后方便分析。这时候就可以用&lt;a class="link" href="https://github.com/CocoaLumberjack/CocoaLumberjack" target="_blank" rel="noopener"
>CocoaLumberjack&lt;/a>啦。&lt;/p>
&lt;p>CocoaLumberjack是一个可以在iOS和Mac开发中使用的日志库，强大又不失灵活。集成进项目后，配置下，然后用DDLog语句简单地取代NSLog语句（ DDLog的使用方法和NSLog一样）就可以啦，是不是很方便。&lt;/p>
&lt;h1 id="安装">安装&lt;/h1>
&lt;p>第一种方法：使用cocoapods，不会使用cocoapods的可以看&lt;a class="link" href="http://www.jianshu.com/p/1711e131987d" target="_blank" rel="noopener"
>这篇教程&lt;/a>，Podfile看起来是这样的：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="line">&lt;span class="cl">&lt;span class="ss">platform&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">ios&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;7.0&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">target&lt;/span> &lt;span class="s1">&amp;#39;CocoaLumberjackDemo&amp;#39;&lt;/span> &lt;span class="k">do&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">pod&lt;/span> &lt;span class="s1">&amp;#39;CocoaLumberjack&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>第二种方法：使用&lt;a class="link" href="https://github.com/Carthage/Carthage" target="_blank" rel="noopener"
>Carthage&lt;/a>，Cartfile：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="line">&lt;span class="cl">&lt;span class="n">github&lt;/span> &lt;span class="s2">&amp;#34;CocoaLumberjack/CocoaLumberjack&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>第三种方法：手工导入，具体可以看&lt;a class="link" href="https://github.com/CocoaLumberjack/CocoaLumberjack/blob/master/Documentation/GettingStarted.md#manual-installation" target="_blank" rel="noopener"
>他的文档&lt;/a>&lt;/p>
&lt;h1 id="使用">使用&lt;/h1>
&lt;p>CocoaLumberjack自带了几种Log方式：&lt;/p>
&lt;blockquote>
&lt;p>1.DDLog（整个框架的基础）
2.DDASLLogger（发送日志语句到苹果的日志系统，以便它们显示在Console.app上）
3.DDTTYLoyger（发送日志语句到Xcode控制台）
4.DDFIleLoger（把日志写入本地文件）&lt;/p>
&lt;/blockquote>
&lt;p>你可以同时记录文件和控制台，还可以创建自己的logger，将日志语句发送到网络或者数据库中。&lt;/p>
&lt;p>使用的时候需要引入头文件：&lt;code>#import &amp;lt;CocoaLumberjack/CocoaLumberjack.h&amp;gt;&lt;/code>，你还需要全局设置下log级别：&lt;code> static const DDLogLevel ddLogLevel = DDLogLevelDebug;&lt;/code>，关于Log级别，下面会细讲。&lt;/p>
&lt;p>所以你的&lt;code>.pch&lt;/code>里面可能有段这样的代码：
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-a51125eadd44ce57.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="PrefixHeader.pch"
>&lt;/p>
&lt;p>然后加入代码：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="p">-&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">BOOL&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nf">application:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">UIApplication&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">application&lt;/span> &lt;span class="nf">didFinishLaunchingWithOptions:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">NSDictionary&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">launchOptions&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="c1">// 添加DDASLLogger，你的日志语句将被发送到Xcode控制台
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">DDLog&lt;/span> &lt;span class="nl">addLogger&lt;/span>&lt;span class="p">:[&lt;/span>&lt;span class="n">DDTTYLogger&lt;/span> &lt;span class="n">sharedInstance&lt;/span>&lt;span class="p">]];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">  &lt;/span> &lt;span class="err"> &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="c1">// 添加DDTTYLogger，你的日志语句将被发送到Console.app
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">DDLog&lt;/span> &lt;span class="nl">addLogger&lt;/span>&lt;span class="p">:[&lt;/span>&lt;span class="n">DDASLLogger&lt;/span> &lt;span class="n">sharedInstance&lt;/span>&lt;span class="p">]];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">  &lt;/span> &lt;span class="err"> &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="c1">// 添加DDFileLogger，你的日志语句将写入到一个文件中，默认路径在沙盒的Library/Caches/Logs/目录下，文件名为bundleid+空格+日期.log。
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">DDFileLogger&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">fileLogger&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[[&lt;/span>&lt;span class="n">DDFileLogger&lt;/span> &lt;span class="n">alloc&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">init&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">fileLogger&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rollingFrequency&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">60&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mi">60&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mi">24&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">fileLogger&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">logFileManager&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">maximumNumberOfLogFiles&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">7&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">DDLog&lt;/span> &lt;span class="nl">addLogger&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">fileLogger&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">  &lt;/span> &lt;span class="err"> &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="c1">//产生Log
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">DDLogVerbose&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">@&amp;#34;Verbose&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">DDLogDebug&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">@&amp;#34;Debug&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">DDLogInfo&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">@&amp;#34;Info&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">DDLogWarn&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">@&amp;#34;Warn&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">DDLogError&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">@&amp;#34;Error&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">  &lt;/span> &lt;span class="err"> &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="nb">YES&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>DDLog和NSLog的语法是一样的。&lt;/p>
&lt;p>运行程序，可以在Xocde控制台看到：
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-b750b65396b1febe.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="Xcode日志"
>
产生的Log文件打开是这样的：
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-6881ef08cc76268f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="Log文件"
>&lt;/p>
&lt;h1 id="log级别">Log级别&lt;/h1>
&lt;p>接下来，你就要考虑用哪种级别了，CocoaLumberjack有5种：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="k">typedef&lt;/span> &lt;span class="nf">NS_OPTIONS&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">NSUInteger&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">DDLogFlag&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">DDLogFlagError&lt;/span>&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">DDLogFlagWarning&lt;/span>&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">DDLogFlagInfo&lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">DDLogFlagDebug&lt;/span>&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">DDLogFlagVerbose&lt;/span>&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Log Level 用来过滤每条Log：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="k">typedef&lt;/span> &lt;span class="nf">NS_ENUM&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">NSUInteger&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">DDLogLevel&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">DDLogLevelOff&lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">DDLogLevelError&lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">DDLogFlagError&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">DDLogLevelWarning&lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">DDLogLevelError&lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">DDLogFlagWarning&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">DDLogLevelInfo&lt;/span>&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">DDLogLevelWarning&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">DDLogFlagInfo&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">DDLogLevelDebug&lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">DDLogLevelInfo&lt;/span>&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">DDLogFlagDebug&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">DDLogLevelVerbose&lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">DDLogLevelDebug&lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">DDLogFlagVerbose&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">DDLogLevelAll&lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">NSUIntegerMax&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>例如，如果您将日志级别设置为 LOG_LEVEL_INFO，那么你会看到error、Warn和Info语句。&lt;/p>
&lt;p>你也可以&lt;a class="link" href="https://github.com/CocoaLumberjack/CocoaLumberjack/blob/master/Documentation/CustomLogLevels.md" target="_blank" rel="noopener"
>自定义Log级别或者每个级别的名字&lt;/a>或者&lt;a class="link" href="https://github.com/CocoaLumberjack/CocoaLumberjack/blob/master/Documentation/FineGrainedLogging.md" target="_blank" rel="noopener"
>在单纯的级别上增加一些高级用法&lt;/a>&lt;/p>
&lt;p>我们也可以为Debug和Release模式设置不同的Log级别：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#ifdef DEBUG
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="k">static&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="n">DDLogLevel&lt;/span> &lt;span class="n">ddLogLevel&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">DDLogLevelVerbose&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#else
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="k">static&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="n">DDLogLevel&lt;/span> &lt;span class="n">ddLogLevel&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">DDLogLevelWarning&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#endif
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>我们还可以为每种loger设置不同的级别：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>&lt;span class="n">DDLog&lt;/span> &lt;span class="nl">addLogger&lt;/span>&lt;span class="p">:[&lt;/span>&lt;span class="n">DDASLLogger&lt;/span> &lt;span class="n">sharedInstance&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="nl">withLevel&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">DDLogLevelInfo&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>&lt;span class="n">DDLog&lt;/span> &lt;span class="nl">addLogger&lt;/span>&lt;span class="p">:[&lt;/span>&lt;span class="n">DDTTYLogger&lt;/span> &lt;span class="n">sharedInstance&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="nl">withLevel&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">DDLogLevelDebug&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>我们还可以&lt;a class="link" href="https://github.com/CocoaLumberjack/CocoaLumberjack/blob/master/Documentation/CustomFormatters.md" target="_blank" rel="noopener"
>自定义日志的formatter格式&lt;/a>：
首先自定义一个 LogFormatter, 遵从 DDLogFormatter 协议，我们需要重写 &lt;code>- (NSString *)formatLogMessage:(DDLogMessage *)logMessage&lt;/code> 这个方法，这个方法的输入参数是由 logger 发的一个 DDLogMessage 对象，包含了一些必要的信息，返回值就是最终 log 的消息体字符串。&lt;/p>
&lt;p>我们还可以自定义Logger，实现我们自己想要的处理，具体可以看他的文档。&lt;/p>
&lt;p>更多详细文档可以&lt;a class="link" href="https://github.com/CocoaLumberjack/CocoaLumberjack/tree/master/Documentation" target="_blank" rel="noopener"
>点这里&lt;/a>&lt;/p></description></item><item><title>Objective-C自动生成文档工具:appledoc</title><link>https://lisongrc.github.io/p/201612db31073b/</link><pubDate>Tue, 13 Dec 2016 15:47:22 +0000</pubDate><guid>https://lisongrc.github.io/p/201612db31073b/</guid><description>&lt;p>由于最近琐事比较多，所以好久没有写文章了。今天我们聊一聊Objective-C自动生成文档。&lt;/p>
&lt;p>做项目的人多了，就需要文档了。手工写文档是一件苦差事，但是我们也有从源码中抽取注释生成文档的专用工具。&lt;/p>
&lt;p>经过查找，比较大众的有三个：&lt;/p>
&lt;blockquote>
&lt;p>&lt;a class="link" href="http://www.stack.nl/~dimitri/doxygen/index.html" target="_blank" rel="noopener"
>doxygen&lt;/a>：适于生成html文档与pdf文档。 支持的语言多，可以配置的地方也比较多。默认生成的风格与苹果的风格不一致。&lt;/p>
&lt;p>&lt;a class="link" href="http://developer.apple.com/opensource/tools/headerdoc.html" target="_blank" rel="noopener"
>headdoc&lt;/a> ：是 Xcode 自带的文档生成工具。在安装完 Xcode 后，就可以用命令行来生成对应的文档。不过它只生成以&lt;code>/*! */&lt;/code>的格式的注释。不兼容 &lt;code>/** */&lt;/code>格式的注释&lt;/p>
&lt;p>&lt;a class="link" href="http://gentlebytes.com/appledoc/" target="_blank" rel="noopener"
>appledoc&lt;/a>: &lt;a class="link" href="https://github.com/tomaz/appledoc" target="_blank" rel="noopener"
>Github地址&lt;/a> ，适于生成html文档和xcode帮助文档（docset）。可以兼容 &lt;code>/** */&lt;/code>格式，也可以兼容 &lt;code>/*! */&lt;/code>格式的注释。&lt;/p>
&lt;/blockquote>
&lt;p>我感觉appledoc是最好的，所以在这里，我只介绍一下appledoc的使用，有兴趣的童鞋也可以研究下其他两种。&lt;/p>
&lt;h1 id="appledoc的安装">appledoc的安装&lt;/h1>
&lt;p>第一种：打开终端，输入以下命令：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">git clone git://github.com/tomaz/appledoc.git
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> appledoc
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo sh install-appledoc.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>第二种：如果你装了homebrew，打开终端，输入以下命令：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">brew install appledoc
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="appledoc的使用">appledoc的使用&lt;/h1>
&lt;p>为了演示appledoc的使用，我在桌面新建了一个工程Test，然后在ViewController类里面加了一些注释：&lt;/p>
&lt;p>&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-54c02d5dfefe5185.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="ViewController.h"
>&lt;/p>
&lt;p>&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-1b5ceeb31f275a8e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="ViewController.m"
>&lt;/p>
&lt;p>然后演示appledoc的使用：&lt;/p>
&lt;h2 id="1在终端中使用">1.在终端中使用&lt;/h2>
&lt;p>使用 appledoc 时，打开终端，进入项目所在目录，使用如下命令即可：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">appledoc --output 输出路径 --project-name 工程名 --project-company 公司名 --company-id 公司ID .
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>例如我在这里使用的命令是：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">appledoc --output ./doc --project-name Test --project-company lisong --company-id lisong .
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>具体过程如下：
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-38d08feeb2bd337c.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="生成Docset"
>&lt;/p>
&lt;p>appledoc 会扫描当前路径下的所有文件，然后生成好文档放到 doc 目录下。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-75315ae0d0d5293b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="doc目录"
>&lt;/p>
&lt;p>编译出的Docset
默认会放在&lt;code>~/Library/Developer/Shared/Documentation/DocSets&lt;/code>路径下，里面包含html的文档。首先显示生成的Docset的包内容，然后在Contents/Resources/Documents路径下，双击打开里面的index.html可以在浏览器中查看文档了。&lt;/p>
&lt;p>并且生成的Docset已经安装到Xcode中。重启Xcode后，在&lt;code>Help—Documentation and API Reference&lt;/code>菜单下也可以看到生成的文档：
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-3b0a83b380a0550e.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="在Xcode中查看"
>&lt;/p>
&lt;p>如果不想生成Docset，而是想生成html，就需要加一个&lt;code>--no-create-docset&lt;/code>，这里我使用命令：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">appledoc --no-create-docset --output ./doc --project-name Test --project-company lisong --company-id lisong .
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>则会在doc目录下生成一个html文件夹，也是双击里面的index.html就可以在浏览器中查看文档了。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-4f6f78eb9d0d3911.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="html文档"
>&lt;/p>
&lt;p>你也可以在终端用&lt;code>appledoc --help&lt;/code>查看所有可用的参数。详细的信息可以查看官方的文档：&lt;a class="link" href="http://gentlebytes.com/appledoc/" target="_blank" rel="noopener"
>http://gentlebytes.com/appledoc/&lt;/a>&lt;/p>
&lt;h2 id="2在xcode里使用">2.在Xcode里使用&lt;/h2>
&lt;p>1.首先创建一个Aggregate类型的Target，取名Document
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-dc46a5c77a483ecc.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="创建Target"
>&lt;/p>
&lt;p>2.选择Build Phases，点击左边的小加号，选择New Run Script Phase，建好了以后打开刚刚建立的Run Script，在框里输入命令，命令与终端一样，这里我们输入：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">appledoc --no-create-docset --output ./doc --project-name Test --project-company lisong --company-id lisong .
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-bdce67e2e0fae042.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="添加script"
>&lt;/p>
&lt;p>3..然后点左上角选择Document，编译一下，成功后文档就生成在doc目录下了。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-163ba983a5c4ae7b.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="编译生成文档"
>&lt;/p>
&lt;h1 id="注释样式">注释样式&lt;/h1>
&lt;p>因为appledoc是通过注释生成文档的，下面说说注释的样式，几种常见的有：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">/// Single line comment.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">/// Single line comment spreading
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">/// over multiple lines.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/** Single line comment. */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/*! Single line comment */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * Single line comment spreading
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * over multiple lines.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> Single line comment spreading
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> over multiple lines. No star
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> */&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在Xcode里面，我们可以用&lt;code>command + option + /&lt;/code>方便快捷地生成注释，很方便。大家可以多尝试尝试各种注释。&lt;a class="link" href="https://github.com/tomaz/appledoc/blob/master/CommentsFormattingStyle.markdown" target="_blank" rel="noopener"
>更多的注释格式可以看这里&lt;/a>&lt;/p></description></item><item><title>iOS中的静态库与动态库，区别、制作和使用</title><link>https://lisongrc.github.io/p/20161137f4228b/</link><pubDate>Mon, 07 Nov 2016 15:33:05 +0000</pubDate><guid>https://lisongrc.github.io/p/20161137f4228b/</guid><description>&lt;p>如果我们有些功能要给别人用，但是又不想公开代码实现，比如高德地图、第三方登录分享等等，这时候我们就要打包成库了。库分静态库和动态库两种：&lt;/p>
&lt;blockquote>
&lt;p>静态库：以&lt;code>.a&lt;/code> 和 &lt;code>.framework&lt;/code>为文件后缀名。
动态库：以&lt;code>.tbd&lt;/code>(之前叫&lt;code>.dylib&lt;/code>) 和 &lt;code>.framework&lt;/code> 为文件后缀名。&lt;/p>
&lt;/blockquote>
&lt;h1 id="静态库与动态库的区别">静态库与动态库的区别&lt;/h1>
&lt;blockquote>
&lt;p>静态库：链接时会被完整的复制到可执行文件中，被多次使用就有多份拷贝。
动态库：链接时不复制，程序运行时由系统动态加载到内存，系统只加载一次，多个程序共用（如系统的&lt;code>UIKit.framework&lt;/code>等），节省内存。&lt;/p>
&lt;p>但是苹果不让使用自己的动态库，否则审核就无法通过。&lt;/p>
&lt;/blockquote>
&lt;p>我们先来看一下iOS设备有哪些架构，因为下面要用到：&lt;/p>
&lt;blockquote>
&lt;p>模拟器：
iPhone4s-iPnone5：i386
iPhone5s-iPhone7 Plus：x86_64&lt;/p>
&lt;p>真机:
iPhone3gs-iPhone4s：armv7
iPhone5-iPhone5c：armv7s
iPhone5s-iPhone7 Plus：arm64&lt;/p>
&lt;p>支持armv7的静态库可以在armv7s上正常运行。&lt;/p>
&lt;/blockquote>
&lt;h1 id="a静态库的制作">.a静态库的制作&lt;/h1>
&lt;p>1、先创建一个新的Xcode工程Test，需要选择下面这个模板：
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-f8f309461eadf0fc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="选择模板"
>
创建完成后是这个样子的：
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-9fbbdb7c25721b33.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="创建工程"
>&lt;/p>
&lt;p>2、我们把默认生成的Test.h和Test.m删掉，重新创建一个类PrintString，在这个类里面添加一个单纯打印字符串的简单方法:
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-2a3c78a381b5278c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="PrintString.h"
>
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-47e2d7c130863f6d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="PrintString.m"
>&lt;/p>
&lt;p>3、选择添加公开头文件
为了让使用者知道有哪些方法可以用，我们需要公开头文件，这里我们公开PrintString.h：
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-85e2a208770188e6.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="选择添加公开头文件"
>&lt;/p>
&lt;p>4、修改配置
我们需要把&lt;code>Build Active Architecture Only&lt;/code>修改为NO，否则生成的静态库就只支持当前选择设备的架构。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-b8b14a2b4ef6f78b.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="修改配置"
>&lt;/p>
&lt;p>5、然后编译
我们分别选择&lt;code>Generic iOS Device&lt;/code>和&lt;code>任意一个模拟器&lt;/code>各编译一次，编译完后，我们会看到工程中Products文件夹下的libTest.a由红色变成了黑色，然后&lt;code>show in finder&lt;/code>，看看生成的文件：
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-1c79cd8e8a108af4.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="Untitled.gif"
>&lt;/p>
&lt;p>我们看到它为真机和模拟器都生成了.a静态库。里面都包含我们选择公开的头文件。&lt;/p>
&lt;p>我们来看看静态库支持的框架：命令为&lt;code>lipo -info 静态库名字&lt;/code>
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-12282289b9b59f2b.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="查看静态库支持的框架"
>&lt;/p>
&lt;p>我们看到，&lt;code>Debug-iphoneos&lt;/code>里面的静态库支持的架构有&lt;code>armv7&lt;/code>和&lt;code>arm64&lt;/code>所以它只能用于真机，在模拟器上会报错。&lt;code>Debug-iphonesimulator&lt;/code>里面的静态库支持的架构有&lt;code>i386&lt;/code>和&lt;code>x86_64&lt;/code>，所以它只能用于模拟器，在真机上会报错。&lt;/p>
&lt;p>如果想要让模拟器和真机通用一个静态库，我们可以使用终端命令来实现。命令格式：&lt;code>lipo -create 第一个.a文件的绝对路径 第二个.a文件的绝对路径 -output 最终的.a文件路径&lt;/code>:
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-c4472265e6c2be4b.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="生成通用静态库"
>&lt;/p>
&lt;p>我们看到生成了一个新的&lt;code>libTest.a&lt;/code>文件。这个静态库就支持所有模拟器和所有真机了。然后我们创建一个文件夹，把.a和头文件都放进去，我们最终需要使用的就是这个文件夹：
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-8497f7c22f2a3729.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="新建文件夹"
>&lt;/p>
&lt;p>注意：为了开发方便，我们可以使用生成的通用静态库，但是最终上线的使用我们可以只导入真机的，这样工程的体积也会小一些。&lt;/p>
&lt;h1 id="使用生成的a静态库">使用生成的.a静态库&lt;/h1>
&lt;p>新建一个工程，将上面的通用静态库拖进去，导入头文件，就可以使用里面的方法了。经过试验，我们生成的静态库在真机上和模拟器上都能成功打印字符串：
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-3b374fe4aeb0712a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="Paste_Image.png"
>&lt;/p>
&lt;h1 id="frameworke静态库的制作">.frameworke静态库的制作&lt;/h1>
&lt;p>1、先创建一个新的Xcode工程LibTest，需要选择下面这个模板：
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-ecfa937ad49c0767.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="选择模板"
>
创建完成后是这个样子的：
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-18f4b924be05fa55.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="创建完成"
>&lt;/p>
&lt;p>创建完成后我们可以看到，工程本身自带一个&lt;code>LibTest.h&lt;/code>文件和一个&lt;code>Info.plist&lt;/code>文件。&lt;/p>
&lt;p>2、我们创建一个类&lt;code>PrintString&lt;/code>，添加一个单纯打印字符串的简单方法:
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-c3ea26c5d04b8481.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="PrintString.h"
>
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-633ec0acf041c1d7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="PrintString"
>&lt;/p>
&lt;p>3、选择添加公开头文件
为了让使用者知道有哪些方法可以用，我们需要公开头文件，我们需要在 并且将&lt;code>Target-&amp;gt;Build Phases-&amp;gt;Headers&lt;/code>中的&lt;code>Projec&lt;/code>t中要暴露的头文件拖拽到&lt;code>Pulic&lt;/code>里面，这里我们公开&lt;code>PrintString.h&lt;/code>：
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-9065d3303dfd7fba.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="选择添加公开头文件"
>&lt;/p>
&lt;p>注意：暴露出来的头文件中import的其他类也得添加到public中暴露出来。如果不想将import的类暴露出来，那么在头文件中用@class 然后在对应的.m文件中再import。&lt;/p>
&lt;p>4、设置支持所有架构（和.a制作一样）
5、修改生成的&lt;code>Mach-O&lt;/code>格式，因为动态库也可以是以framework形式存在，所以需要设置，否则默认打出来的是动态库。将&lt;code>target-&amp;gt;BuildSetting-&amp;gt;Mach-o Type&lt;/code> 设为&lt;code>Static Library&lt;/code>（默认为&lt;code>Dynamic Library&lt;/code>）:
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-9ac2a72c69317964.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="修改生成的Mach-O格式"
>&lt;/p>
&lt;p>6、编译
我们分别选择&lt;code>Generic iOS Device&lt;/code>和&lt;code>任意一个模拟器&lt;/code>各编译一次，编译完后，我们会看到工程中Products文件夹下的LibTest.framework由红色变成了黑色，然后&lt;code>show in finder&lt;/code>，看看生成的文件：
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-1398e58020675a44.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="编译"
>&lt;/p>
&lt;p>我们看到它为真机和模拟器都生成了LibTest.framework静态库。&lt;/p>
&lt;p>我们来查看静态库支持的框架：与上面不同，命令为&lt;code>lipo -info framework下的二进制文件名字&lt;/code>
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-71c93893b2b4787e.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="查看静态库支持的框架"
>&lt;/p>
&lt;p>如果想要让模拟器和真机通用一个静态库，我们可以使用终端命令来实现。合并的命令与上面不同的是：framework静态库合并的不是framework,而是framework下的二进制文件，命令为：
&lt;code>lipo -create 第一个framework下二进制文件的绝对路径 第二个framework下二进制文件的绝对路径 -output 最终的二进制文件路径&lt;/code>：
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-2dfc39f53cf5d8b4.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="合并二进制文件"
>&lt;/p>
&lt;p>然后将任何一个framework中的二进制文件替换成合并后的二进制文件,然后把framework添加到要使用的项目中即可使用。&lt;/p>
&lt;h1 id="使用生成的framework静态库">使用生成的.framework静态库&lt;/h1>
&lt;p>新建一个工程，将静态库拖进去，导入头文件，就可以使用里面的方法了。经过试验，我们生成的静态库在真机上和模拟器上都能成功打印字符串：
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-19407ac12a2506a3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="Paste_Image.png"
>&lt;/p>
&lt;p>注意：
如果静态库中有category类，则在使用静态库的项目配置中&lt;code>Other Linker Flags&lt;/code>需要添加参数&lt;code>-ObjC&lt;/code>或者&lt;code>-all_load&lt;/code>。
如果创建的framework类中使用了&lt;code>.tbd&lt;/code>，则需要在实际项目中导入&lt;code>.tbd&lt;/code>动态库。&lt;/p>
&lt;h1 id="运行调试静态库">运行调试静态库&lt;/h1>
&lt;p>如果你是开发静态库的人，你会发现上面的方法只是制作静态库，并没有办法运行看效果和调试bug，这时候我们可以这样：
1、新建一个专门用来开发静态库的正常工程Test：
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-1c5fbe82bb1c897e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="新建工程"
>
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-0e64cd5eb6268d74.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="建好的工程"
>&lt;/p>
&lt;p>2、添加一个静态库的target
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-d78a7606a7b2d70b.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="添加一个静态库的target"
>&lt;/p>
&lt;p>我们看到它生成了几样东西:&lt;/p>
&lt;blockquote>
&lt;p>一个framework的target：在这里面修改静态库的配置们，例如支持的架构、要暴露的头文件们和Mach-O的配置。
一个LibTest文件夹：静态库里面的类们都放在这里面。
product文件夹下面的LibTest.framework：在这里show in finder找到编译后生成的静态库。&lt;/p>
&lt;/blockquote>
&lt;p>3、开发调试代码
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-f4ac760cb598db22.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="开发调试代码"
>&lt;/p>
&lt;p>我们看到程序可以正常运行，并可以在动态库里面蹲点运行。方便我们调试。&lt;/p>
&lt;p>4、确保代码没问题后，选择对应的target编译生成。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-51d077bb2bd12c60.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="编译生成"
>
5、后面的过程就与上面一样了。&lt;/p></description></item><item><title>详细易懂的二维码的扫描、识别与生成</title><link>https://lisongrc.github.io/p/201611963e6639/</link><pubDate>Wed, 02 Nov 2016 15:54:18 +0000</pubDate><guid>https://lisongrc.github.io/p/201611963e6639/</guid><description>&lt;p>ios7之前我们实现二维码扫描是借助第三方(&lt;code>ZBar&lt;/code>，&lt;code>ZXing&lt;/code>等)来实现的，在ios7之后系统自己提供二维码扫描的方法，性能也要比第三方更好。&lt;/p>
&lt;p>今天就来介绍一下原生二维码的使用，包括&lt;code>扫描二维码&lt;/code>，&lt;code>从图片扫描二维码&lt;/code>和&lt;code>生成二维码&lt;/code>。讲解中只展示部分代码，具体请看&lt;a class="link" href="https://github.com/lisongrc/QRCodeDemo" target="_blank" rel="noopener"
>Github Demo&lt;/a>，里面的代码不多，也很容易看懂。&lt;/p>
&lt;h1 id="扫描二维码">扫描二维码&lt;/h1>
&lt;p>二维码扫描需要用到&lt;code>AVFoundation.framework&lt;/code>，需要用先创建一个AVCaptureSession，然后设置输入输出流，以及扫描区域和支持的格式：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//获取摄像设备
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">AVCaptureDevice&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">device&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">AVCaptureDevice&lt;/span> &lt;span class="nl">defaultDeviceWithMediaType&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">AVMediaTypeVideo&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//创建输入流
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">AVCaptureDeviceInput&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">input&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">AVCaptureDeviceInput&lt;/span> &lt;span class="nl">deviceInputWithDevice&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">device&lt;/span> &lt;span class="nl">error&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nb">nil&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">input&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="nb">nil&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//创建输出流
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">AVCaptureMetadataOutput&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">output&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[[&lt;/span>&lt;span class="n">AVCaptureMetadataOutput&lt;/span> &lt;span class="n">alloc&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">init&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//设置代理 在主线程里刷新
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">output&lt;/span> &lt;span class="nl">setMetadataObjectsDelegate&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nb">self&lt;/span> &lt;span class="nl">queue&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">dispatch_get_main_queue&lt;/span>&lt;span class="p">()];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//设置扫描区域的比例
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">CGFloat&lt;/span> &lt;span class="n">width&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">300&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="n">CGRectGetHeight&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">view&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">frame&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">CGFloat&lt;/span> &lt;span class="n">height&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">300&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="n">CGRectGetWidth&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">view&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">frame&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">output&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rectOfInterest&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">CGRectMake&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="mi">1&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">width&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="o">-&lt;/span> &lt;span class="n">height&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">width&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">height&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">AVCaptureSession&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">session&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[[&lt;/span>&lt;span class="n">AVCaptureSession&lt;/span> &lt;span class="n">alloc&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">init&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//高质量采集率
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">session&lt;/span> &lt;span class="nl">setSessionPreset&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">AVCaptureSessionPresetHigh&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>&lt;span class="n">session&lt;/span> &lt;span class="nl">addInput&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">input&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>&lt;span class="n">session&lt;/span> &lt;span class="nl">addOutput&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">output&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//设置扫码支持的编码格式(这里设置条形码和二维码兼容)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">output&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">metadataObjectTypes&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="l">@[&lt;/span>&lt;span class="n">AVMetadataObjectTypeQRCode&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">  &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">AVMetadataObjectTypeEAN13Code&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">  &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">AVMetadataObjectTypeEAN8Code&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">  &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">AVMetadataObjectTypeCode128Code&lt;/span>&lt;span class="l">]&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后用这个&lt;code>session&lt;/code>生成一个&lt;code>AVCaptureVideoPreviewLayer&lt;/code>加到某个view的layer上，就可以实时显示摄像头捕捉的内容了：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="n">AVCaptureVideoPreviewLayer&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">layer&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">AVCaptureVideoPreviewLayer&lt;/span> &lt;span class="nl">layerWithSession&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nb">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">session&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">layer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">videoGravity&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">AVLayerVideoGravityResizeAspectFill&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">layer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">frame&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">view&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">layer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">bounds&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>&lt;span class="nb">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">view&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">layer&lt;/span> &lt;span class="nl">insertSublayer&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">layer&lt;/span> &lt;span class="nl">atIndex&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后调用&lt;code> [self.session startRunning];&lt;/code>开始捕获，当扫描出结果后会调用下面的代理方法，其中&lt;code>metadataObject.stringValue&lt;/code>就是扫描后的结果。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#pragma mark - AVCaptureMetadataOutputObjectsDelegate
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="p">-(&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nf">captureOutput:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">AVCaptureOutput&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">captureOutput&lt;/span> &lt;span class="nf">didOutputMetadataObjects:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">NSArray&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">metadataObjects&lt;/span> &lt;span class="nf">fromConnection:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">AVCaptureConnection&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">connection&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">metadataObjects&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">count&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="err">  &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">AVMetadataMachineReadableCodeObject&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">metadataObject&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">metadataObjects&lt;/span> &lt;span class="n">firstObject&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>为了在黑夜也可以很好的扫描，可以设置一个闪光灯的开关：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#pragma mark - 开关闪光灯
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="p">-&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nf">rightBarButtonDidClick:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">UIBarButtonItem&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">item&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="nb">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">flashOpen&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">!&lt;/span>&lt;span class="nb">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">flashOpen&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">  &lt;/span> &lt;span class="err"> &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">AVCaptureDevice&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">device&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">AVCaptureDevice&lt;/span> &lt;span class="nl">defaultDeviceWithMediaType&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">AVMediaTypeVideo&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">  &lt;/span> &lt;span class="err"> &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">([&lt;/span>&lt;span class="n">device&lt;/span> &lt;span class="n">hasTorch&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">device&lt;/span> &lt;span class="n">hasFlash&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">device&lt;/span> &lt;span class="nl">lockForConfiguration&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nb">nil&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">  &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nb">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">flashOpen&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">device&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">torchMode&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">AVCaptureTorchModeOn&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">device&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">flashMode&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">AVCaptureFlashModeOn&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="k">else&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">device&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">torchMode&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">AVCaptureTorchModeOff&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">device&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">flashMode&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">AVCaptureFlashModeOff&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">  &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">device&lt;/span> &lt;span class="n">unlockForConfiguration&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-268a61962145720c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="扫描二维码" style="zoom: 50%;" />
&lt;h1 id="从图片扫描">从图片扫描&lt;/h1>
&lt;p>有时候我们需要从图片中扫描二维码，或者从相册选择一张图片，代码如下，具体可以看demo。其中&lt;code>feature.messageString&lt;/code>就是扫描后的结果。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="p">-&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nf">findQRCodeFromImage:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">UIImage&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">image&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">CIDetector&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">detector&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">CIDetector&lt;/span> &lt;span class="nl">detectorOfType&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">CIDetectorTypeQRCode&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="nl">context&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nb">nil&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="nl">options&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="l">@{&lt;/span>&lt;span class="nl">CIDetectorAccuracy&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">CIDetectorAccuracyHigh&lt;/span>&lt;span class="l">}&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">  &lt;/span> &lt;span class="err"> &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">NSArray&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">features&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">detector&lt;/span> &lt;span class="nl">featuresInImage&lt;/span>&lt;span class="p">:[&lt;/span>&lt;span class="n">CIImage&lt;/span> &lt;span class="nl">imageWithCGImage&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">image&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">CGImage&lt;/span>&lt;span class="p">]];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">features&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">count&lt;/span> &lt;span class="o">&amp;gt;=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">CIQRCodeFeature&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">feature&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">features&lt;/span> &lt;span class="n">firstObject&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-2b1fa03e6a50237b.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="从图片扫描"
>&lt;/p>
&lt;h1 id="生成二维码">生成二维码&lt;/h1>
&lt;p>生成二维码的代码很简单，代码如下。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/** 生成指定大小的黑白二维码 */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">-&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">UIImage&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nf">createQRImageWithString:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">NSString&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">string&lt;/span> &lt;span class="nf">size:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">CGSize&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">size&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">NSData&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">stringData&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">string&lt;/span> &lt;span class="nl">dataUsingEncoding&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">NSUTF8StringEncoding&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">  &lt;/span> &lt;span class="err"> &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">CIFilter&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">qrFilter&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">CIFilter&lt;/span> &lt;span class="nl">filterWithName&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s">@&amp;#34;CIQRCodeGenerator&amp;#34;&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="c1">//    NSLog(@&amp;#34;%@&amp;#34;,qrFilter.inputKeys);
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">qrFilter&lt;/span> &lt;span class="nl">setValue&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">stringData&lt;/span> &lt;span class="nl">forKey&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s">@&amp;#34;inputMessage&amp;#34;&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">qrFilter&lt;/span> &lt;span class="nl">setValue&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s">@&amp;#34;M&amp;#34;&lt;/span> &lt;span class="nl">forKey&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s">@&amp;#34;inputCorrectionLevel&amp;#34;&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">  &lt;/span> &lt;span class="err"> &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">CIImage&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">qrImage&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">qrFilter&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">outputImage&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="c1">//放大并绘制二维码 (上面生成的二维码很小，需要放大)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">CGImageRef&lt;/span> &lt;span class="n">cgImage&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[[&lt;/span>&lt;span class="n">CIContext&lt;/span> &lt;span class="nl">contextWithOptions&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nb">nil&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="nl">createCGImage&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">qrImage&lt;/span> &lt;span class="nl">fromRect&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">qrImage&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">extent&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">UIGraphicsBeginImageContext&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">size&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">CGContextRef&lt;/span> &lt;span class="n">context&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UIGraphicsGetCurrentContext&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">CGContextSetInterpolationQuality&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">kCGInterpolationNone&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="c1">//翻转一下图片 不然生成的QRCode就是上下颠倒的
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">CGContextScaleCTM&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1.0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mf">1.0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">CGContextDrawImage&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">CGContextGetClipBoundingBox&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">cgImage&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">UIImage&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">codeImage&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UIGraphicsGetImageFromCurrentImageContext&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">UIGraphicsEndImageContext&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">  &lt;/span> &lt;span class="err"> &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">CGImageRelease&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cgImage&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">  &lt;/span> &lt;span class="err"> &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="n">codeImage&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-dc0ad3554614009f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="黑白二维码"
>&lt;/p>
&lt;p>上面默认生成的时黑白二维码，不过我们也可以改颜色：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/** 为二维码改变颜色 */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">-&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">UIImage&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nf">changeColorForQRImage:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">UIImage&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">image&lt;/span> &lt;span class="nf">backColor:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">UIColor&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">backColor&lt;/span> &lt;span class="nf">frontColor:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">UIColor&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">frontColor&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">CIFilter&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">colorFilter&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">CIFilter&lt;/span> &lt;span class="nl">filterWithName&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s">@&amp;#34;CIFalseColor&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">  &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="nl">keysAndValues&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">  &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="s">@&amp;#34;inputImage&amp;#34;&lt;/span>&lt;span class="p">,[&lt;/span>&lt;span class="n">CIImage&lt;/span> &lt;span class="nl">imageWithCGImage&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">image&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">CGImage&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">  &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="s">@&amp;#34;inputColor0&amp;#34;&lt;/span>&lt;span class="p">,[&lt;/span>&lt;span class="n">CIColor&lt;/span> &lt;span class="nl">colorWithCGColor&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">frontColor&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">CGColor&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">  &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="s">@&amp;#34;inputColor1&amp;#34;&lt;/span>&lt;span class="p">,[&lt;/span>&lt;span class="n">CIColor&lt;/span> &lt;span class="nl">colorWithCGColor&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">backColor&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">CGColor&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">  &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="nb">nil&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">  &lt;/span> &lt;span class="err"> &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">UIImage&lt;/span> &lt;span class="nl">imageWithCIImage&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">colorFilter&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">outputImage&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-7211754266ea9998.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="为二维码改变颜色"
>&lt;/p>
&lt;p>有的二维码也会在中心加一个小图片，例如用户头像，代码如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/** 在二维码中心加一个小图 */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">-&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">UIImage&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nf">addSmallImageForQRImage:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">UIImage&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">qrImage&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">UIGraphicsBeginImageContext&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">qrImage&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">size&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">qrImage&lt;/span> &lt;span class="nl">drawInRect&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">CGRectMake&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">qrImage&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">size&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">width&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">qrImage&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">size&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">height&lt;/span>&lt;span class="p">)];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">UIImage&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">image&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">UIImage&lt;/span> &lt;span class="nl">imageNamed&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s">@&amp;#34;small&amp;#34;&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">CGFloat&lt;/span> &lt;span class="n">imageW&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">50&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">CGFloat&lt;/span> &lt;span class="n">imageX&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">qrImage&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">size&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">width&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">imageW&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mf">0.5&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">CGFloat&lt;/span> &lt;span class="n">imgaeY&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">qrImage&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">size&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">height&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">imageW&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mf">0.5&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">image&lt;/span> &lt;span class="nl">drawInRect&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">CGRectMake&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">imageX&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">imgaeY&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">imageW&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">imageW&lt;/span>&lt;span class="p">)];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">UIImage&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UIGraphicsGetImageFromCurrentImageContext&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">UIGraphicsEndImageContext&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="n">result&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-b904ed48d3a825fd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="中心加小图的二维码"
>&lt;/p>
&lt;p>其实也可以扫描条形码，大家可以对着条形码试一试，代码都是通用的。&lt;/p></description></item><item><title>UITableView自动计算cell高度并缓存，再也不用管高度啦</title><link>https://lisongrc.github.io/p/20161055050fbf/</link><pubDate>Sun, 09 Oct 2016 11:29:40 +0000</pubDate><guid>https://lisongrc.github.io/p/20161055050fbf/</guid><description>&lt;p>这篇文章我们来讲一下UITableView的cell自适应高度，以及遇到的问题的解决办法。在看文章之前希望你已经会UITableView的基本使用了。&lt;/p>
&lt;p>先奉上这篇文章的demo的Github地址：&lt;a class="link" href="https://github.com/lisongrc/UITableViewCellHeightDemo" target="_blank" rel="noopener"
>UITableViewCellHeightDemo&lt;/a>。大家可以下载下来和文章配合看。&lt;/p>
&lt;h1 id="cell高度计算的历史">cell高度计算的历史&lt;/h1>
&lt;p>在iOS8之前，如果UITableViewCell的高度是动态的，如果想要显示正确的话，我们需要在下面这个UITableView的代理方法中，返回每一行的精确高度：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="p">-&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">CGFloat&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nf">tableView:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">UITableView&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">tableView&lt;/span> &lt;span class="nf">heightForRowAtIndexPath:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">NSIndexPath&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">indexPath&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果cell的控件很多，样式很复杂的话，在这里面我们就可能需要写很多代码去做一些复杂的计算，甚至可能导致滑动不流畅。&lt;/p>
&lt;p>后来也有一些人写了一些第三方去解决这个问题，例如&lt;a class="link" href="https://github.com/forkingdog/UITableView-FDTemplateLayoutCell" target="_blank" rel="noopener"
>UITableView-FDTemplateLayoutCell&lt;/a>。只要给cell自上而下加好约束，它就可以帮我们去算cell的高度并且可以缓存，省去了我们自己写计算代码的成本。具体可以进链接里面看看它的demo。&lt;/p>
&lt;p>但是在iOS10的系统下， &lt;code>FDTemplateLayoutCell&lt;/code>会卡界面，而且tableview的行数越多表现的越卡。&lt;/p>
&lt;p>而且苹果在iOS8之后，推出了一种超级简单的cell动态自适应的方法，使用起来比 &lt;code>FDTemplateLayoutCell&lt;/code>也简单一些，而且现在iOS10都出来了，没有必要去支持iOS7了，所以最后我还是选择了用系统的办法。这样我们以后就再也不用写&lt;code>heightForRowAtIndexPath&lt;/code>方法了哈哈哈。&lt;/p>
&lt;h1 id="系统的cell自适应高度的使用方法">系统的cell自适应高度的使用方法&lt;/h1>
&lt;p>首先我们需要把cell上的控件自上而下加好约束，如果对约束不熟悉的话建议看看下面这两篇文章学习一下：
[&lt;a class="link" href="https://www.raywenderlich.com/115440/auto-layout-tutorial-in-ios-9-part-1-getting-started-2" target="_blank" rel="noopener"
>Auto Layout Tutorial in iOS 9 Part 1: Getting Started&lt;/a>
[&lt;a class="link" href="https://www.raywenderlich.com/115444/auto-layout-tutorial-in-ios-9-part-2-constraints" target="_blank" rel="noopener"
>Auto Layout Tutorial in iOS 9 Part 2: Constraints&lt;/a>](http://www.raywenderlich.com/115444/auto-layout-tutorial-in-ios-9-part-2-constraints)&lt;/p>
&lt;p>用xib加约束和用masonry加代码约束都是可以的。注意约束一定要自上而下加好，让系统知道怎么去计算高度。在这篇文章的demo里面的cell加的约束是这样的：&lt;/p>
&lt;p>&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-8e19466b6e4ac956.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="cell约束"
>&lt;/p>
&lt;p>加好约束后，然后告诉tableView自己去适应高度就可以了。有两种写法：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">tableView&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rowHeight&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UITableViewAutomaticDimension&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">tableView&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">estimatedRowHeight&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">100&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>或者直接写这个代理方法就可以了&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="p">-&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">CGFloat&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nf">tableView:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">UITableView&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">tableView&lt;/span> &lt;span class="nf">estimatedHeightForRowAtIndexPath:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">NSIndexPath&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">indexPath&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="mi">100&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这个的意思就是告诉tableView，你需要自己适应高度，我不给你算啦哈哈哈。但是我们需要告诉它一个大概高度，例如上面的100，理论上这个是可以随便写的，并不影响显示结果，但是越接近真实高度越好。&lt;/p>
&lt;p>来看下demo效果：
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-118a76ca9e5bb550.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="demo"
>&lt;/p>
&lt;p>我们看到，cell已经自己适应内容算出了高度，是不是很方便呢哼哼。
具体的代码大家可以去demo看哦。&lt;/p>
&lt;p>其实section的header和footer也是可以自动适应的，对应的方法有：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="p">-&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">CGFloat&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nf">tableView:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">UITableView&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">tableView&lt;/span> &lt;span class="nf">estimatedHeightForHeaderInSection:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">NSInteger&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">section&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">-&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">CGFloat&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nf">tableView:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">UITableView&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">tableView&lt;/span> &lt;span class="nf">estimatedHeightForFooterInSection:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">NSInteger&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">section&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>但是我们在实际开发中，一般都是根本没有header和footer，有的话一般也是给一个固定高度。所以在这里就不讲解了，原理都一样。&lt;/p>
&lt;h1 id="可能遇到的问题和解决办法">可能遇到的问题和解决办法&lt;/h1>
&lt;p>&lt;strong>1.高度不对&lt;/strong>
有时候有可能运行出来后看到cell的高度显示的不对，就像这样：
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-198030f4098810eb.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="高度不对"
>
这个问题是因为约束没有满足自上而下，从而系统不知道怎么去计算。解决办法就是去修改约束，直到满足为止。一定要好好理解约束啊！&lt;/p>
&lt;p>&lt;strong>2.点击状态栏无法滚动到顶部&lt;/strong>
我们知道，如果界面中有UIScrollView的话，点击状态栏会让其滚动到顶部，就像这样：&lt;/p>
&lt;p>&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-d8ee37f4ebea29bd.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="点击状态栏会滚动到顶部"
>&lt;/p>
&lt;p>但是如果我们用了自动计算高度的方法，又调用了tableView的reloadData方法（例如我们的数据有分页的时候，加载完下一页的数据后会去刷新tableView）。这时候就会出现问题，点击状态栏就有几率不能精确滚动到顶部了：
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-0144754f8dff68eb.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="Untitled.gif"
>&lt;/p>
&lt;p>解决这个问题的办法是去缓存cell的高度，代码如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="k">@property&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="k">nonatomic&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">strong&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">NSMutableDictionary&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">heightAtIndexPath&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="c1">//缓存高度所用字典
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#pragma mark - UITableViewDelegate
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="p">-(&lt;/span>&lt;span class="n">CGFloat&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nf">tableView:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">UITableView&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">tableView&lt;/span> &lt;span class="nf">estimatedHeightForRowAtIndexPath:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">NSIndexPath&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">indexPath&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">NSNumber&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">height&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="nb">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">heightAtIndexPath&lt;/span> &lt;span class="nl">objectForKey&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">indexPath&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">height&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="n">height&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">floatValue&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="k">else&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="mi">100&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">-&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nf">tableView:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">UITableView&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">tableView&lt;/span> &lt;span class="nf">willDisplayCell:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">UITableViewCell&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">cell&lt;/span> &lt;span class="nf">forRowAtIndexPath:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">NSIndexPath&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">indexPath&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">NSNumber&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">height&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="l">@(&lt;/span>&lt;span class="n">cell&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">frame&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">size&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">height&lt;/span>&lt;span class="l">)&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="nb">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">heightAtIndexPath&lt;/span> &lt;span class="nl">setObject&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">height&lt;/span> &lt;span class="nl">forKey&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">indexPath&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>解释一下，就是用一个字典做容器，在cell将要显示的时候在字典中保存这行cell的高度。然后在调用estimatedHeightForRowAtIndexPath方法时，先去字典查看有没有缓存高度，有就返回，没有就返回一个大概高度。&lt;/p>
&lt;p>缓存高度之后，在demo里面多试几次，发现点击状态栏已经可以精确滚动回顶部了：
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-b09cef057ef8ba9a.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="用缓存高度解决了问题"
>&lt;/p>
&lt;p>这段代码其实可以写在viewController的基类里面，这样写一遍就可以每个地方都能缓存cell的高度了。详见demo。这样就完美了！&lt;/p>
&lt;p>好啦先说到这里吧，有问题记得联系我。&lt;/p></description></item><item><title>系统地学习正则表达式(二)：进阶篇</title><link>https://lisongrc.github.io/p/20160923aaaabf/</link><pubDate>Mon, 26 Sep 2016 23:41:42 +0000</pubDate><guid>https://lisongrc.github.io/p/20160923aaaabf/</guid><description>&lt;p>今天这篇我们将讲解&lt;code>子表达式&lt;/code>和&lt;code>后向引用&lt;/code>的使用。后面会持续更新。&lt;/p>
&lt;h1 id="理解子表达式">理解子表达式&lt;/h1>
&lt;p>通过&lt;code>(&lt;/code>和&lt;code>)&lt;/code>括起来的就是子表达式。&lt;/p>
&lt;p>下面是一个例子：用来匹配IP 地址的正则表达式。 IP 地址是由&amp;quot; . &amp;ldquo;分隔的四组数字，如12.159.46.200。因为每个部分的数字都可以为一个、两个或者三个数字字符，这个匹配模式可以表示为&lt;code>\d{1,3}&lt;/code>：&lt;/p>
&lt;blockquote>
&lt;p>正则表达式：&lt;code>\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}&lt;/code>
待匹配文本：12.159.46.200
匹配后结果：&lt;code>12.159.46.200 &lt;/code>&lt;/p>
&lt;/blockquote>
&lt;p>分析：每个&lt;code>\d{1,3}&lt;/code>的实例都匹配了 IP 地址的一个数字。四个数字则是被&lt;code> \. &lt;/code>表示的&amp;rdquo; . &amp;ldquo;分隔开的。&lt;code>\d{1,3}\.&lt;/code>模式重复了三遍，因此可以使用重复操作来处理。下面是相同例子的另外一个版本：&lt;/p>
&lt;blockquote>
&lt;p>正则表达式：&lt;code>(\d{1,3}\.){3}\d{1,3}&lt;/code>
待匹配文本：12.159.46.200
匹配后结果：&lt;code>12.159.46.200&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;p>分析：此模式可以和前面的效果是一样的。表达式&lt;code>\d{1,3}\. &lt;/code>使用&lt;code>(&lt;/code>和&lt;code>)&lt;/code>括起来从而组成子表达式。&lt;code>(\d{1,3}\.){3}&lt;/code>重复了子表达式三次（也就是 IP 地址的前三个数字），最后的&lt;code>\d{1,3}&lt;/code>匹配最后的数字。&lt;/p>
&lt;p>使用子表达式来分组是很重要的，尽管这个例子中根本不包括重复。来看一个例子：&lt;/p>
&lt;blockquote>
&lt;p>正则表达式：&lt;code>19|20\d{2}&lt;/code>
待匹配文本：1967-08-17
匹配后结果：&lt;code>19&lt;/code>67-08-17&lt;/p>
&lt;/blockquote>
&lt;p>分析：&lt;code>19|20\d{2}&lt;/code>用来定位一个&lt;code>前两个数字只能为 19或者20 &lt;/code>的四位数的年份。但是很显然这个正则并没有实现预想的效果。&lt;code>|&lt;/code>操作符从左到右读取，将&lt;code>19|20\d{2}&lt;/code>分析为要么&lt;code>19&lt;/code> ，要么&lt;code>20\d{2}&lt;/code>，也就是匹配数字 &lt;code>19&lt;/code> 或者&lt;code>20开头的四个数字字符&lt;/code>。&lt;/p>
&lt;p>解决方法是将&lt;code>19|20&lt;/code>作为一个子表达式，&lt;code>(19|20)\d{2}&lt;/code>就能够匹配所有19 和 20 开头的四个数字了。&lt;/p>
&lt;h1 id="嵌套子表达式">嵌套子表达式&lt;/h1>
&lt;p>子表达式可以嵌套。实际上，子表达式可以一层一层嵌套在子表达式内。为了演示嵌套子表达式的用法，我们再来看看查找 IP 地址的例子。&lt;/p>
&lt;p>其实上面例子中&lt;code>(\d{1,3}\.){3}\d{1,3}&lt;/code>匹配IP 地址是有问题的，因为非法的 IP 地址也将被匹配。IP 地址中的每个数字都是小于 255 的。而上面的模式可以匹配 300甚至是999 ，而这些实际上都是非法的 IP 地址。&lt;/p>
&lt;p>下面定义了所有合法 IP 地址所需要满足的一种条件：&lt;/p>
&lt;blockquote>
&lt;p>所有的一位数和两位数
三位数的第一位为 1
如果三位数的第一位为 2 ，且第二位从 0 到 4
如果三位数的前二位为 25 ，且第三位从 0 到 5&lt;/p>
&lt;/blockquote>
&lt;p>当定义了需要匹配的情况后，就比较容易实现可以工作的模式。下面是个例子：
&lt;code>(((\d{1,2})|(1\d{2})|(2[0-4]\d)|(25[0-5]))\.){3}((\d{1,2})|(1\d{2})|(2[0-4]\d)|(25[0-5]))&lt;/code>&lt;/p>
&lt;p>分析：这个模式可以工作的原因是一系列的嵌套子表达式。首先从&lt;code>(((\d{1,2})|(1\d{2})|(2[0-4]\d)|(25[0-5]))\.)&lt;/code>子表达式开始。包含了四个嵌套子表达式。&lt;code>(\d{1,2})&lt;/code>可以匹配一位数和两位数(0到99)。&lt;code>(1\d{2})&lt;/code>匹配了任何第一位为 1 的三位数(100到199) 。&lt;code>(2[0-4]\d)&lt;/code>匹配数字从 200 到 249 。&lt;code>(25[0-5])&lt;/code>匹配数字从 250 到 255 。每个子表达式都是通过“ | ”包括在另一个子表达式中。在数字范围之后是&lt;code>\.&lt;/code>表示的&amp;rdquo; . &amp;ldquo;，然后这个系列括起来作为子表达式并重复三遍（使用&lt;code>{3}&lt;/code>）。最后，&lt;code>((\d{1,2})|(1\d{2})|(2[0-4]\d)|(25[0-5]))&lt;/code>被用来匹配最后一个 IP 地址的数字（没有了&lt;code>\.&lt;/code>后缀）。由于将四个数字都是限制在了 0 到 255 之间，所以此模式可以匹配所有的合法 IP 地址。&lt;/p>
&lt;h1 id="理解后向引用">理解后向引用&lt;/h1>
&lt;p>HTML 开发者经常使用标题标签（&lt;H1>到&lt;H6>，包括相应的结束标签&lt;/H1>到&lt;/H6>）。假设你需要定位所有的标题标签：&lt;/p>
&lt;blockquote>
&lt;p>正则表达式：&lt;code>&amp;lt;[hH][1-6]&amp;gt;.*?&amp;lt;/[hH][1-6]&amp;gt;&lt;/code>
待匹配文本：&lt;H1>title 1&lt;/H1> — &lt;H6>title 6&lt;/H6>
匹配后结果：&lt;code>&amp;lt;H1&amp;gt;title 1&amp;lt;/H1&amp;gt;&lt;/code> — &lt;code>&amp;lt;H6&amp;gt;title 6&amp;lt;/H6&amp;gt;&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;p>分析：&lt;code>&amp;lt;[hH][1-6]&amp;gt;&lt;/code>可以匹配所有的开始标签，而&lt;code>&amp;lt;/[hH][1-6]&amp;gt;&lt;/code>可以匹配所有的结束标签。&lt;/p>
&lt;p>注意：我们这里使用了&lt;code>.*?&lt;/code>而不是&lt;code>.*&lt;/code>。正如在上一篇文章解释的一样，&lt;code>*&lt;/code>的量词是贪婪的，所以模式&lt;code>&amp;lt;[hH][1-6]&amp;gt;.*&amp;lt;/[hH][1-6]&amp;gt;&lt;/code>将匹配从&lt;H1> 直到 &lt;/H6> 。所以可以使用非贪婪量词&lt;code>.*?&lt;/code>来解决这个问题。&lt;/p>
&lt;p>接着看这个例子：&lt;/p>
&lt;blockquote>
&lt;p>正则表达式：&lt;code>&amp;lt;[hH][1-6]&amp;gt;.*?&amp;lt;/[hH][1-6]&amp;gt;&lt;/code>
待匹配文本：&lt;H1>title&lt;/H6>
匹配后结果：&lt;code>&amp;lt;H1&amp;gt;title&amp;lt;/H6&amp;gt;&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;p>分析：采用 &lt;H1> 开始而采用 &lt;/H6> 的标题标签是非法的，但是现在的模式可以匹配。问题在于匹配的第二个部分（匹配结束的标签）没有办法知道匹配第一部分（匹配开始的标签）是什么。这时候就需要后向引用了。&lt;/p>
&lt;h1 id="使用后向引用匹配">使用后向引用匹配&lt;/h1>
&lt;p>&lt;code>后向应用&lt;/code>就是引用前面的子表达式。你可以将后向应用理解成变量。例如&lt;code>\1&lt;/code>匹配模式中第一个子表达式。同理，&lt;code>\2&lt;/code>将匹配第二个子表达式，&lt;code>\3&lt;/code>将匹配第三个。我们结合例子来理解。一个子表达式可以通过后向引用根据需要引用多次。&lt;/p>
&lt;p>在上个例子中，&lt;code>&amp;lt;[hH][1-6]&amp;gt;.*?&amp;lt;/[hH][1-6]&amp;gt;&lt;/code>会匹配非法的标题。我们可以使用后向引用来解决：&lt;/p>
&lt;blockquote>
&lt;p>正则表达式：&lt;code>&amp;lt;[hH]([1-6])&amp;gt;.*?&amp;lt;/[hH]\1&amp;gt;&lt;/code>
待匹配文本：&lt;H1>title&lt;/H1>—&lt;H1>title&lt;/H6>
匹配后结果：&lt;code>&amp;lt;H1&amp;gt;title&amp;lt;/H1&amp;gt;&lt;/code>—&lt;H1>title&lt;/H6>&lt;/p>
&lt;/blockquote>
&lt;p>分析：就像以前一样，&lt;code>&amp;lt;[hH]([1-6])&amp;gt;&lt;/code>将匹配任何的标题标签。但是和以前不一样的是，这里的&lt;code>[1-6] &lt;/code>使用了小括号括起来成为了子表达式。这样，匹配结束标签的模式可以通过&lt;code>&amp;lt;/[hH]\1&amp;gt;&lt;/code>中的&lt;code>\1&lt;/code>来引用此子表达式。&lt;code>(1-6)&lt;/code>是一个可以匹配数字 1 到 6 的子表达式，&lt;code>\1&lt;/code>因此可以匹配相同的数字。在这种情况下，&amp;quot;&lt;H1>title&lt;/H6>&amp;ldquo;将不能匹配。&lt;/p>
&lt;p>注意：后向引用只能够引用子表达式（需要使用小括号括起来），后向引用语法在不同的正则表达式实现中可能是不一样的。引用的匹配一般是从 1 开始。在大多数的正则表达式实现中，0 可以用来引用整个表达式。&lt;/p>
&lt;h1 id="执行替换操作">执行替换操作&lt;/h1>
&lt;p>到现在为止我们所看到的正则表达式都是进行搜索，在一段文本中定位单词。正则表达式还可以用来执行替换操作。举个例子，将CA 替换成California和将MI替换成Michigan 并不是正则表达式需要完成的工作。尽管使用正则表达式也是合法的，但是没有必要这么做。事实上，在这里如果使用简单的字符串操作函数的话过程将会变得更加容易。&lt;/p>
&lt;p>让我们来看一个例子，将&lt;code>313-555-1234&lt;/code>格式的电话号码重新格式化为&lt;code>(313) 555-1234&lt;/code>格式：&lt;/p>
&lt;blockquote>
&lt;p>查找表达式：&lt;code>(\d{3})(-)(\d{3})(-)(\d{4})&lt;/code>
替换表达式：&lt;code>($1) $3-$5&lt;/code>&lt;/p>
&lt;p>文本
313-555-1234
248-555-9999&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>结果
(313) 555-1234
(248) 555-9999&lt;/p>
&lt;/blockquote>
&lt;p>分析：&lt;code>(\d{3})(-)(\d{3})(-)(\d{4})&lt;/code>匹配了一个电话号码，并分成了五个子表达式。&lt;code>(\d{3})&lt;/code>匹配刚开始的三个数字并作为第一个子表达式，&lt;code>(-)&lt;/code>匹配&amp;rdquo; - &amp;ldquo;并作为第二个子表达式，依此类推。这五个部分可以根据需要单独引用，&lt;code>($1) $3-$5&lt;/code>只是使用了其中的三个子表达式。因此“313-555-1234”改变为了“(313) 555-1234”。&lt;/p>
&lt;h1 id="在xcode中查找和替换文本">在Xcode中查找和替换文本：&lt;/h1>
&lt;p>&lt;strong>查找&lt;/strong>
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-131169344bb76da1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="查找"
>&lt;/p>
&lt;p>&lt;strong>替换&lt;/strong>
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-1e294c9c99b5977b.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="替换"
>&lt;/p>
&lt;p>其实正则表达式还是很简单的，大家可以多找些例子熟悉一下。用的多了就熟了。&lt;/p>
&lt;h1 id="正则表达式在ios中的使用">正则表达式在iOS中的使用。&lt;/h1>
&lt;h2 id="nspredicate">NSPredicate&lt;/h2>
&lt;p>NSPredicate通常用来验证一个字符串是不是符合某种格式，例如验证一个字符串是不是由数字和字母组成的：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//待匹配字符串
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">NSString&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">string&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">@&amp;#34;song123&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//正则表达式
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">NSString&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">regex&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">@&amp;#34;^[a-z0－9A-Z]*$&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//创建predicate
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">NSPredicate&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">predicate&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">NSPredicate&lt;/span> &lt;span class="nl">predicateWithFormat&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s">@&amp;#34;SELF MATCHES %@&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">regex&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//用predicate匹配string。result为匹配结果，YES or NO。
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kt">BOOL&lt;/span> &lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">predicate&lt;/span> &lt;span class="nl">evaluateWithObject&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">string&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>关于NSPredicate还有一些其他的可以使用方法们，具体可以查看官方API。&lt;/p>
&lt;h2 id="nsstring">NSString&lt;/h2>
&lt;p>NSString可以用正则来查找自己当中符合要求的子字符串，例如查找字符串中的数字：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//待匹配字符串
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">NSString&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">string&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">@&amp;#34;song123&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//使用正则\d+去string中进行匹配，得到的时匹配到的range，在这里为{4，3}。
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">NSRange&lt;/span> &lt;span class="n">range&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">string&lt;/span> &lt;span class="nl">rangeOfString&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s">@&amp;#34;&lt;/span>&lt;span class="se">\\&lt;/span>&lt;span class="s">d+&amp;#34;&lt;/span> &lt;span class="nl">options&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">NSRegularExpressionSearch&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//如果匹配到就打印匹配到的子字符串，在这里为123。
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">range&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">location&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="n">NSNotFound&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">NSLog&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">@&amp;#34;%@&amp;#34;&lt;/span>&lt;span class="p">,[&lt;/span>&lt;span class="n">string&lt;/span> &lt;span class="nl">substringWithRange&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">range&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>分析：&lt;code>\d+&lt;/code>用来查找数字，&lt;code>rangeOfString:options:&lt;/code>会返回一个NSRange，用来接收匹配的范围。&lt;code>options&lt;/code>必须要用&lt;code>NSRegularExpressionSearch&lt;/code>，代表用正则去匹配。&lt;code>range.location==NSNotFound&lt;/code>的话代表匹配不到结果。当写正则字符串时，&lt;code>\\ &lt;/code>需要写成&lt;code>\\\\ &lt;/code> ，所以，&lt;code>\d+&lt;/code>需要写成&lt;code>\\\\d+&lt;/code>。&lt;/p>
&lt;h2 id="nsregularexpression">NSRegularExpression&lt;/h2>
&lt;p>对于匹配字符串中的数字，我们也可以用到NSRegularExpression这个类实现。它可以用户来查找字符串中符合要求的&lt;code>第一个匹配结果&lt;/code>或者&lt;code>所有匹配结果&lt;/code>。&lt;/p>
&lt;p>&lt;strong>查找字符串中第一个匹配结果&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//待匹配字符串
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">NSString&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">string&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">@&amp;#34;123abc45fgt7tyu&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//正则表达式
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">NSString&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">pattern&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">@&amp;#34;&lt;/span>&lt;span class="se">\\&lt;/span>&lt;span class="s">d+&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//创建NSRegularExpression对象并指定正则表达式
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">NSRegularExpression&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">regex&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">NSRegularExpression&lt;/span> &lt;span class="nl">regularExpressionWithPattern&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">pattern&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">  &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="nl">options&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">NSRegularExpressionCaseInsensitive&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">  &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="nl">error&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nb">nil&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//查找第一个匹配结果，如果查找不到的话match会是nil
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">NSTextCheckingResult&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">match&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">regex&lt;/span> &lt;span class="nl">firstMatchInString&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">string&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="nl">options&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">NSMatchingReportCompletion&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="nl">range&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">NSMakeRange&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">string&lt;/span> &lt;span class="n">length&lt;/span>&lt;span class="p">])];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">match&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="c1">//如果查找到就打印出来，结果为123
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">NSLog&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">@&amp;#34;%@&amp;#34;&lt;/span>&lt;span class="p">,[&lt;/span>&lt;span class="n">string&lt;/span> &lt;span class="nl">substringWithRange&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">match&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">range&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>分析：&lt;code>firstMatchInString:options:range&lt;/code>会查找字符串中第一个匹配，所以&lt;code>123abc45fgt7tyu&lt;/code>的匹配结果为&lt;code>123&lt;/code>。&lt;/p>
&lt;p>&lt;strong>查找字符串中所有匹配结果&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//待匹配字符串
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">NSString&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">string&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">@&amp;#34;123abc45fgt7tyu&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//正则表达式
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">NSString&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">pattern&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">@&amp;#34;&lt;/span>&lt;span class="se">\\&lt;/span>&lt;span class="s">d+&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//创建NSRegularExpression对象并指定正则表达式
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">NSRegularExpression&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">regex&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">NSRegularExpression&lt;/span> &lt;span class="nl">regularExpressionWithPattern&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">pattern&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">  &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="nl">options&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">NSRegularExpressionCaseInsensitive&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">  &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="nl">error&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nb">nil&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//查找所有匹配结果
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">NSArray&lt;/span>&lt;span class="o">*&lt;/span> &lt;span class="n">matches&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">regex&lt;/span> &lt;span class="nl">matchesInString&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">string&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="nl">options&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">NSMatchingReportProgress&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="nl">range&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">NSMakeRange&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">string&lt;/span> &lt;span class="n">length&lt;/span>&lt;span class="p">])];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//如果有匹配就打印出来，结果为123 45 7
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">matches&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">count&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">NSTextCheckingResult&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">match&lt;/span> &lt;span class="k">in&lt;/span> &lt;span class="n">matches&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">NSLog&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">@&amp;#34;%@&amp;#34;&lt;/span>&lt;span class="p">,[&lt;/span>&lt;span class="n">string&lt;/span> &lt;span class="nl">substringWithRange&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">match&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">range&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>分析：&lt;code>matchesInString:options:range:&lt;/code>会查找字符串中的所有匹配，结果是一个包含&lt;code>NSTextCheckingResult&lt;/code>的数组。所以&lt;code>123abc45fgt7tyu&lt;/code>的匹配结果为&lt;code>123&lt;/code>、&lt;code>45&lt;/code>和&lt;code>7&lt;/code>。&lt;/p>
&lt;p>创建&lt;code>NSRegularExpression&lt;/code>对象时的&lt;code>options&lt;/code>参数为&lt;code>NSRegularExpressionOptions&lt;/code>类型，可选值以及代表的意义如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="k">typedef&lt;/span> &lt;span class="nf">NS_OPTIONS&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">NSUInteger&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">NSRegularExpressionOptions&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">NSRegularExpressionCaseInsensitive&lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="err"> &lt;/span> &lt;span class="c1">//不区分大小写
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">NSRegularExpressionAllowCommentsAndWhitespace&lt;/span>&lt;span class="err"> &lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="err"> &lt;/span> &lt;span class="c1">//忽略空白和注释
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">NSRegularExpressionIgnoreMetacharacters&lt;/span>&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="err"> &lt;/span> &lt;span class="c1">//将所有的patter当作普通字符串
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">NSRegularExpressionDotMatchesLineSeparators&lt;/span>&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="err"> &lt;/span> &lt;span class="c1">// 允许.匹配所有字符
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">NSRegularExpressionAnchorsMatchLines&lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="err"> &lt;/span> &lt;span class="c1">// 允许^,$匹配每一行的开头和结尾
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">NSRegularExpressionUseUnixLineSeparators&lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="err"> &lt;/span> &lt;span class="c1">// 只把\n识别为换行符
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">NSRegularExpressionUseUnicodeWordBoundaries&lt;/span>&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="mi">6&lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="c1">// 使用 Unicode TR#29 规定的边界，否则，使用传统的正则表达式的词边界
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>关于NSRegularExpression还有一些其他的可以使用方法们，具体可以查看&lt;a class="link" href="https://developer.apple.com/reference/foundation/nsregularexpression?language=objc" target="_blank" rel="noopener"
>这里&lt;/a>。&lt;/p>
&lt;h1 id="一些常用的正则">一些常用的正则：&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">邮箱：^[a-zA-Z0-9]{4,}@[a-z0-9A-Z]{2,}\\.[a-zA-Z]{2,}$
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">手机号码：^((13[0-9])|(15[^4\\D])|(18[0,2,5-9]))\\d{8}$
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">大陆固定电话号码：^\\d{4}-|\\d{3}-)?(\\d{8}|\\d{7}$
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">身份证号：\\d{14}[[0-9],0-9xX]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Email地址：^\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\.\\w+([-.]\\w+)*$
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">纯数字：^[0-9]*$
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">由数字和英文字母组成：^[A-Za-z0-9]+$
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">QQ号：^[1-9][0-9]\{4,\}$
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">中国邮政编码：^[1-9]\\d{5}(?!\\d)$
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">URL：^http(s)?://([\\w-]+\\.)+[\\w-]+(/[\\w- ./?%&amp;amp;=]*)?$
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">纯汉字：^[\u4e00-\u9fa5]{0,}$
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>系统地学习正则表达式(一)：基础篇</title><link>https://lisongrc.github.io/p/201609835121d0/</link><pubDate>Tue, 13 Sep 2016 19:13:44 +0000</pubDate><guid>https://lisongrc.github.io/p/201609835121d0/</guid><description>&lt;h1 id="什么是正则表达式">什么是正则表达式&lt;/h1>
&lt;p>正则表达式就是用事先定义好的一些特定字符、及这些特定字符的组合，组成一个“规则字符串”，用来表达对字符串的一种过滤逻辑。&lt;/p>
&lt;p>通过正则表达式可以达到如下的目的：&lt;/p>
&lt;blockquote>
&lt;ol>
&lt;li>给定的字符串是否符合正则表达式的过滤逻辑（称作“匹配”）；&lt;/li>
&lt;li>可以通过正则表达式，从字符串中获取我们想要的特定部分。&lt;/li>
&lt;/ol>
&lt;/blockquote>
&lt;p>为了让大家更方便地学习，先推荐一个验证正则表达式的软件&lt;code>Regextor&lt;/code>，具体可以看我的&lt;a class="link" href="http://www.jianshu.com/p/b304515d225b" target="_blank" rel="noopener"
>这篇文章&lt;/a>，里面还推荐了很多Mac上的好软件。&lt;/p>
&lt;p>&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-2387f6323fd09a53.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="Regextor"
>&lt;/p>
&lt;p>下面开始讲解正则表达式各种规则：&lt;/p>
&lt;h1 id="匹配普通文本字符">匹配普通文本字符&lt;/h1>
&lt;p>正则表达式可以只包含普通的文本，代表去精确匹配这个文本。例如:&lt;/p>
&lt;blockquote>
&lt;p>正则表达式：&lt;code>song&lt;/code>
待匹配文本：xiaosongge，xiaoSongge
匹配后结果：xiao&lt;code>song&lt;/code>ge，xiaoSongge&lt;/p>
&lt;/blockquote>
&lt;p>正则表达式默认是区分大小写的，所以&lt;code>song&lt;/code>不会匹配 &amp;ldquo;Song&amp;rdquo; 。但是大部分的正则表达式实现都提供了一个选项表示不区分大小写。&lt;/p>
&lt;h1 id="匹配任意字符">匹配任意字符&lt;/h1>
&lt;p>&lt;code>.&lt;/code>用来匹配一个任意字符，例如：&lt;/p>
&lt;blockquote>
&lt;p>正则表达式：&lt;code>c.t&lt;/code>
待匹配文本：cat cet caaat dog
匹配后结果：&lt;code>cat&lt;/code> &lt;code>cet&lt;/code> caaat dog&lt;/p>
&lt;/blockquote>
&lt;p>分析：&lt;code>c.t&lt;/code>会匹配以&amp;quot; c &amp;ldquo;开头，以&amp;rdquo; t &amp;ldquo;结尾，中间为任意字符的字符串。&lt;/p>
&lt;p>同理，多个连续的&lt;code>.&lt;/code>可以匹配多个连续的任意字符：&lt;/p>
&lt;blockquote>
&lt;p>正则表达式：&lt;code>c..t&lt;/code>
待匹配文本：cat cet caat dog
匹配后结果：cat cet &lt;code>caat&lt;/code> dog&lt;/p>
&lt;/blockquote>
&lt;h1 id="匹配特殊字符">匹配特殊字符&lt;/h1>
&lt;p>&lt;code>.&lt;/code>在正则表达式中含有特殊的意义，是一个特殊的字符。&lt;code>\ &lt;/code>也是特殊字符，可以对特殊字符起到转义作用。如果你想匹配的是一个真正的&amp;rdquo; . &amp;ldquo;字符，需要在&lt;code>.&lt;/code>前面加上&lt;code>\ &lt;/code>对字符进行转义。所以，&lt;code>\.&lt;/code>表示真正的&amp;rdquo; . &amp;ldquo;字符。&lt;/p>
&lt;blockquote>
&lt;p>正则表达式：&lt;code>c\.t&lt;/code>
待匹配文本：cat c.t dog
匹配后结果：cat &lt;code>c.t&lt;/code> dog&lt;/p>
&lt;/blockquote>
&lt;p>注意：因为&lt;code>\ &lt;/code>也是特殊字符，所以想要匹配一个真正的&amp;rdquo; \ &amp;ldquo;字符，需要使用两个反斜线&lt;code>\\\\ &lt;/code>：&lt;/p>
&lt;blockquote>
&lt;p>正则表达式：&lt;code>c\\\t&lt;/code>
待匹配文本：cat c\t dog
匹配后结果：cat &lt;code>c\t&lt;/code> dog&lt;/p>
&lt;/blockquote>
&lt;h1 id="使用字符集合">使用字符集合&lt;/h1>
&lt;p>上面说到&lt;code>.&lt;/code>能匹配一个任意字符，但是如果我想匹配几个特定字符怎么办？匹配一组特定的字符可以使用&lt;code>[&lt;/code>和&lt;code>]&lt;/code>元字符。&lt;/p>
&lt;blockquote>
&lt;p>正则表达式：&lt;code>c[ab]t&lt;/code>
待匹配文本：cat cbt cet
匹配后结果：&lt;code>cat&lt;/code> &lt;code>cbt&lt;/code> cet&lt;/p>
&lt;/blockquote>
&lt;p>分析：&lt;code>[ab]&lt;/code>会匹配&amp;rdquo; a &amp;ldquo;或者&amp;rdquo; b &amp;ldquo;。所以&lt;code>c[ab]t&lt;/code>会匹配&amp;rdquo; cat &amp;ldquo;和&amp;rdquo; cbt &amp;ldquo;而不会匹配&amp;rdquo; cet &amp;ldquo;。&lt;/p>
&lt;h1 id="使用字符组区间">使用字符组区间&lt;/h1>
&lt;p>在上面的例子中，假如我想匹配&lt;code>cet&lt;/code>怎么办，在&lt;code>[]&lt;/code>里面多加一个吗？那如果我想匹配任意小写字母呢，往里面写几十个吗？虽然是可以的，但是太长了。这里我们可以用到&lt;code>[a-z]&lt;/code>：&lt;/p>
&lt;blockquote>
&lt;p>正则表达式：&lt;code>c[a-z]t&lt;/code>
待匹配文本：cat cbt czt c2t
匹配后结果：&lt;code>cat&lt;/code> &lt;code>cbt&lt;/code> &lt;code>czt&lt;/code> c2t&lt;/p>
&lt;/blockquote>
&lt;p>分析：&lt;code>c[a-z]t&lt;/code>表示以&amp;rdquo; c &amp;ldquo;开头，&amp;rdquo; t &amp;ldquo;结尾，中间为字母 &amp;quot; a &amp;quot; - &amp;quot; z &amp;quot; 的任意一个字母。&lt;/p>
&lt;p>类似的区间还有：&lt;/p>
&lt;blockquote>
&lt;ul>
&lt;li>[0-9] 和[0123456789]的功能一样。匹配所有的数字。&lt;/li>
&lt;li>[A-F] 匹配A到F的大写字符。&lt;/li>
&lt;li>[A-Z] 匹配所有的 A 到 Z 的大写字符。&lt;/li>
&lt;li>[a-z] 匹配所有的 a 到 z 的小写字符。&lt;/li>
&lt;li>[A-z] 匹配从 ASCII A 到 ASCII z 的所有字符（不仅仅匹配所有字母，还匹配在 ASCII 表中 A 到 z 中的字符，如 [ 和 ^ 等）。&lt;/li>
&lt;li>[A-Za-z0-9] 匹配所有的大小写字母和数字。&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h1 id="非字符集的匹配">非字符集的匹配&lt;/h1>
&lt;p>字符集合一般用于指定一组需要匹配的字符。但是有些时候，你想要排除一组你不想匹配的字符。可以通过对于字符集合的否定来实现。例如：&lt;/p>
&lt;blockquote>
&lt;p>正则表达式：&lt;code>c[^a-z]t&lt;/code>
待匹配文本：cat cbt czt c2t cAt
匹配后结果：cat cbt czt &lt;code>c2t&lt;/code> &lt;code>cAt&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;p>分析：这个和前面一个例子完全相反。&lt;code>[a-z]&lt;/code> 匹配所有的小写字母，而 &lt;code>[^a-z]&lt;/code> 匹配所有的不是小写字母的字符。&lt;/p>
&lt;p>注意，&lt;code>^&lt;/code>字符是将字符集合中的所有字符都取消匹配。&lt;/p>
&lt;h1 id="元字符">元字符&lt;/h1>
&lt;p>元字符在正则表达式中有特殊的意义，上面我们已经说了几个元字符，比如&lt;code>.&lt;/code>、&lt;code>[&lt;/code>和&lt;code>]&lt;/code>。这些字符不能直接表示自己的含义，例如，不能直接使用&lt;code>[&lt;/code>来匹配&amp;rdquo; [ &amp;ldquo;，使用&lt;code>.&lt;/code>来匹配&amp;rdquo; . &amp;ldquo;。&lt;/p>
&lt;p>所有的元字符都可以在前面加上反斜线转义，当转义后，字符将匹配自身而不是其特殊含义。例如，&lt;code>\[&lt;/code>将匹配&amp;rdquo; [ &amp;ldquo;:&lt;/p>
&lt;blockquote>
&lt;p>正则表达式：&lt;code>a\[b&lt;/code>
待匹配文本：a[b ab a[[b
匹配后结果：&lt;code>a[b&lt;/code> ab a[[b&lt;/p>
&lt;/blockquote>
&lt;p>注意：&lt;code>\ &lt;/code>用来转义元字符，这也意味着&lt;code>\ &lt;/code>也是一个元字符。所以如果需要匹配真正的&amp;rdquo; \ &amp;ldquo;，可以使用&lt;code>\\\ &lt;/code>：&lt;/p>
&lt;blockquote>
&lt;p>正则表达式：&lt;code>a\\\b&lt;/code>
待匹配文本：a\b a\b a[[b
匹配后结果：a\b &lt;code>a\b&lt;/code> a[[b&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>空白字符&lt;/strong>
有时候你可能需要匹配文本中不能打印的空白字符。例如，你希望能够找到所有的 Tab 字符，或者是所有的换行符。你可以使用下表中的特殊元字符：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>元字符&lt;/th>
&lt;th>描述&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>[\b]&lt;/td>
&lt;td>退格符&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>\f&lt;/td>
&lt;td>换页符&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>\n&lt;/td>
&lt;td>换行&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>\r&lt;/td>
&lt;td>回车&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>\t&lt;/td>
&lt;td>制表符&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>\v&lt;/td>
&lt;td>垂直制表符&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>例如&lt;code>\r\n&lt;/code>将匹配一个回车换行组合，在 Windows 中表示一个文件换行。在 Linux 和 Unix 系统中，只需要使用&lt;code>\n&lt;/code>即可。&lt;/p>
&lt;h1 id="匹配特定的字符类型">匹配特定的字符类型&lt;/h1>
&lt;p>有一些特殊的元字符可以用来匹配常用的字符集合。这些元字符被称为匹配字符类。你会发现使用它们是很方便的。&lt;/p>
&lt;p>&lt;strong>匹配数字或者非数字&lt;/strong>
上面说到，[0-9] 可以匹配所有的数字。如果不想匹配任何数字，则可以使用[^0-9]。下表中列出了数字和非数字的类元字符：&lt;/p>
&lt;p>元字符 | 描述&lt;/p>
&lt;ul>
&lt;li>| -
\d | 任何数字 (同 [0-9])
\D | 任何非数字 (同 [^0-9])&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>正则表达式：&lt;code>c\dt&lt;/code>
待匹配文本：cat c2t czt c9t
匹配后结果：cat &lt;code>c2t&lt;/code> czt &lt;code>c9t&lt;/code>&lt;/p>
&lt;p>正则表达式：&lt;code>c\Dt&lt;/code>
待匹配文本：cat c2t czt c9t
匹配后结果：&lt;code>cat&lt;/code> c2t &lt;code>czt&lt;/code> c9t&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>匹配字母字符和非字母字符&lt;/strong>
另外一个常用的类元字符是\w和\W：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>元字符&lt;/th>
&lt;th>描述&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>\w&lt;/td>
&lt;td>所有的文字数字式字符：大小写字母、数字和下划线 (同 [a-zA-Z0-9_])&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>\W&lt;/td>
&lt;td>(同 [^a-zA-Z0-9_])&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;blockquote>
&lt;p>正则表达式：&lt;code>c\wt&lt;/code>
待匹配文本：cat c2t czt c-t c\t
匹配后结果：&lt;code>cat&lt;/code> &lt;code>c2t&lt;/code> c-t c\t&lt;/p>
&lt;p>正则表达式：&lt;code>c\Wt&lt;/code>
待匹配文本：cat c2t c-t c\t
匹配后结果：cat c2t &lt;code>c-t&lt;/code> &lt;code>c\t&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>匹配空白和非空白&lt;/strong>
最后一个将要遇到的匹配类是空白类：&lt;/p>
&lt;p> 元字符 | 描述&lt;/p>
&lt;ul>
&lt;li>| -
\s | 所有的空白字符 (同 [\f\n\r\t\v])
\S | 所有的非空白字符 (同 [^\f\n\r\t\v])&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>正则表达式：&lt;code>c\st &lt;/code>
待匹配文本：cat c t c2t c\t
匹配后结果：cat &lt;code>c t&lt;/code> c2t c\t&lt;/p>
&lt;p>正则表达式：&lt;code>c\St &lt;/code>
待匹配文本：cat c t c2t c\t
匹配后结果：&lt;code>cat&lt;/code> c t &lt;code>c2t&lt;/code> &lt;code>c\t&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;h1 id="匹配一个或者更多字符">匹配一个或者更多字符&lt;/h1>
&lt;p>&lt;code>+&lt;/code>元字符表示匹配一个或者多个字符。例如，&lt;code>a&lt;/code>将匹配&amp;quot;a&amp;rdquo;，而&lt;code>a+&lt;/code>则匹配一个或者多个&amp;quot;a&amp;quot;。&lt;/p>
&lt;blockquote>
&lt;p>正则表达式：&lt;code>cat&lt;/code>
待匹配文本：ct cat caat caaat
匹配后结果：ct &lt;code>cat&lt;/code> caat caaat&lt;/p>
&lt;p>正则表达式：&lt;code>ca+t&lt;/code>
待匹配文本：ct cat caat caaat
匹配后结果：ct &lt;code>cat&lt;/code> &lt;code>caat&lt;/code> &lt;code>caaat&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;p>当在字符集合上使用&lt;code>+&lt;/code>的时候，需要将&lt;code>+&lt;/code>符号放在集合外面：&lt;/p>
&lt;blockquote>
&lt;p>正则表达式：&lt;code>c[0-9]+t&lt;/code>
待匹配文本：ct c0t cat c123t
匹配后结果：ct &lt;code>c0t&lt;/code> cat &lt;code>c123t&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;p>分析：&lt;code>c[0-9]+t&lt;/code>表示以&amp;quot; c &amp;ldquo;开头，以&amp;rdquo; t &amp;ldquo;结尾，中间为一个或多个数字的字符串。&lt;/p>
&lt;p>当然，&lt;code>[0-9+]&lt;/code>也是一个合法的正则表达式，但它表示一个包含 &amp;quot; 0 &amp;quot; - &amp;quot; 9 &amp;quot; 和 &amp;quot; + &amp;quot; 符号的字符集合。&lt;/p>
&lt;p>一般的，元字符如&lt;code>.&lt;/code>和&lt;code>+&lt;/code>等用于字符集合的时候是作为字面含义使用的，因此没有必要转义。但是对其进行转义也没错，所以，&lt;code>[0-9+]&lt;/code>和&lt;code>[0-9\+]&lt;/code>的功能是一样的。&lt;/p>
&lt;p>注意：&lt;code>+&lt;/code>是一个元字符，匹配&amp;rdquo;+&amp;ldquo;需要使用转义&lt;code>\+&lt;/code>。&lt;/p>
&lt;h1 id="匹配零个或者更多字符">匹配零个或者更多字符&lt;/h1>
&lt;p>如果希望匹配零个或更多字符的时候，可以使用&lt;code>*&lt;/code>元字符。&lt;/p>
&lt;blockquote>
&lt;p>正则表达式：&lt;code>ca*t&lt;/code>
待匹配文本：ct cat caat cbt
匹配后结果：&lt;code>ct&lt;/code> &lt;code>cat&lt;/code> &lt;code>caat&lt;/code> cbt&lt;/p>
&lt;/blockquote>
&lt;p>注意：&lt;code>*&lt;/code>符号是元字符。为了能够匹配&amp;rdquo; * &amp;ldquo;，需要进行转义&lt;code>\*&lt;/code>。&lt;/p>
&lt;h1 id="匹配零个或者一个字符">匹配零个或者一个字符&lt;/h1>
&lt;p>&lt;code>?&lt;/code>匹配零个或者一个字符。所以，&lt;code>?&lt;/code>非常适合于在文本中匹配一个可选的字符。&lt;/p>
&lt;blockquote>
&lt;p>正则表达式：&lt;code>ca?t&lt;/code>
待匹配文本：ct cat caat cbt
匹配后结果：&lt;code>ct&lt;/code> &lt;code>cat&lt;/code> caat cbt&lt;/p>
&lt;/blockquote>
&lt;p>注意：&lt;code>?&lt;/code>符号是元字符。为了能够匹配&amp;rdquo; ? &amp;ldquo;，需要进行转义&lt;code>\?&lt;/code>。&lt;/p>
&lt;h1 id="使用匹配次数">使用匹配次数&lt;/h1>
&lt;p>正则表达式允许指定匹配的次数。次数可以在“ { ”和“ } ”之间指定。
注意：&lt;code>{&lt;/code>和&lt;code>}&lt;/code>也是元字符，在使用字面含义的时候需要转义。&lt;/p>
&lt;p>&lt;strong>精确次数匹配&lt;/strong>
为了指定匹配的次数，你可以在&lt;code>{&lt;/code>和&lt;code>}&lt;/code>之间输入数字。例如，&lt;code>{3}&lt;/code>将匹配 3 次前面出现的字符或集合：&lt;/p>
&lt;blockquote>
&lt;p>正则表达式：&lt;code>ca{3}t&lt;/code>
待匹配文本：ct cat caaat cbt
匹配后结果：ct cat &lt;code>caaat&lt;/code> cbt&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>至少次数匹配&lt;/strong>
我们也可以只指定匹配的最小值。例如，&lt;code> {2,}&lt;/code>意味着匹配 2次或者更多次：&lt;/p>
&lt;blockquote>
&lt;p>正则表达式：&lt;code>ca{1,}t&lt;/code>
待匹配文本：ct cat caaat cbt
匹配后结果：ct &lt;code>cat&lt;/code> &lt;code>caaat&lt;/code> cbt&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>次数区间匹配&lt;/strong>
我们还可以使用最小值和最大值来确定匹配的数量。例如，&lt;code>{2,3}&lt;/code>意味着最少匹配 2次，最多匹配3次。 &lt;/p>
&lt;blockquote>
&lt;p>正则表达式：&lt;code>ca{2,3}t&lt;/code>
待匹配文本：ct cat caaat cbt
匹配后结果：ct cat &lt;code>caaat&lt;/code> cbt&lt;/p>
&lt;/blockquote>
&lt;p>所以&lt;code>?&lt;/code>和&lt;code>{0,1}&lt;/code>的功能是一样的，&lt;code>+&lt;/code>和 &lt;code>{1,}&lt;/code>的作用是一样的。&lt;/p>
&lt;h1 id="非贪婪匹配">非贪婪匹配&lt;/h1>
&lt;p>先看看下面的例子：&lt;/p>
&lt;blockquote>
&lt;p>正则表达式：&lt;code>s.*g&lt;/code>
待匹配文本：xiao song xiao song
匹配后结果：xiao &lt;code>song xiao song&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;p>分析：&lt;code>s.*g&lt;/code>并没像预想中的匹配两个&amp;rdquo; song &amp;ldquo;，而是匹配了第一个&amp;rdquo; s &amp;ldquo;和最后一个 &amp;quot; g &amp;ldquo;之间的所有文本。&lt;/p>
&lt;p>这是因为&lt;code>*&lt;/code>和&lt;code>+&lt;/code>都是贪婪匹配。也就是说，正则表达式总是寻找最大的匹配，而不是最小的，这是故意设计的。&lt;/p>
&lt;p>但是如果你不希望贪婪匹配的时候就要使用这些量词的非贪婪匹配（匹配尽可能少的字符）。非贪婪量词是在量词后面加上&lt;code>?&lt;/code>：&lt;/p>
&lt;p>贪婪量词 | 非贪婪量词&lt;/p>
&lt;ul>
&lt;li>| -&lt;/li>
&lt;/ul>
&lt;ul>
&lt;li>| *?&lt;/li>
&lt;/ul>
&lt;ul>
&lt;li>|+?
{n,} | {n,}?&lt;/li>
&lt;/ul>
&lt;p>&lt;code>*?&lt;/code>是&lt;code>*&lt;/code>的非贪婪版本，所以可以使用&lt;code>*?&lt;/code>来修改上面的例子：&lt;/p>
&lt;blockquote>
&lt;p>正则表达式：&lt;code>s.*?g&lt;/code>
待匹配文本：xiao song xiao song
匹配后结果：xiao &lt;code>song&lt;/code> xiao &lt;code>song&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;p>分析：可以看到&lt;code>s.*?g&lt;/code>匹配到了两个&amp;rdquo; song &amp;ldquo;。&lt;/p>
&lt;h1 id="定义字符串边界">定义字符串边界&lt;/h1>
&lt;p>字符串边界匹配的元字符是&lt;code>^&lt;/code>和&lt;code>$&lt;/code>，分别用于字符串的开始和结束。&lt;/p>
&lt;p>&lt;code>^&lt;/code>用法如下：&lt;/p>
&lt;blockquote>
&lt;p>正则表达式：&lt;code>^xiao&lt;/code>&lt;/p>
&lt;p>待匹配文本：xiaosong
匹配后结果：&lt;code>xiao&lt;/code>song&lt;/p>
&lt;p>待匹配文本：axiaosong
匹配后结果：axiaosong&lt;/p>
&lt;/blockquote>
&lt;p>分析：&lt;code>^xiao&lt;/code>匹配以&amp;rdquo; xiao &amp;ldquo;开头的字符串。&lt;/p>
&lt;p>&lt;code>$&lt;/code>用法如下：&lt;/p>
&lt;blockquote>
&lt;p>正则表达式：&lt;code>song$&lt;/code>&lt;/p>
&lt;p>待匹配文本：xiaosong
匹配后结果：xiao&lt;code>song&lt;/code>&lt;/p>
&lt;p>待匹配文本：xiaosonga
匹配后结果：xiaosonga&lt;/p>
&lt;/blockquote>
&lt;p>分析：&lt;code>song$&lt;/code>匹配以&amp;quot;song &amp;ldquo;结尾的字符串。&lt;/p>
&lt;p>共同使用：&lt;/p>
&lt;blockquote>
&lt;p>正则表达式：&lt;code>^[0-9a-zA-Z]{4,}$&lt;/code>&lt;/p>
&lt;p>待匹配文本：a1b234ABC
匹配后结果：&lt;code>a1b234ABC&lt;/code>&lt;/p>
&lt;p>待匹配文本：+a1b23=4ABC
匹配后结果：+a1b23=4ABC&lt;/p>
&lt;/blockquote>
&lt;p>分析：&lt;code>^[0-9a-zA-Z]{4,}$&lt;/code>匹配用数字或者字母组成的，并且位数大于等于四位的字符串。&lt;/p>
&lt;p>注意：&lt;code>^&lt;/code>如果位于集合开始处的话，则表示否定；如果在集合外面，则将匹配字符串的开始位置。大家可以试试&lt;code>[^0-9]&lt;/code>和&lt;code>^[0-9]&lt;/code>的区别。&lt;/p>
&lt;h1 id="使用多行模式">使用多行模式&lt;/h1>
&lt;p>但是&lt;code>(?m)&lt;/code>可以启用多行模式。在多行模式下，正则表达式引擎将换行符作为字符串的分隔符，&lt;code>^&lt;/code>将匹配文本的开始或者一行的开始，而&lt;code>$&lt;/code>则可以匹配文本的结束或者是一行的结尾处。&lt;/p>
&lt;p>修改下上个例子：&lt;/p>
&lt;blockquote>
&lt;p>正则表达式：&lt;code>(?m)^[0-9a-zA-Z]{4,}$&lt;/code>&lt;/p>
&lt;p>待匹配文本：a1b234ABC
+a1b23=4ABC
ABC123456&lt;/p>
&lt;p>匹配后结果：&lt;code>a1b234ABC&lt;/code>
+a1b23=4ABC
&lt;code>ABC123456&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;p>分析：&lt;code>(?m)^[0-9a-zA-Z]{4,}$&lt;/code>会去匹配每行&lt;code>用数字或者字母组成的，并且位数大于等于四位&lt;/code>的字符串。&lt;/p>
&lt;p>注意：如果使用多行模式的话，&lt;code>(?m)&lt;/code>必须放置在正则表达式的开始。
&lt;code>(?m)&lt;/code>在大部分的正则表达式实现中并不支持。有些正则表达式实现还支持使用&lt;code>\A&lt;/code>匹配字符串的开始，&lt;code>\Z&lt;/code>匹配字符串的结束。如果支持的话，则这些元字符的功能和&lt;code>^&lt;/code>、&lt;code>$&lt;/code>是一样的。但是这些元字符不能使用&lt;code>(?m)&lt;/code>修饰，所以也不能用于多行模式。&lt;/p></description></item><item><title>超详细的Xcode代码格式化教程，可自定义样式</title><link>https://lisongrc.github.io/p/2016099de00e69/</link><pubDate>Sat, 10 Sep 2016 21:44:04 +0000</pubDate><guid>https://lisongrc.github.io/p/2016099de00e69/</guid><description>&lt;h1 id="为什么要格式化代码">为什么要格式化代码&lt;/h1>
&lt;p>当团队内有多人开发的时候，每个人写的代码格式都有自己的喜好，也可能会忙着写代码而忽略了格式的问题。
在之前，我们可能会写完代码后，再一点一点去调格式，很浪费时间。&lt;/p>
&lt;p>有了&lt;code>ClangFormat&lt;/code>插件后，就可以一键把代码格式化成统一的样式，不仅节省了时间，也使得代码更规范。我们还可以定制自己喜欢的样式。&lt;/p>
&lt;h1 id="安装clangformat插件">安装ClangFormat插件&lt;/h1>
&lt;p>可以手动安装(下载&lt;a class="link" href="https://github.com/travisjeffery/ClangFormat-Xcode" target="_blank" rel="noopener"
>GitHub项目&lt;/a>编译)，也可以用&lt;a class="link" href="https://github.com/alcatraz/Alcatraz" target="_blank" rel="noopener"
>Alcatraz&lt;/a>(插件管理器)安装，都很简单，具体可以看我的文章&lt;a class="link" href="http://www.jianshu.com/p/51635869b027" target="_blank" rel="noopener"
>《Xcode方便开发的插件推荐》&lt;/a>。&lt;/p>
&lt;p>装好后是下图这样的，我们可以看到它内置了&lt;code>LLVM&lt;/code>、&lt;code>Google&lt;/code>、&lt;code>Chromium&lt;/code>、&lt;code>Mozilla&lt;/code>、&lt;code>WebKit&lt;/code>五种样式。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-851e929f08aa1ed8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="插件菜单"
>&lt;/p>
&lt;h1 id="使用方法">使用方法&lt;/h1>
&lt;p>通过菜单可以看到，它可以格式化选中的文字们，或者格式化选择的文件们。下面演示下&lt;code>LLVM&lt;/code>样式下的格式化：
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-ebca3898fbfb438a.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="LLVM样式下的格式化"
>&lt;/p>
&lt;h1 id="使用自定义样式">使用自定义样式&lt;/h1>
&lt;p>1、需要先把上面菜单里面的File选中，因为我们需要让它用我们自己写的配置文件。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-819361a437dcba49.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="选中File"
>&lt;/p>
&lt;p>2、在工程目录下创建配置文件&lt;code>.clang-format&lt;/code>文件并编辑。&lt;code>.clang-format&lt;/code>文件用的是&lt;code>YAML&lt;/code>格式:里面要用的字段在后面会详细解释。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">key1&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">value1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 一个注释&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">key2&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">value2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-da9562ec5051cc32.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="自定义样式格式化代码"
>&lt;/p>
&lt;p>当然如果你已经有&lt;code>.clang-format&lt;/code>文件的话，直接拖动到项目根目录也可以。
文章结尾有我在用的&lt;code>.clang-format&lt;/code>文件。&lt;/p>
&lt;p>温馨提示：&lt;code>.clang-format&lt;/code>文件是隐藏文件，默认是看不见的。需要在终端输入以下命令：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">//显示 隐藏文件
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">defaults write com.apple.finder AppleShowAllFiles -bool &lt;span class="nb">true&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">killall Finder
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">//隐藏 隐藏文件
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">defaults write com.apple.finder AppleShowAllFiles -bool &lt;span class="nb">false&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">killall Finder
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="全局配置">全局配置&lt;/h1>
&lt;p>上面我们是在项目根目录创建的&lt;code>.clang-format&lt;/code>文件，每次建新项目都要有。如果你想让所有的项目公用一个文件，把&lt;code>.clang-format&lt;/code>文件放在所有项目都在的一个最大根目录下就可以了。&lt;/p>
&lt;p>###让一段代码不受格式化影响
如果想让一段代码不受格式化影响，需要将他们包含在&lt;code>// clang-format off&lt;/code> 和 &lt;code>// clang-format on&lt;/code>这两句注释之间，这样这段代码就不会被格式化，但是这两句注释本身是会被格式化的。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-6c78a84cca358db2.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="让一段代码不受格式化影响"
>&lt;/p>
&lt;h1 id="设置快捷键">设置快捷键&lt;/h1>
&lt;p>首先你可以选中菜单中的 &lt;code>Enable Format On Sava&lt;/code>，把它点&lt;code>Disable Format On Sava&lt;/code>，这样以后每次按&lt;code>⌘+S&lt;/code>保存文件时就可以自动格式化了。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-1084e334da53f3b1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="屏幕快照 2016-09-10 下午12.43.50.png"
>&lt;/p>
&lt;p>我们也可以给一些菜单设置快捷键，使用的时候不用每次去选择各级菜单了。比如我们给&lt;code>Format Selected Text&lt;/code>设置快捷键：
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-4c570e4af91ed499.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="设置格式化快捷键"
>&lt;/p>
&lt;p>你也可以为其他菜单设置快捷键，其实呢，我用&lt;code>Format Selected Text&lt;/code>的时候很少，每次都是想格式化的时候直接&lt;code>⌘+S&lt;/code>就行了哈哈哈。&lt;/p>
&lt;h1 id="配置文件中属性的含义讲解">配置文件中属性的含义讲解&lt;/h1>
&lt;p>下面说一些配置文件的常用的参数介绍，其他的可以看官方文档：&lt;a class="link" href="http://clang.llvm.org/docs/ClangFormatStyleOptions.html" target="_blank" rel="noopener"
>Clang-Format Style Options&lt;/a>，其中小括号内代表他需的是什么类型的值。&lt;/p>
&lt;p>&lt;strong>BasedOnStyle&lt;/strong> (string)
基于哪种样式。除了文件中写出的定制属性外，别的没定制的属性都默认用这种样式的。
可选值有五种：
&lt;code>LLVM&lt;/code>：一种遵循&lt;a class="link" href="http://llvm.org/docs/CodingStandards.html" target="_blank" rel="noopener"
>LLVM coding standards&lt;/a>的样式。
&lt;code>Google&lt;/code>：一种遵循&lt;a class="link" href="http://google-styleguide.googlecode.com/svn/trunk/cppguide.xml" target="_blank" rel="noopener"
>Google’s C++ style guide&lt;/a>的样式。
&lt;code>Chromium&lt;/code>：一种遵循&lt;a class="link" href="http://www.chromium.org/developers/coding-style" target="_blank" rel="noopener"
>Chromium’s style guide&lt;/a>的样式。
&lt;code>Mozilla&lt;/code>：一种遵循&lt;a class="link" href="https://developer.mozilla.org/en-US/docs/Developer_Guide/Coding_Style" target="_blank" rel="noopener"
>Mozilla’s style guide&lt;/a>的样式。
&lt;code>WebKit&lt;/code>：一种遵循&lt;a class="link" href="http://www.webkit.org/coding/coding-style.html" target="_blank" rel="noopener"
>WebKit’s style guide&lt;/a>的样式。&lt;/p>
&lt;p>&lt;strong>AccessModifierOffset&lt;/strong> (int)
访问修饰词 (比如public) 前面额外需要加的缩进长度。默认为0。&lt;/p>
&lt;p>&lt;strong>AlignConsecutiveAssignments&lt;/strong> (bool)
如果是true，把连续的赋值操作按=对齐，默认为false。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-8f8ce880dfe20834.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="AlignConsecutiveDeclarations-true"
>&lt;/p>
&lt;p>&lt;strong>AlignConsecutiveDeclarations&lt;/strong> (bool)
如果是true，把连续行的变量名对齐。默认为false。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-f6f5813271f55d32.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="AlignConsecutiveDeclarations-true"
>&lt;/p>
&lt;p>&lt;strong>AlignTrailingComments&lt;/strong> (bool)
如果是true，对齐尾部注释。默认为false。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-9aeb5efd657ce59e.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="AlignTrailingComments-true"
>&lt;/p>
&lt;p>&lt;strong>AllowShortCaseLabelsOnASingleLine&lt;/strong> (bool)
如果是true, 允许一个case在一行写完，默认为false。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-ed5a85374909cd10.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="AllowShortCaseLabelsOnASingleLine-true"
>&lt;/p>
&lt;p>&lt;strong>BreakBeforeBraces&lt;/strong> (string)
大括号前面是否换行，具体可选值看文档。一般用Allman，代表所有大括号都换行。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-52fa2344d0d9deba.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="BreakBeforeBraces-Allman"
>&lt;/p>
&lt;p>&lt;strong>ColumnLimit&lt;/strong> (unsigned)
每行最多多少个字符，0不限制&lt;/p>
&lt;p>&lt;strong>IndentWidth&lt;/strong> (unsigned)
缩进宽度，默认为2，但是我们一般设置为4。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-b23f5f1d0ce8986d.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="IndentWidth-4"
>&lt;/p>
&lt;p>&lt;strong>IndentCaseLabels&lt;/strong> (bool)
switch的case缩进宽度，一般用true。默认为false，case会和switch对齐。&lt;/p>
&lt;p>&lt;strong>KeepEmptyLinesAtTheStartOfBlocks&lt;/strong> (bool)
是否保留block里面开始的空行们。默认为true。&lt;/p>
&lt;p>&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-c113fbb4bb5f9107.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="KeepEmptyLinesAtTheStartOfBlocks-true"
>
&lt;strong>MaxEmptyLinesToKeep&lt;/strong> (unsigned)
最多可以有连续几行空行，默认为1。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-997b9eed8eda63ea.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="MaxEmptyLinesToKeep-1"
>&lt;/p>
&lt;p>&lt;strong>ObjCBlockIndentWidth&lt;/strong>
OC的block里面的缩进宽度，默认为4。&lt;/p>
&lt;p>&lt;strong>ObjCSpaceAfterProperty&lt;/strong> (bool)
OC里面，是否在@property后加空格。默认为false。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-0759d6e90844a00d.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="ObjCSpaceAfterProperty-true"
>&lt;/p>
&lt;p>&lt;strong>ObjCSpaceBeforeProtocolList&lt;/strong> (bool)
OC里面，是否在Protocol名字列表前面加空格，默认为true。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-a750da85c92c20df.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="ObjCSpaceBeforeProtocolList-true"
>&lt;/p>
&lt;p>&lt;strong>PointerAlignment&lt;/strong> (string)
指针的位置。默认为Right。
可选值：
Left：&lt;code>NSString* name&lt;/code>
Middle：&lt;code>NSString * name&lt;/code>
Right：&lt;code>NSString *name&lt;/code>&lt;/p>
&lt;p>&lt;strong>SpaceBeforeAssignmentOperators&lt;/strong> (bool)
&lt;code>=&lt;/code> 前面是否有空格。默认为true。&lt;/p>
&lt;p>&lt;strong>SpaceBeforeParens&lt;/strong> (string)
是否在&lt;code>(&lt;/code>前面加空格。默认ControlStatements。
可选值：
Never: 从来不在&lt;code>(&lt;/code>前面加空格。
ControlStatements:在控制语句(for/if/while&amp;hellip;)的&lt;code>(&lt;/code>前面加空格。
Always:总会在&lt;code>(&lt;/code>前面加空格。&lt;/p>
&lt;p>&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-70ecea9d5279030b.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="SpaceBeforeParens-ControlStatements"
>
&lt;strong>SpaceInEmptyParentheses&lt;/strong> (bool)
是否在&lt;code>()&lt;/code>里面插入一个空格。默认false。&lt;/p>
&lt;p>&lt;strong>SpacesBeforeTrailingComments&lt;/strong> (unsigned)
在尾部//注释前面加几个空格。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-0e3aecf7e11187da.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="SpacesBeforeTrailingComments-3"
>&lt;/p>
&lt;p>&lt;strong>SpacesInAngles&lt;/strong> (bool)
是否在&lt;code>&amp;lt;&lt;/code>后边和&lt;code>&amp;gt;&lt;/code>前边插入空格，默认为false。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-965992106a532ac1.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="SpacesInAngles-true"
>&lt;/p>
&lt;p>&lt;strong>SpacesInContainerLiterals&lt;/strong> (bool)
&lt;code>@[]&lt;/code>里面，是否在 &lt;code>[&lt;/code> 后和 &lt;code>]&lt;/code> 前加空格。默认为true。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-1a38aac48c0c1fe6.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="SpacesInContainerLiterals-true"
>&lt;/p>
&lt;p>&lt;strong>SpacesInParentheses&lt;/strong> (bool)
是否在&lt;code>(&lt;/code>后面和&lt;code>)&lt;/code>前面加空格，默认为false。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-b496ff2996fa1804.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="SpacesInParentheses-true"
>&lt;/p>
&lt;p>当项目里面有多种语言时，我们可以分别设置样式：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 我们默认用 LLVM 样式, 缩进宽度为4。&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">BasedOnStyle&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">LLVM&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">IndentWidth&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">4&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">Language&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Cpp&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># C++ 设置星号左对齐。&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">PointerAlignment&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Left&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">Language&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">JavaScript&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># JavaScript 每行字符限制设置为100。&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">ColumnLimit&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">100&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">Language&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Proto&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 不格式化Proto文件。&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">DisableFormat&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nn">...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这个是我在用的&lt;a class="link" href="https://github.com/lisongrc/clang-format" target="_blank" rel="noopener"
>.clang-format&lt;/a>文件。大家可以下载下来自己修改一下再用。&lt;/p></description></item><item><title>看一遍就会的CocoaPods的安装和使用教程</title><link>https://lisongrc.github.io/p/201609750b7a66/</link><pubDate>Thu, 08 Sep 2016 00:47:54 +0000</pubDate><guid>https://lisongrc.github.io/p/201609750b7a66/</guid><description>&lt;h1 id="什么是cocoapods">什么是CocoaPods？&lt;/h1>
&lt;p>CocoaPods是专门为iOS工程提供对第三方库的依赖的管理工具，通过CocoaPods，我们可以更方便地管理每个第三方库的版本，而且不需要我们做太多的配置。直观、集中和自动化地管理我们项目的第三方库。&lt;/p>
&lt;p>我们都有这样的经历，当我们添加第三方库的时候，需要导入一堆相关依赖库，更新的时候也要删掉重新导入然后再配置。当我们需要更新某个第三方库的时候，我们又要手动移除该库，导入新的库，然后再配置。这些是很麻烦且没有意义的工作。&lt;/p>
&lt;p>当我们开始使用CocoaPods管理第三方库后，我们只需要相当少的配置，其它的一切都交由CocoaPods来管理即可，我们使用起来就更省心了。&lt;/p>
&lt;h1 id="安装cocoapods">安装CocoaPods&lt;/h1>
&lt;p>1.首先更新gem到最新版本，在终端中输入：&lt;code>$ sudo gem update --system&lt;/code>,注意不要把“$”复制上。等待一会儿会看到：
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-cb315df2818bedef.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="更新gem"
>&lt;/p>
&lt;p>2.删除自带的ruby镜像，终端输入：&lt;code>gem sources --remove https://rubygems.org/&lt;/code>。
3.添加淘宝的镜像，终端输入：&lt;code>gem sources -a https://gems.ruby-china.org/&lt;/code>(原来的淘宝镜像 &lt;code>https://ruby.taobao.org/&lt;/code>已经不能用了)。
4.可以用&lt;code>gem sources -l&lt;/code> 来检查使用替换镜像位置成功，结果应该只有 &lt;code>https://gems.ruby-china.org/&lt;/code> 才对。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-b51ee1565476195f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="修改镜像"
>&lt;/p>
&lt;p>5.安装CocoaPods，终端输入：&lt;code>sudo gem install cocoapods&lt;/code>。
等待一会儿会看到：
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-aac3fb999f47a671.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="安装CocoaPods"
>&lt;/p>
&lt;p>6.然后配置下CocoaPods，终端输入：&lt;code>pod setup&lt;/code>。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-da73a2f6374ff2a6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="配置CocoaPods"
>&lt;/p>
&lt;p>等待过程可能有点长，成功后会看到：
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-444760464dc47119.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="配置成功"
>&lt;/p>
&lt;p>到这里CocoaPods就安装好了。&lt;/p>
&lt;h1 id="查找第三方库">查找第三方库&lt;/h1>
&lt;p>比如查找MJExtension，终端输入：&lt;code>pod search MJExtension&lt;/code>，第一次搜索他需要建索引，等待一会儿就可以了。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-861fe8b1d10fb218.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="建索引中"
>&lt;/p>
&lt;p>完成后他会自动进入一个新的页面显示搜索结果，上下滑动查看更多，要退出的话按&lt;code>wq&lt;/code>就可以了。以后再搜索就不需要建索引了。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-ebbb361ab224f8ea.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="查找结果"
>&lt;/p>
&lt;h1 id="引入第三方库到项目中">引入第三方库到项目中&lt;/h1>
&lt;p>我先在桌面上新建一个Test项目，然后演示把MJExtension导进去。
刚开始的文件目录是这样的
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-6d6542711c7e5354.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="原始目录.png"
>&lt;/p>
&lt;p>1,首先打开终端，cd到Test路径下。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-4e369e27dff1bdaa.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="Test"
>
2.然后生成并编辑一个Podfile文件，命令为&lt;code>vim Podfile&lt;/code>，要导入的第三方都要在这里面写上。进去后需要先按&lt;code>I&lt;/code>键进入编辑状态，写完后按&lt;code>esc&lt;/code>，然后按&lt;code>shift+zz&lt;/code>(或者先按&lt;code>shift+:&lt;/code>,再按&lt;code>wq&lt;/code>)就可以保存退出了。下面的动图里面都有。
Podfile的格式大概如下，其中&amp;rsquo;Test&amp;rsquo;为你的target的名字。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="line">&lt;span class="cl">&lt;span class="n">platform&lt;/span> &lt;span class="ss">:ios&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;8.0&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">target&lt;/span> &lt;span class="s1">&amp;#39;Test&amp;#39;&lt;/span> &lt;span class="k">do&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">pod&lt;/span> &lt;span class="s1">&amp;#39;MJExtension&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;~&amp;gt; 3.0.13&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>3.安装，命令为：&lt;/code>pod install`。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-871f9b7d8a8d4ddb.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="安装第三方"
>&lt;/p>
&lt;p>安装成功之后，就可以去项目里面使用了。现在的项目文件变成了这样
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-ea4c67a24307d77a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="屏幕快照 2016-09-07 23.23.19.png"
>&lt;/p>
&lt;p>之前我们一直是双击&lt;code>Test.xcodeproj&lt;/code>打开项目，以后我们就要双击&lt;code>Test.xcworkspace&lt;/code>打开了，打开后发现项目里面多了红色框的部分，可以看到MJExtension已经被引入了。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-3ccc26e945f9c96a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="多出来的文件"
>&lt;/p>
&lt;h1 id="使用第三方">使用第三方&lt;/h1>
&lt;p>你会发现当引入MJExtension的头文件时，可以&lt;code>#import &amp;lt;MJExtension.h&amp;gt;&lt;/code>或者&lt;code>#import &amp;lt;MJExtension/MJExtension.h&amp;gt;&lt;/code>，但是却不能在输入&lt;code>#import &amp;quot;MJExtension.h&amp;quot;&lt;/code>的时候出现提示。虽然强制输入也可以编译通过，但是感觉很不爽。
解决这个问题的办法是在工程的&lt;code>Build Settings&lt;/code>搜索&lt;code>Search&lt;/code>，然后在&lt;code>User header search paths&lt;/code>中添加&lt;code>$(SRCROOT)&lt;/code>并选择&lt;code>recursive&lt;/code>。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-d99fcc7b0cc5733d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="头文件不提示的解决办法"
>
现在就可以提示#import &amp;ldquo;MJExtension.h&amp;quot;啦。
然后我们就可以在项目里面使用MJExtension的方法啦。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-4cec4b4d7fcfa4a4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="使用MJExtension"
>&lt;/p>
&lt;h1 id="增加新的第三方">增加新的第三方&lt;/h1>
&lt;p>如果使用过程中我还想添加其他的第三方怎么办，只要在Podfile里面接着添加，然后终端再执行&lt;code>pod instal&lt;/code>l就可以了。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-de0abe938314e79d.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="新增第三方"
>&lt;/p>
&lt;h1 id="更新cocoapods中的第三方们">更新CocoaPods中的第三方们。&lt;/h1>
&lt;p>第三方库们都有人在维护升级，我们需要隔断时间就要更新下我们工程中第三方库的版本。只需要终端输入命令&lt;code>pod update&lt;/code>就可以了。&lt;/p>
&lt;p>如果遇到&lt;code>pod install&lt;/code>或者&lt;code>pod update&lt;/code>慢的问题，原因在于当执行以上两个命令的时候会升级CocoaPods的spec仓库，加一个参数可以省略这一步，然后速度就会提升不少。加参数的命令如下：
&lt;code>pod install --verbose --no-repo-update&lt;/code>
&lt;code>pod update --verbose --no-repo-update&lt;/code>&lt;/p>
&lt;h1 id="删除cocoapods中的某些第三方们">删除CocoaPods中的某些第三方们。&lt;/h1>
&lt;p>当我们需要去掉某个第三方库时，只需要在Podfile删除该引入该库的语句，然后执行&lt;code>pod update&lt;/code>或者&lt;code>pod install&lt;/code>就可以了。&lt;/p>
&lt;h1 id="将cocoapods从项目中删除">将CocoaPods从项目中删除&lt;/h1>
&lt;p>如果你在以后的使用过程中不想用CocoaPods了怎么办？很简单，把多出来的东西们都删掉就可以了，不过为了项目正常运行，你需要手动导入已经使用的第三方们哦。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-d1ddb8792b25dbba.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="将CocoaPods从项目中删除"
>&lt;/p>
&lt;h1 id="升级cocoapods">升级CocoaPods&lt;/h1>
&lt;p>升级CocoaPods版本的命令和安装CocoaPods的命令一样，都是&lt;code>sudo gem install cocoapods&lt;/code>。
如果老版本升级cocoapods的时候提示&lt;code>Operation not permitted - /usr/bin/xcodeproj&lt;/code>，改用命令&lt;code>sudo gem install -n /usr/local/bin cocoapods --pre&lt;/code>就可以了。&lt;/p>
&lt;h1 id="卸载cocoapods">卸载CocoaPods&lt;/h1>
&lt;p>卸载CocoaPods的命令是&lt;code>sudo gem uninstall cocoapods&lt;/code>
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-8223f4baa3464e17.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="卸载CocoaPods"
>&lt;/p>
&lt;p>执行完命令后，最下面打印Successfully uninstalled cocoapods字样就代表已经成功卸载了。&lt;/p>
&lt;h1 id="cocoapods-mac-app的安装和使用">CocoaPods Mac App的安装和使用&lt;/h1>
&lt;p>CocoaPods桌面应用版下载地址：https://cocoapods.org/app
打开应用会提示你是否安装命令行工具，选择&lt;code>install&lt;/code>就也可以在命令行使用Pod了。省去了上面的步骤们，方便快捷的使用CocoaPods。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-64fdfe34e7ba8fa6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="是否安装命令行工具"
>&lt;/p>
&lt;p>现在假如要给一个Test项目加入第三方库
1.选择File-New Podfile from Xcode Project，去选择项目的Project文件。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-dfb7cdefde72d963.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="选择项目"
>&lt;/p>
&lt;p>2.填写自动生成的Podfile，并且安装。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-05b24b5b6c711a43.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="Podfile"
>&lt;/p>
&lt;p>然后就可以去打开工程了，是不是比命令行简单多了。
注意：Cocoapods.app 删掉并执行命令可能会报错：&lt;code>Unable to locate the CocoaPods.app application bundle. Please ensure the application is available and launch it at least once&lt;/code>
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-baedf94b4133ad6e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="错误信息.png"
>&lt;/p>
&lt;p>这时候只要执行&lt;code>sudo gem install -n /usr/local/bin cocoapods&lt;/code>命令就可以了。&lt;/p>
&lt;h1 id="cocoapods官方使用指南">CocoaPods官方使用指南&lt;/h1>
&lt;p>链接：https://guides.cocoapods.org/
有什么不了解的或者遇到错误可以去这里查看一下。&lt;/p>
&lt;h1 id="xcode的cocoapods插件">XCode的CocoaPods插件&lt;/h1>
&lt;p>&lt;a class="link" href="https://github.com/kattrali/cocoapods-xcode-plugin" target="_blank" rel="noopener"
>CocoaPods-xcode-plugin&lt;/a>是一个XCode的插件，可以很方便的在Xcode通过pods安装各种第三方库。前提是终端已经安装好CocoaPods，使用方法大概如下：
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-533856e1cdb3a9c5.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="CocoaPods插件使用"
>&lt;/p></description></item><item><title>UIImage图片处理，旋转、截取、平铺、缩放等操作，持续更新中</title><link>https://lisongrc.github.io/p/2016095d76ea11/</link><pubDate>Sun, 04 Sep 2016 20:37:30 +0000</pubDate><guid>https://lisongrc.github.io/p/2016095d76ea11/</guid><description>&lt;p>有时候我们需要处理图片，比如改变大小，旋转，截取等等，所以今天说一说图片处理相关的一些操作。
本文所说的方法都是写在UIImage的Category中，这样使用起来也方便；由于代码太多，这里就不贴具体实现代码了，大家可以去我的Github查看&lt;a class="link" href="https://github.com/lisongrc/UIImage-Categories" target="_blank" rel="noopener"
>demo&lt;/a>，效果如下：&lt;/p>
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-5023a6afa907f819.gif?imageMogr2/auto-orient/strip" alt="demo效果.gif" style="zoom: 67%;" />
&lt;h1 id="颜色相关">颜色相关&lt;/h1>
&lt;p>&lt;strong>1.根据颜色生成纯色图片&lt;/strong>
就是根据制定的颜色生成一张纯色的图片&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">+ (UIImage *)imageWithColor:(UIColor *)color;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>使用方法，比如设置UIImageView的图片为红色纯图片：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">self.imageView.image = [UIImage imageWithColor:[UIColor redColor]];
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>2.取图片上某一像素的颜色&lt;/strong>
有时候我们需要获取图片上的某一点的颜色，比如画板应用选择画笔颜色的时候，其实是在一张有所有颜色的图片上点击选择实现的。
需要注意的是这里要传的参数point是相对于图片上的点。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">- (UIColor *)colorAtPixel:(CGPoint)point;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>使用方法，比如我们在图片上加个tap手势，然后在响应方法里面这样写就可以了：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">- (void)handleTap:(UITapGestureRecognizer *)tap
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    CGPoint point = [tap locationInView:tap.view];
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    UIImage *image = self.imageView.image;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    CGPoint pointInImage = CGPointMake(point.x * image.size.width / self.imageView.frame.size.width, point.y * image.size.height / self.imageView.frame.size.height);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    self.view.backgroundColor = [image colorAtPixel:pointInImage];
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>**3.获得灰度图 **
获取一张彩色图片的黑白图片&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">- (UIImage *)convertToGrayImage;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>使用方法：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">self.imageView.image = [image convertToGrayImage];
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="旋转相关">旋转相关&lt;/h1>
&lt;p>&lt;strong>1.纠正图片的方向&lt;/strong>
当我们需要读取相册的图片，发现相册里面的方向和展示出来的图片的方向不一样，这时候就要矫正方向了。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">- (UIImage *)fixOrientation;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>使用:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">self.imageView.image = [image fixOrientation];
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>2.按给定的方向旋转图片&lt;/strong>
在做图片处理工具的时候，我们可能需要旋转图片。
这个方法的参数是系统枚举UIImageOrientation。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">typedef NS_ENUM(NSInteger, UIImageOrientation) {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    UIImageOrientationUp,            // default orientation
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    UIImageOrientationDown,          // 180 deg rotation
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    UIImageOrientationLeft,          // 90 deg CCW
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    UIImageOrientationRight,         // 90 deg CW
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    UIImageOrientationUpMirrored,    // as above but image mirrored along other axis. horizontal flip
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    UIImageOrientationDownMirrored,  // horizontal flip
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    UIImageOrientationLeftMirrored,  // vertical flip
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    UIImageOrientationRightMirrored, // vertical flip
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">};
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- (UIImage*)rotate:(UIImageOrientation)orient;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>使用，比如顺时针旋转180度：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">self.imageView.image = [image rotate:UIImageOrientationDown];
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>3.垂直翻转&lt;/strong>
其实就是上面的方法传UIImageOrientationDownMirrored参数。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">- (UIImage *)flipVertical;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>4.水平翻转&lt;/strong>
其实就是传UIImageOrientationUpMirrored参数。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">- (UIImage *)flipHorizontal;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>5.将图片旋转degrees角度&lt;/strong>
传入一个自定义的角度。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">- (UIImage *)imageRotatedByDegrees:(CGFloat)degrees;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>6.将图片旋转radians弧度&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">- (UIImage *)imageRotatedByRadians:(CGFloat)radians;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="生成图相关">生成图相关&lt;/h1>
&lt;p>&lt;strong>1.截取image对象rect区域内的图像&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">- (UIImage *)subImageWithRect:(CGRect)rect;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>2.压缩图片至指定尺寸&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">- (UIImage *)rescaleImageToSize:(CGSize)size;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>3.压缩图片至指定像素&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">- (UIImage *)rescaleImageToPX:(CGFloat )toPX;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>4.生成一个size大小的平铺图片&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">- (UIImage *)getTiledImageWithSize:(CGSize)size;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>5..UIView转化为UIImage&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">+ (UIImage *)imageFromView:(UIView *)view;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>6.将两个图片生成一张图片&lt;/strong>
firstImage在下面，secondImage在上面&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">+ (UIImage*)mergeImage:(UIImage*)firstImage withImage:(UIImage*)secondImage;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="gif相关">Gif相关&lt;/h1>
&lt;p>将一个Gif直接设置为UIImageView的image就可以显示动态图了。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">/** 用一个Gif生成UIImage，传入一个GIFData */
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+ (UIImage *)animatedImageWithAnimatedGIFData:(NSData *)theData;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/** 用一个Gif生成UIImage，传入一个GIF路径 */
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+ (UIImage *)animatedImageWithAnimatedGIFURL:(NSURL *)theURL;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>使用：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">NSString *path = [[NSBundle mainBundle] pathForResource:@&amp;#34;gif&amp;#34; ofType:@&amp;#34;gif&amp;#34;];
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">self.imageView.image = [UIImage animatedImageWithAnimatedGIFURL:[NSURL fileURLWithPath:path]];
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">//或者
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">self.imageView.image = [UIImage animatedImageWithAnimatedGIFData:[NSData dataWithContentsOfFile:path]];
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>希望能帮到大家，持续更新中。&lt;/p></description></item><item><title>Xcode方便开发的插件推荐</title><link>https://lisongrc.github.io/p/2016087d8ef64b/</link><pubDate>Fri, 26 Aug 2016 17:40:39 +0000</pubDate><guid>https://lisongrc.github.io/p/2016087d8ef64b/</guid><description>&lt;p>Xcode的插件可以使我们开发更方便，效率更高。你没有理由拒绝哈哈，下面推荐一些插件：&lt;/p>
&lt;p>&lt;strong>Alcatraz&lt;/strong>
&lt;a class="link" href="https://github.com/alcatraz/Alcatraz" target="_blank" rel="noopener"
>https://github.com/alcatraz/Alcatraz&lt;/a>
Alcatraz 是一个帮你管理 Xcode 插件、模版以及颜色配置的工具。它可以直接集成到 Xcode 的图形界面中，让你感觉就像在使用 Xcode 自带的功能一样。
使用方法推荐巧哥的这篇文章：
&lt;a class="link" href="http://blog.devtang.com/2014/03/05/use-alcatraz-to-manage-xcode-plugins/" target="_blank" rel="noopener"
>http://blog.devtang.com/2014/03/05/use-alcatraz-to-manage-xcode-plugins/&lt;/a>
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-b181647f65b1f930.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="image.png"
>
下面的这些插件都带有链接地址，安装方法可以使用Alcatraz，也可以在GitHub把工程下载下来，编译一遍，然后完全退出Xcode，重启Xcode，如果弹出选择菜单就选择Load Bundle.&lt;/p>
&lt;p>&lt;strong>KSImageNamed&lt;/strong>
一款方便填写图片文件名称的插件。支持NSImage和UIImage，当你写到[UIImage imaged:的时候，插件会把项目中的图片名称提示出来，并且还有预览功能，对经常用代码生成图片视图的童鞋十分方便。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-a27a59a339cd31bf.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="image.gif"
>&lt;/p>
&lt;p>&lt;strong>FuzzyAutocomplete&lt;/strong>
&lt;a class="link" href="https://github.com/FuzzyAutocomplete/FuzzyAutocompletePlugin" target="_blank" rel="noopener"
>https://github.com/FuzzyAutocomplete/FuzzyAutocompletePlugin&lt;/a>
强大的模糊匹配输入 让你写代码的时候再也不用费脑子去记住名字那么长的对象或者函数名了 好用到让你想哭，但是Xcode8出来后应该就不用了吧。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-972d83909db6b2a9.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="demo.gif"
>&lt;/p>
&lt;p>&lt;strong>FKConsole&lt;/strong>
&lt;a class="link" href="https://github.com/Forkong/FKConsole" target="_blank" rel="noopener"
>https://github.com/Forkong/FKConsole&lt;/a>
在控制台直接将UTF8编码转化为中文!
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-0cc04be495958e08.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="image.gif"
>&lt;/p>
&lt;p>&lt;strong>ESTranslate&lt;/strong>
&lt;a class="link" href="https://github.com/EnjoySR/ESTranslate-Xcode" target="_blank" rel="noopener"
>https://github.com/EnjoySR/ESTranslate-Xcode&lt;/a>
快速翻译Xcode中代码单词以及句子!
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-e004973a7b38c92a.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="image.gif"
>&lt;/p>
&lt;p>&lt;strong>VVDocumenter&lt;/strong>
&lt;a class="link" href="https://github.com/onevcat/VVDocumenter-Xcode" target="_blank" rel="noopener"
>https://github.com/onevcat/VVDocumenter-Xcode&lt;/a>
喵大的又一力作 能够识别当前函数的参数和返回类型 帮助你快速编写符合规范的注释(目前是以Javadoc为标准)
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-29db9ad72c6772c7.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="image.gif"
>&lt;/p>
&lt;p>&lt;strong>RSImageOptimPlugin&lt;/strong>
&lt;a class="link" href="https://github.com/yeahdongcn/RSImageOptimPlugin" target="_blank" rel="noopener"
>https://github.com/yeahdongcn/RSImageOptimPlugin&lt;/a>
可使用 ImageOptim 对项目里的图片资源进行优化，减少安装包的体积。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-a505d35ab369ded0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;p>&lt;strong>deriveddata&lt;/strong>
&lt;a class="link" href="https://github.com/kattrali/deriveddata-exterminator" target="_blank" rel="noopener"
>https://github.com/kattrali/deriveddata-exterminator&lt;/a>
如果你老是遇到Xcode抽风，显示一些编译的错误或警告，或者有些时候Xcode会出各种奇怪的问题，但是编译又能通过，清除Xcode缓存就可以解决这类问题。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-d94b08800c98278a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;p>&lt;strong>HOStringSense&lt;/strong>
&lt;a class="link" href="https://github.com/holtwick/HOStringSense-for-Xcode" target="_blank" rel="noopener"
>https://github.com/holtwick/HOStringSense-for-Xcode&lt;/a>
在编辑字符串的时候，它会在代码上方生成一个字数统计的提示框。当你需要编辑多行文本时，可以在弹出的文本框中编辑字符串内容，插件会自动进行字符转义的工作，并实时在代码中更新。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-6629ca861b3f719b.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="image.gif"
>&lt;/p>
&lt;p>&lt;strong>OMColorSense&lt;/strong>
&lt;a class="link" href="https://github.com/omz/ColorSense-for-Xcode" target="_blank" rel="noopener"
>https://github.com/omz/ColorSense-for-Xcode&lt;/a>
一个简洁的可视化颜色插件。在你编辑颜色的RGB值的时候，会在代码上方出现一个小的色块，显示对应的颜色。点击色块还会弹出一个颜色编辑器，在编辑器中得到的色值会自动填入colorWithRed:green:blue:alpha:方法中，贴心！
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-b4e9633761de122c.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="image.gif"
>&lt;/p>
&lt;p>&lt;strong>SCXcodeSwitchExpander&lt;/strong>
&lt;a class="link" href="https://github.com/stefanceriu/SCXcodeSwitchExpander" target="_blank" rel="noopener"
>https://github.com/stefanceriu/SCXcodeSwitchExpander&lt;/a>
Switch语句相当繁琐。虽然它清楚地列出了在每种情况下应该处理的方式，但一个个填入枚举值那真是浪费时间。SCXcodeSwitchExpander插件可以帮我们完成这个工作，它可以自动获得所有的枚举值填入相应的位置，而我们只需在每个枚举值下面填入对应的逻辑即可，方便极了！
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-e9e795f75b318cd9.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="image.gif"
>&lt;/p>
&lt;p>&lt;strong>XcodeBoost&lt;/strong>
&lt;a class="link" href="https://github.com/fortinmike/XcodeBoost" target="_blank" rel="noopener"
>https://github.com/fortinmike/XcodeBoost&lt;/a>
通过配置，我们可以使用光标或者不精确的选择就可以剪切或者拷贝代码行，可以在粘贴代码的时候不触发代码格式化，还可以通过在.m文件中拷贝方法，粘贴进.h文件的时候就可以得到自动格式成的方法声明，还有好些功能都可以实现。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-60120420aa9998af.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="image.gif"
>
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-2c26b115ceb88f65.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="image.gif"
>&lt;/p>
&lt;p>&lt;strong>Xcode-Quick-Localization&lt;/strong>
&lt;a class="link" href="https://github.com/tappollo/Xcode-Quick-Localization" target="_blank" rel="noopener"
>https://github.com/tappollo/Xcode-Quick-Localization&lt;/a>
你是否已经厌倦了反复写NSLocalizedString？如果是，那么QuickLocalization插件可以助你一臂之力。当你在编辑字符串的时候，只需要按下option+shift+d，就可以将@“Any String”转换成NSLocalizedString(@&amp;ldquo;Any String&amp;rdquo;, nil)。而且还可以通过修改配置来定义要出现在comment字段中的内容。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-235bcc4782960995.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="image.gif"
>&lt;/p>
&lt;p>&lt;strong>XAlign&lt;/strong>
&lt;a class="link" href="https://github.com/qfish/XAlign" target="_blank" rel="noopener"
>https://github.com/qfish/XAlign&lt;/a>
一个格式化代码的插件，作为有洁癖的码农 看到不对齐的代码一定是不能忍的 XAlign可以轻松解决你的烦恼。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-c526e15dd0f42998.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="image.gif"
>
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-ffea31ede7ac4b82.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="image.gif"
>&lt;/p>
&lt;p>&lt;strong>ClangFormat&lt;/strong>
&lt;a class="link" href="https://github.com/travisjeffery/ClangFormat-Xcode" target="_blank" rel="noopener"
>https://github.com/travisjeffery/ClangFormat-Xcode&lt;/a>
ClangFormat也是一款格式化代码的插件，开发者不仅可以实现对代码的自动或批量格式化，还可以进行自定义配置。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-19a2bac09a928cb0.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="image.gif"
>&lt;/p>
&lt;p>&lt;strong>CodePilot&lt;/strong>
&lt;a class="link" href="https://github.com/macoscope/CodePilot" target="_blank" rel="noopener"
>https://github.com/macoscope/CodePilot&lt;/a>
你要找的是文件？是文件夹？是代码？Never Mind，CMD+SHIFT+X调出CodePilot，输入任何你想到搜的东西吧！想搜appFinishLaunchingWithOptions？忘记咋拼了？没关系强大的代码搜索能力，appflaun一样也可以找到！超级强大的正则匹配，匹配任何你所想！
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-ad9f3ad42ecf1f8e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;p>&lt;strong>CocoaPods&lt;/strong>
&lt;a class="link" href="https://github.com/CocoaPods/CocoaPods" target="_blank" rel="noopener"
>https://github.com/CocoaPods/CocoaPods&lt;/a>
可以很方便的在Xcode通过pods安装各种第三方库。关于CocoaPods的使用请看&lt;a class="link" href="http://www.jianshu.com/p/1711e131987d" target="_blank" rel="noopener"
>这篇文章&lt;/a>。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-a453aa881c850f8a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="CocoaPods"
>&lt;/p>
&lt;p>&lt;strong>RTImageAssets&lt;/strong>
&lt;a class="link" href="https://github.com/rickytan/RTImageAssets" target="_blank" rel="noopener"
>https://github.com/rickytan/RTImageAssets&lt;/a>
用来生成 @3x 的图片资源对应的 @2x 和 @1x 版本，只要拖拽高清图到 @3x 的位置上，然后按 Ctrl+Shift+A
 即可自动生成两张低清的补全空位。当然，如果你对图片质量要求不高的话，你也可以从 @2x 的图生成 @3x 版本。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-7d1c3404d2d40d7f.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="image.gif"
>
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-b3ffc83ad76c95cb.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="image.gif"
>&lt;/p>
&lt;p>&lt;strong>JKBlockCommenter&lt;/strong>
&lt;a class="link" href="https://github.com/Johnykutty/JKBlockCommenter" target="_blank" rel="noopener"
>https://github.com/Johnykutty/JKBlockCommenter&lt;/a>
选中一段代码，按下⌘⌥/就可把这段代码包含在/**/之间，方便注释。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-9947012caf2643b7.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="image.gif"
>&lt;/p>
&lt;p>&lt;strong>Auto-Importer&lt;/strong>
&lt;a class="link" href="https://github.com/citrusbyte/Auto-Importer-for-Xcode" target="_blank" rel="noopener"
>https://github.com/citrusbyte/Auto-Importer-for-Xcode&lt;/a>
可以搜索和自动导入头文件的一款Xcode插件。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-3147e0b7f02b11f5.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="image.gif"
>&lt;/p>
&lt;p>&lt;strong>ZLGotoSandboxPlugin&lt;/strong>
&lt;a class="link" href="https://github.com/MakeZL/ZLGotoSandboxPlugin" target="_blank" rel="noopener"
>https://github.com/MakeZL/ZLGotoSandboxPlugin&lt;/a>
一个看应用沙盒的插件。也可以用SimPholders，看 &lt;a class="link" href="http://www.jianshu.com/p/b304515d225b" target="_blank" rel="noopener"
>这篇文章&lt;/a>
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-9626bf84f45a9cb4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="ZLGotoSandboxPlugin.png"
>&lt;/p>
&lt;p>&lt;strong>FKRealGroup&lt;/strong>
&lt;a class="link" href="https://github.com/Forkong/FKRealGroup" target="_blank" rel="noopener"
>https://github.com/Forkong/FKRealGroup&lt;/a>
FKRealGroup是文件夹创建删除增强插件，会在编辑菜单中添加”New Real Group”和”Delete Real Group”两个选项。
Xcode本身的”New Group”选项只会创建一个虚拟文件夹，并不会在本地磁盘创建真实文件夹。
FKRealGroup可以解决这个问题。”New Real Group”选项会在相应磁盘目录创建一个真实的文件夹。
我们在Xcode中如果使用”Delete”选项去删除文件夹，如果此文件夹为真实文件夹，那么一般情况下，Xcode只会删除此真实文件夹内的文件，而文件夹却依然存在。
”Delete Real Group”可以解决这个问题。”Delete Real Group”会默认删除真实文件夹，移动到废纸篓里面。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-72085141b75ebe9d.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="image.jpg"
>&lt;/p>
&lt;p>&lt;strong>ActivatePowerMode&lt;/strong>
&lt;a class="link" href="https://github.com/poboke/ActivatePowerMode" target="_blank" rel="noopener"
>https://github.com/poboke/ActivatePowerMode&lt;/a>
一个装逼插件，打字的时候有一些特效。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-2fcacbdb8f87c496.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="image.gif"
>&lt;/p>
&lt;p>持续更新中……。&lt;/p></description></item><item><title>iOS小技巧总结，绝对有你想要的</title><link>https://lisongrc.github.io/p/20160814f9ac89/</link><pubDate>Tue, 23 Aug 2016 17:37:54 +0000</pubDate><guid>https://lisongrc.github.io/p/20160814f9ac89/</guid><description>&lt;p>在这里总结一些iOS开发中的小技巧，能大大方便我们的开发，持续更新。&lt;/p>
&lt;h1 id="uitableview的group样式下顶部空白处理">UITableView的Group样式下顶部空白处理&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//分组列表头部空白处理
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">UIView&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">view&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[[&lt;/span>&lt;span class="n">UIView&lt;/span> &lt;span class="n">alloc&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="nl">initWithFrame&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">CGRectMake&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.1&lt;/span>&lt;span class="p">)];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">tableView&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">tableHeaderView&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">view&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="uitableview的plain样式下取消区头停滞效果">UITableView的plain样式下，取消区头停滞效果&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="p">-&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nf">scrollViewDidScroll:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">UIScrollView&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">scrollView&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">CGFloat&lt;/span> &lt;span class="n">sectionHeaderHeight&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">sectionHead&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">height&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">scrollView&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">contentOffset&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="o">&amp;lt;=&lt;/span>&lt;span class="n">sectionHeaderHeight&lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="n">scrollView&lt;/span>&lt;span class="p">;.&lt;/span>&lt;span class="n">contentOffset&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="o">&amp;gt;=&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">scrollView&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">contentInset&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UIEdgeInsetsMake&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">scrollView&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">contentOffset&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">scrollView&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">contentOffset&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="o">&amp;gt;=&lt;/span>&lt;span class="n">sectionHeaderHeight&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">scrollView&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">contentInset&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UIEdgeInsetsMake&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">sectionHeaderHeight&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>那个，其实，还是用Group样式吧哈哈。&lt;/p>
&lt;h1 id="获取某个view所在的控制器">获取某个view所在的控制器&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="o">-&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">UIViewController&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">viewController&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="n">UIViewController&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">viewController&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="nb">nil&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="err"> &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">UIResponder&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">next&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="nb">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">nextResponder&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="k">while&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">next&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="n">next&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="nl">isKindOfClass&lt;/span>&lt;span class="p">:[&lt;/span>&lt;span class="n">UIViewController&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="k">class&lt;/span>&lt;span class="p">]])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">viewController&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">UIViewController&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">next&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">next&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="n">next&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">nextResponder&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="err"> &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>&lt;span class="err"> &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="n">viewController&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="两种方法删除nsuserdefaults所有记录">两种方法删除NSUserDefaults所有记录&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//方法一
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">NSString&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">appDomain&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[[&lt;/span>&lt;span class="n">NSBundle&lt;/span> &lt;span class="n">mainBundle&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">bundleIdentifier&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">[[&lt;/span>&lt;span class="n">NSUserDefaults&lt;/span> &lt;span class="n">standardUserDefaults&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="nl">removePersistentDomainForName&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">appDomain&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//方法二
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">-&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nf">resetDefaults&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">NSUserDefaults&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">defs&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">NSUserDefaults&lt;/span> &lt;span class="n">standardUserDefaults&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">NSDictionary&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">dict&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">defs&lt;/span> &lt;span class="n">dictionaryRepresentation&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">id&lt;/span> &lt;span class="n">key&lt;/span> &lt;span class="k">in&lt;/span> &lt;span class="n">dict&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="n">defs&lt;/span> &lt;span class="nl">removeObjectForKey&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">key&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="n">defs&lt;/span> &lt;span class="n">synchronize&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="打印系统所有已注册的字体名称">打印系统所有已注册的字体名称&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#pragma mark - 打印系统所有已注册的字体名称
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="kt">void&lt;/span> &lt;span class="nf">enumerateFonts&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">   &lt;/span> &lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">NSString&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">familyName&lt;/span> &lt;span class="k">in&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">UIFont&lt;/span> &lt;span class="n">familyNames&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">  &lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">       &lt;/span> &lt;span class="n">NSLog&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">@&amp;#34;%@&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">familyName&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="err">              &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">NSArray&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">fontNames&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">UIFont&lt;/span> &lt;span class="nl">fontNamesForFamilyName&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">familyName&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="err">       &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">       &lt;/span> &lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">NSString&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">fontName&lt;/span> &lt;span class="k">in&lt;/span> &lt;span class="n">fontNames&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err">  &lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">           &lt;/span> &lt;span class="n">NSLog&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">@&amp;#34;&lt;/span>&lt;span class="se">\t&lt;/span>&lt;span class="s">|- %@&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">fontName&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err">  &lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">  &lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="取图片某一像素点的颜色--在uiimage的分类中">取图片某一像素点的颜色 在UIImage的分类中&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="p">-&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">UIColor&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nf">colorAtPixel:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">CGPoint&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">point&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">CGRectContainsPoint&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">CGRectMake&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">size&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">width&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">size&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">height&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">point&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="nb">nil&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">  &lt;/span> &lt;span class="err"> &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">CGColorSpaceRef&lt;/span> &lt;span class="n">colorSpace&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">CGColorSpaceCreateDeviceRGB&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">bytesPerPixel&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">bytesPerRow&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">bytesPerPixel&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">NSUInteger&lt;/span> &lt;span class="n">bitsPerComponent&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="kt">unsigned&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="n">pixelData&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">  &lt;/span> &lt;span class="err"> &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">CGContextRef&lt;/span> &lt;span class="n">context&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">CGBitmapContextCreate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pixelData&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">  &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">  &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">  &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">bitsPerComponent&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">  &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">bytesPerRow&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">  &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">colorSpace&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">  &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">kCGImageAlphaPremultipliedLast&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">kCGBitmapByteOrder32Big&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">CGColorSpaceRelease&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">colorSpace&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">CGContextSetBlendMode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">kCGBlendModeCopy&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">  &lt;/span> &lt;span class="err"> &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">CGContextTranslateCTM&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">point&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">point&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">y&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="nb">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">size&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">height&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">CGContextDrawImage&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">CGRectMake&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">size&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">width&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">size&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">height&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nb">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">CGImage&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">CGContextRelease&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">  &lt;/span> &lt;span class="err"> &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">CGFloat&lt;/span> &lt;span class="n">red&lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">CGFloat&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">pixelData&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="mf">255.0f&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">CGFloat&lt;/span> &lt;span class="n">green&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">CGFloat&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">pixelData&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="mf">255.0f&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">CGFloat&lt;/span> &lt;span class="n">blue&lt;/span>&lt;span class="err"> &lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">CGFloat&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">pixelData&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="mf">255.0f&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">CGFloat&lt;/span> &lt;span class="n">alpha&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">CGFloat&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">pixelData&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="mf">255.0f&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">  &lt;/span> &lt;span class="err"> &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">UIColor&lt;/span> &lt;span class="nl">colorWithRed&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">red&lt;/span> &lt;span class="nl">green&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">green&lt;/span> &lt;span class="nl">blue&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">blue&lt;/span> &lt;span class="nl">alpha&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">alpha&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="字符串反转">字符串反转&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="err">第一种：&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">-&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">NSString&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nl">reverseWordsInString&lt;/span>&lt;span class="p">:(&lt;/span>&lt;span class="n">NSString&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">str&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>&lt;span class="err">   &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">NSMutableString&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">newString&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[[&lt;/span>&lt;span class="n">NSMutableString&lt;/span> &lt;span class="n">alloc&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="nl">initWithCapacity&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">str&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">length&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">   &lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">NSInteger&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">str&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">length&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;gt;=&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">       &lt;/span> &lt;span class="kt">unichar&lt;/span> &lt;span class="n">ch&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">str&lt;/span> &lt;span class="nl">characterAtIndex&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="err">       &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="n">newString&lt;/span> &lt;span class="nl">appendFormat&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s">@&amp;#34;%c&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ch&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="err">   &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>&lt;span class="err">   &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">newString&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//第二种：
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="o">-&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">NSString&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nl">reverseWordsInString&lt;/span>&lt;span class="p">:(&lt;/span>&lt;span class="n">NSString&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">str&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>&lt;span class="err">   &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">NSMutableString&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">reverString&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">NSMutableString&lt;/span> &lt;span class="nl">stringWithCapacity&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">str&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">length&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="err">   &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="n">str&lt;/span> &lt;span class="nl">enumerateSubstringsInRange&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">NSMakeRange&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">str&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">length&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="nl">options&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">NSStringEnumerationReverse&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">NSStringEnumerationByComposedCharacterSequences&lt;/span>&lt;span class="err"> &lt;/span> &lt;span class="nl">usingBlock&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">NSString&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">substring&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">NSRange&lt;/span> &lt;span class="n">substringRange&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">NSRange&lt;/span> &lt;span class="n">enclosingRange&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">BOOL&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">stop&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="err"> &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">  &lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">reverString&lt;/span> &lt;span class="nl">appendString&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">substring&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="err">                        &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}];&lt;/span>&lt;span class="err">   &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">reverString&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="禁止锁屏">禁止锁屏，&lt;/h1>
&lt;p>默认情况下，当设备一段时间没有触控动作时，iOS会锁住屏幕。但有一些应用是不需要锁屏的，比如视频播放器。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>&lt;span class="n">UIApplication&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="n">sharedApplication&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">idleTimerDisabled&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="nb">YES&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">或&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">[[&lt;/span>&lt;span class="n">UIApplication&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="n">sharedApplication&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="nl">setIdleTimerDisabled&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nb">YES&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="模态推出透明界面">模态推出透明界面&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="n">UIViewController&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">vc&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[[&lt;/span>&lt;span class="n">UIViewController&lt;/span> &lt;span class="n">alloc&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">init&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">UINavigationController&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">na&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[[&lt;/span>&lt;span class="n">UINavigationController&lt;/span> &lt;span class="n">alloc&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="nl">initWithRootViewController&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">vc&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="p">([[[&lt;/span>&lt;span class="n">UIDevice&lt;/span> &lt;span class="n">currentDevice&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">systemVersion&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">floatValue&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">&amp;gt;=&lt;/span> &lt;span class="mf">8.0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">     &lt;/span>&lt;span class="n">na&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">modalPresentationStyle&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UIModalPresentationOverCurrentContext&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">else&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">     &lt;/span>&lt;span class="nb">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">modalPresentationStyle&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">UIModalPresentationCurrentContext&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>&lt;span class="nb">self&lt;/span> &lt;span class="nl">presentViewController&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">na&lt;/span> &lt;span class="nl">animated&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nb">YES&lt;/span> &lt;span class="nl">completion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nb">nil&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="xcode调试不显示内存占用">Xcode调试不显示内存占用&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">editSCheme  里面有个选项叫叫做enable zoombie Objects  取消选中
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="显示隐藏文件">显示隐藏文件&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">//显示
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">defaults write com.apple.finder AppleShowAllFiles -bool &lt;span class="nb">true&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">killall Finder
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">//隐藏
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">defaults write com.apple.finder AppleShowAllFiles -bool &lt;span class="nb">false&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">killall Finder
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="字符串按多个符号分割">字符串按多个符号分割&lt;/h1>
&lt;p>&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-59de354dc6972272.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;h1 id="ios跳转到app-store下载应用评分">iOS跳转到App Store下载应用评分&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="p">[[&lt;/span>&lt;span class="n">UIApplication&lt;/span> &lt;span class="n">sharedApplication&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="nl">openURL&lt;/span>&lt;span class="p">:[&lt;/span>&lt;span class="n">NSURL&lt;/span> &lt;span class="nl">URLWithString&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s">@&amp;#34;itms-apps://itunes.apple.com/WebObjects/MZStore.woa/wa/viewContentsUserReviews?type=Purple+Software&amp;amp;id=APPID&amp;#34;&lt;/span>&lt;span class="p">]];&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="ios-获取汉字的拼音">iOS 获取汉字的拼音&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="o">+&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">NSString&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nl">transform&lt;/span>&lt;span class="p">:(&lt;/span>&lt;span class="n">NSString&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">chinese&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//将NSString装换成NSMutableString 
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">NSMutableString&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">pinyin&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">chinese&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="n">mutableCopy&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//将汉字转换为拼音(带音标)   
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">CFStringTransform&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="k">__bridge&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="n">CFMutableStringRef&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">pinyin&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="nb">NULL&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="n">kCFStringTransformMandarinLatin&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="nb">NO&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">NSLog&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">@&amp;#34;%@&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="n">pinyin&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//去掉拼音的音标   
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">CFStringTransform&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="k">__bridge&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="n">CFMutableStringRef&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">pinyin&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="nb">NULL&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="n">kCFStringTransformStripCombiningMarks&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="nb">NO&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">NSLog&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">@&amp;#34;%@&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="n">pinyin&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//返回最近结果   
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">return&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="n">pinyin&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="手动更改ios状态栏的颜色">手动更改iOS状态栏的颜色&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="o">-&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nl">setStatusBarBackgroundColor&lt;/span>&lt;span class="p">:(&lt;/span>&lt;span class="n">UIColor&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">color&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">UIView&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">statusBar&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="p">[[[&lt;/span>&lt;span class="n">UIApplication&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="n">sharedApplication&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="nl">valueForKey&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s">@&amp;#34;statusBarWindow&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="nl">valueForKey&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s">@&amp;#34;statusBar&amp;#34;&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="n">statusBar&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="nl">respondsToSelector&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="k">@selector&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nl">setBackgroundColor&lt;/span>&lt;span class="p">:)])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">statusBar&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">backgroundColor&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="n">color&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="判断当前viewcontroller是push还是present的方式显示的">判断当前ViewController是push还是present的方式显示的&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="n">NSArray&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">viewcontrollers&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nb">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">navigationController&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">viewControllers&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">viewcontrollers&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">count&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="n">viewcontrollers&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="nl">objectAtIndex&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">viewcontrollers&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">count&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="nb">self&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="c1">//push方式
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err">  &lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="nb">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">navigationController&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="nl">popViewControllerAnimated&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nb">YES&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">else&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="c1">//present方式
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="nb">self&lt;/span> &lt;span class="nl">dismissViewControllerAnimated&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nb">YES&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="nl">completion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nb">nil&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="获取实际使用的launchimage图片">获取实际使用的LaunchImage图片&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="o">-&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">NSString&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">getLaunchImageName&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">CGSize&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="n">viewSize&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="nb">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">window&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">bounds&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">size&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="c1">// 竖屏   
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">NSString&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">viewOrientation&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="s">@&amp;#34;Portrait&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="err"> &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">  &lt;/span> &lt;span class="err"> &lt;/span>&lt;span class="n">NSString&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">launchImageName&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="nb">nil&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">NSArray&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="n">imagesDict&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="p">[[[&lt;/span>&lt;span class="n">NSBundle&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="n">mainBundle&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="n">infoDictionary&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="nl">valueForKey&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s">@&amp;#34;UILaunchImages&amp;#34;&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="k">for&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">NSDictionary&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="n">dict&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="k">in&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="n">imagesDict&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">CGSize&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="n">imageSize&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="n">CGSizeFromString&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dict&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s">@&amp;#34;UILaunchImageSize&amp;#34;&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">CGSizeEqualToSize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">imageSize&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="n">viewSize&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">viewOrientation&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="nl">isEqualToString&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">dict&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s">@&amp;#34;UILaunchImageOrientation&amp;#34;&lt;/span>&lt;span class="p">]])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">launchImageName&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="n">dict&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s">@&amp;#34;UILaunchImageName&amp;#34;&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="n">launchImageName&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="ios在当前屏幕获取第一响应">iOS在当前屏幕获取第一响应&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="n">UIWindow&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="n">keyWindow&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="p">[[&lt;/span>&lt;span class="n">UIApplication&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="n">sharedApplication&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="n">keyWindow&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">UIView&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="n">firstResponder&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">keyWindow&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="nl">performSelector&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="k">@selector&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">firstResponder&lt;/span>&lt;span class="p">)];&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="判断对象是否遵循了某协议">判断对象是否遵循了某协议&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="nb">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">selectedController&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="nl">conformsToProtocol&lt;/span>&lt;span class="p">:@&lt;/span>&lt;span class="n">protocol&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">RefreshPtotocol&lt;/span>&lt;span class="p">)])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="nb">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">selectedController&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="nl">performSelector&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="k">@selector&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">onTriggerRefresh&lt;/span>&lt;span class="p">)];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="判断view是不是指定视图的子视图">判断view是不是指定视图的子视图&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">BOOL&lt;/span> &lt;span class="n">isView&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">textView&lt;/span> &lt;span class="nl">isDescendantOfView&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nb">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">view&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="nsarray-快速求总和-最大值-最小值-和-平均值">NSArray 快速求总和 最大值 最小值 和 平均值&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="n">NSArray&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">NSArray&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="nl">arrayWithObjects&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s">@&amp;#34;2.0&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="s">@&amp;#34;2.3&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="s">@&amp;#34;3.0&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="s">@&amp;#34;4.0&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="s">@&amp;#34;10&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="nb">nil&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">CGFloat&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="n">sum&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="p">[[&lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="nl">valueForKeyPath&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s">@&amp;#34;@sum.floatValue&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="n">floatValue&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">CGFloat&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="n">avg&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="p">[[&lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="nl">valueForKeyPath&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s">@&amp;#34;@avg.floatValue&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="n">floatValue&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">CGFloat&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="n">max&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">[[&lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="nl">valueForKeyPath&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s">@&amp;#34;@max.floatValue&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="n">floatValue&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">CGFloat&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="n">min&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">[[&lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="nl">valueForKeyPath&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s">@&amp;#34;@min.floatValue&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="n">floatValue&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">NSLog&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">@&amp;#34;%f&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">%f&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">%f&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">%f&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">sum&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">avg&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">max&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">min&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="修改uitextfield中placeholder的文字颜色">修改UITextField中Placeholder的文字颜色&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>&lt;span class="n">textField&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="nl">setValue&lt;/span>&lt;span class="p">:[&lt;/span>&lt;span class="n">UIColor&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="n">redColor&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="nl">forKeyPath&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s">@&amp;#34;_placeholderLabel.textColor&amp;#34;&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="关于nsdateformatter的格式">关于NSDateFormatter的格式&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">G: 公元时代，例如AD公元
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">yy: 年的后2位
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">yyyy: 完整年
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">MM: 月，显示为1-12
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">MMM: 月，显示为英文月份简写,如 Jan
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">MMMM: 月，显示为英文月份全称，如 Janualy
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">dd: 日，2位数表示，如02
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">d: 日，1-2位显示，如 2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">EEE: 简写星期几，如Sun
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">EEEE: 全写星期几，如Sunday
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">aa: 上下午，AM/PM
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">H: 时，24小时制，0-23
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">K：时，12小时制，0-11
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">m: 分，1-2位
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mm: 分，2位
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">s: 秒，1-2位
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ss: 秒，2位
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">S: 毫秒
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="获取一个类的所有子类">获取一个类的所有子类&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="p">+&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">NSArray&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nf">allSubclasses&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">Class&lt;/span> &lt;span class="n">myClass&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="nb">self&lt;/span> &lt;span class="k">class&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">NSMutableArray&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">mySubclasses&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">NSMutableArray&lt;/span> &lt;span class="n">array&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">unsigned&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">numOfClasses&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">Class&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">classes&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">objc_copyClassList&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">numOfClasses&lt;/span>&lt;span class="p">;);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">unsigned&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">ci&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">ci&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">numOfClasses&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">ci&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">Class&lt;/span> &lt;span class="n">superClass&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">classes&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">ci&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">do&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">superClass&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">class_getSuperclass&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">superClass&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">while&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">superClass&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="n">superClass&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="n">myClass&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">superClass&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="n">mySubclasses&lt;/span> &lt;span class="nl">addObject&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">classes&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">ci&lt;/span>&lt;span class="p">]];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">free&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">classes&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">mySubclasses&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="监测ios设备是否设置了代理需要cfnetworkframework">监测IOS设备是否设置了代理，需要CFNetwork.framework &lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="n">NSDictionary&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">proxySettings&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="k">__bridge&lt;/span> &lt;span class="n">NSDictionary&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)(&lt;/span>&lt;span class="n">CFNetworkCopySystemProxySettings&lt;/span>&lt;span class="p">());&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">NSArray&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">proxies&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="k">__bridge&lt;/span> &lt;span class="n">NSArray&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)(&lt;/span>&lt;span class="n">CFNetworkCopyProxiesForURL&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="k">__bridge&lt;/span> &lt;span class="n">CFURLRef&lt;/span> &lt;span class="n">_Nonnull&lt;/span>&lt;span class="p">)([&lt;/span>&lt;span class="n">NSURL&lt;/span> &lt;span class="nl">URLWithString&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s">@&amp;#34;http://www.baidu.com&amp;#34;&lt;/span>&lt;span class="p">]),&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="k">__bridge&lt;/span> &lt;span class="n">CFDictionaryRef&lt;/span> &lt;span class="n">_Nonnull&lt;/span>&lt;span class="p">)(&lt;/span>&lt;span class="n">proxySettings&lt;/span>&lt;span class="p">)));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">NSLog&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">@&amp;#34;&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">%@&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">proxies&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">NSDictionary&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">settings&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">proxies&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">NSLog&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">@&amp;#34;%@&amp;#34;&lt;/span>&lt;span class="p">,[&lt;/span>&lt;span class="n">settings&lt;/span> &lt;span class="nl">objectForKey&lt;/span>&lt;span class="p">:(&lt;/span>&lt;span class="n">NSString&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">kCFProxyHostNameKey&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">NSLog&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">@&amp;#34;%@&amp;#34;&lt;/span>&lt;span class="p">,[&lt;/span>&lt;span class="n">settings&lt;/span> &lt;span class="nl">objectForKey&lt;/span>&lt;span class="p">:(&lt;/span>&lt;span class="n">NSString&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">kCFProxyPortNumberKey&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">NSLog&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">@&amp;#34;%@&amp;#34;&lt;/span>&lt;span class="p">,[&lt;/span>&lt;span class="n">settings&lt;/span> &lt;span class="nl">objectForKey&lt;/span>&lt;span class="p">:(&lt;/span>&lt;span class="n">NSString&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">kCFProxyTypeKey&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">   &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="p">([[&lt;/span>&lt;span class="n">settings&lt;/span> &lt;span class="nl">objectForKey&lt;/span>&lt;span class="p">:(&lt;/span>&lt;span class="n">NSString&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">kCFProxyTypeKey&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="nl">isEqualToString&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s">@&amp;#34;kCFProxyTypeNone&amp;#34;&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">     &lt;/span>&lt;span class="n">NSLog&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">@&amp;#34;没代理&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">else&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">     &lt;/span>&lt;span class="n">NSLog&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">@&amp;#34;设置了代理&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="阿拉伯数字转中文格式">阿拉伯数字转中文格式&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="p">+(&lt;/span>&lt;span class="n">NSString&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nf">translation:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">NSString&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">arebic&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">NSString&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">str&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">arebic&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">NSArray&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">arabic_numerals&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="l">@[&lt;/span>&lt;span class="s">@&amp;#34;1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">@&amp;#34;2&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">@&amp;#34;3&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">@&amp;#34;4&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">@&amp;#34;5&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">@&amp;#34;6&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">@&amp;#34;7&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">@&amp;#34;8&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">@&amp;#34;9&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">@&amp;#34;0&amp;#34;&lt;/span>&lt;span class="l">]&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">NSArray&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">chinese_numerals&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="l">@[&lt;/span>&lt;span class="s">@&amp;#34;一&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">@&amp;#34;二&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">@&amp;#34;三&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">@&amp;#34;四&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">@&amp;#34;五&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">@&amp;#34;六&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">@&amp;#34;七&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">@&amp;#34;八&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">@&amp;#34;九&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">@&amp;#34;零&amp;#34;&lt;/span>&lt;span class="l">]&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">NSArray&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">digits&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="l">@[&lt;/span>&lt;span class="s">@&amp;#34;个&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">@&amp;#34;十&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">@&amp;#34;百&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">@&amp;#34;千&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">@&amp;#34;万&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">@&amp;#34;十&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">@&amp;#34;百&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">@&amp;#34;千&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">@&amp;#34;亿&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">@&amp;#34;十&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">@&amp;#34;百&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">@&amp;#34;千&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">@&amp;#34;兆&amp;#34;&lt;/span>&lt;span class="l">]&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">NSDictionary&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">dictionary&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">NSDictionary&lt;/span> &lt;span class="nl">dictionaryWithObjects&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">chinese_numerals&lt;/span> &lt;span class="nl">forKeys&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">arabic_numerals&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">NSMutableArray&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">sums&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">NSMutableArray&lt;/span> &lt;span class="n">array&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">str&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">length&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">NSString&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">substr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">str&lt;/span> &lt;span class="nl">substringWithRange&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">NSMakeRange&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">NSString&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">dictionary&lt;/span> &lt;span class="nl">objectForKey&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">substr&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">NSString&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">b&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">digits&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">str&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">length&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">NSString&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">sum&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="nl">stringByAppendingString&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">([&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="nl">isEqualToString&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">chinese_numerals&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">9&lt;/span>&lt;span class="p">]])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="n">b&lt;/span> &lt;span class="nl">isEqualToString&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">digits&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">]]&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">b&lt;/span> &lt;span class="nl">isEqualToString&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">digits&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">]])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">sum&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">([[&lt;/span>&lt;span class="n">sums&lt;/span> &lt;span class="n">lastObject&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="nl">isEqualToString&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">chinese_numerals&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">9&lt;/span>&lt;span class="p">]])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="n">sums&lt;/span> &lt;span class="n">removeLastObject&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>&lt;span class="k">else&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">sum&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">chinese_numerals&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">9&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">([[&lt;/span>&lt;span class="n">sums&lt;/span> &lt;span class="n">lastObject&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="nl">isEqualToString&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">sum&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">continue&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="n">sums&lt;/span> &lt;span class="nl">addObject&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">sum&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">NSString&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">sumStr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">sums&lt;/span> &lt;span class="nl">componentsJoinedByString&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s">@&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">NSString&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">chinese&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">sumStr&lt;/span> &lt;span class="nl">substringToIndex&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">sumStr&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">length&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">NSLog&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">@&amp;#34;%@&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">str&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">NSLog&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">@&amp;#34;%@&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">chinese&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">chinese&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="base64编码与nsstring对象或nsdata对象的转换">Base64编码与NSString对象或NSData对象的转换&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Create NSData object
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">NSData&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">nsdata&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s">@&amp;#34;iOS Developer Tips encoded in Base64&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">  &lt;/span>&lt;span class="nl">dataUsingEncoding&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">NSUTF8StringEncoding&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Get NSString from NSData object in Base64
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">NSString&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">base64Encoded&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">nsdata&lt;/span> &lt;span class="nl">base64EncodedStringWithOptions&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Print the Base64 encoded string
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">NSLog&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">@&amp;#34;Encoded: %@&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">base64Encoded&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Let&amp;#39;s go the other way...
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="err"> &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// NSData from the Base64 encoded str
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">NSData&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">nsdataFromBase64String&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[[&lt;/span>&lt;span class="n">NSData&lt;/span> &lt;span class="n">alloc&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">  &lt;/span>&lt;span class="nl">initWithBase64EncodedString&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">base64Encoded&lt;/span> &lt;span class="nl">options&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Decoded NSString from the NSData
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">NSString&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">base64Decoded&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[[&lt;/span>&lt;span class="n">NSString&lt;/span> &lt;span class="n">alloc&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">  &lt;/span>&lt;span class="nl">initWithData&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">nsdataFromBase64String&lt;/span> &lt;span class="nl">encoding&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">NSUTF8StringEncoding&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">NSLog&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">@&amp;#34;Decoded: %@&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="n">base64Decoded&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="取消uicollectionview的隐式动画">取消UICollectionView的隐式动画&lt;/h1>
&lt;p>UICollectionView在reloadItems的时候，默认会附加一个隐式的fade动画，有时候很讨厌，尤其是当你的cell是复合cell的情况下(比如cell使用到了UIStackView)。
下面几种方法都可以帮你去除这些动画&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//方法一
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">UIView&lt;/span> &lt;span class="nl">performWithoutAnimation&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="n">collectionView&lt;/span> &lt;span class="nl">reloadItemsAtIndexPaths&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="l">@[&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">NSIndexPath&lt;/span> &lt;span class="nl">indexPathForItem&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">index&lt;/span> &lt;span class="nl">inSection&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="l">]&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//方法二
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">UIView&lt;/span> &lt;span class="nl">animateWithDuration&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">0&lt;/span> &lt;span class="nl">animations&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="n">collectionView&lt;/span> &lt;span class="nl">performBatchUpdates&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="n">collectionView&lt;/span> &lt;span class="nl">reloadItemsAtIndexPaths&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="l">@[&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">NSIndexPath&lt;/span> &lt;span class="nl">indexPathForItem&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">index&lt;/span> &lt;span class="nl">inSection&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="l">]&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="nl">completion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nb">nil&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//方法三
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">UIView&lt;/span> &lt;span class="nl">setAnimationsEnabled&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nb">NO&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>&lt;span class="nb">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">trackPanel&lt;/span> &lt;span class="nl">performBatchUpdates&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="n">collectionView&lt;/span> &lt;span class="nl">reloadItemsAtIndexPaths&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="l">@[&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">NSIndexPath&lt;/span> &lt;span class="nl">indexPathForItem&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">index&lt;/span> &lt;span class="nl">inSection&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="l">]&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span> &lt;span class="nl">completion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">BOOL&lt;/span> &lt;span class="n">finished&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="n">UIView&lt;/span> &lt;span class="nl">setAnimationsEnabled&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nb">YES&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}];&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="让xcode的控制台支持lldb类型的打印">让Xcode的控制台支持LLDB类型的打印&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">打开终端输入三条命令:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">touch ~/.lldbinit
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">echo display @import UIKit &amp;gt;&amp;gt; ~/.lldbinit
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">echo target stop-hook add -o &lt;span class="se">\&amp;#34;&lt;/span>target stop-hook disable&lt;span class="se">\&amp;#34;&lt;/span> &amp;gt;&amp;gt; ~/.lldbinit
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="cocoapods-pod-installpod-update更新慢的问题">CocoaPods pod install/pod update更新慢的问题&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">pod install --verbose --no-repo-update 
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pod update --verbose --no-repo-update
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">如果不加后面的参数，默认会升级CocoaPods的spec仓库，加一个参数可以省略这一步，然后速度就会提升不少
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="uiimage-占用内存大小">UIImage 占用内存大小&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="n">UIImage&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">image&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">UIImage&lt;/span> &lt;span class="nl">imageNamed&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s">@&amp;#34;aa&amp;#34;&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">NSUInteger&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="n">size&lt;/span> &lt;span class="err"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="n">CGImageGetHeight&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">image&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">CGImage&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="n">CGImageGetBytesPerRow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">image&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">CGImage&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="gcd-timer定时器">GCD timer定时器&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="n">dispatch_queue_t&lt;/span> &lt;span class="n">queue&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">dispatch_get_global_queue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">DISPATCH_QUEUE_PRIORITY_DEFAULT&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">dispatch_source_t&lt;/span> &lt;span class="n">timer&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">dispatch_source_create&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">DISPATCH_SOURCE_TYPE_TIMER&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">queue&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">dispatch_source_set_timer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">timer&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">dispatch_walltime&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">NULL&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="mf">1.0&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">NSEC_PER_SEC&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">//每秒执行
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">dispatch_source_set_event_handler&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">timer&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">^&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="c1">//@&amp;#34;倒计时结束，关闭&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">dispatch_source_cancel&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">timer&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="err"> &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">dispatch_async&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dispatch_get_main_queue&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="o">^&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">dispatch_resume&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">timer&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="图片上绘制文字-写一个uiimage的category">图片上绘制文字 写一个UIImage的category&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="p">-&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">UIImage&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nf">imageWithTitle:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">NSString&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">title&lt;/span> &lt;span class="nf">fontSize:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">CGFloat&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">fontSize&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="c1">//画布大小
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">CGSize&lt;/span> &lt;span class="n">size&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">CGSizeMake&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">size&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">width&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nb">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">size&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">height&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="c1">//创建一个基于位图的上下文
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">UIGraphicsBeginImageContextWithOptions&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">size&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nb">NO&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mf">0.0&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="c1">//opaque:NO  scale:0.0
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="err">  &lt;/span> &lt;span class="err"> &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="nb">self&lt;/span> &lt;span class="nl">drawAtPoint&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">CGPointMake&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">0.0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mf">0.0&lt;/span>&lt;span class="p">)];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">  &lt;/span> &lt;span class="err"> &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="c1">//文字居中显示在画布上
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">NSMutableParagraphStyle&lt;/span>&lt;span class="o">*&lt;/span> &lt;span class="n">paragraphStyle&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[[&lt;/span>&lt;span class="n">NSParagraphStyle&lt;/span> &lt;span class="n">defaultParagraphStyle&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">mutableCopy&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">paragraphStyle&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">lineBreakMode&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">NSLineBreakByCharWrapping&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">paragraphStyle&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">alignment&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">NSTextAlignmentCenter&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="c1">//文字居中
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="err">  &lt;/span> &lt;span class="err"> &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="c1">//计算文字所占的size,文字居中显示在画布上
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">CGSize&lt;/span> &lt;span class="n">sizeText&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">title&lt;/span> &lt;span class="nl">boundingRectWithSize&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nb">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">size&lt;/span> &lt;span class="nl">options&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">NSStringDrawingUsesLineFragmentOrigin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">  &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="nl">attributes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="l">@{&lt;/span>&lt;span class="nl">NSFontAttributeName&lt;/span>&lt;span class="p">:[&lt;/span>&lt;span class="n">UIFont&lt;/span> &lt;span class="nl">systemFontOfSize&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">fontSize&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="l">}&lt;/span>&lt;span class="nl">context&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nb">nil&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">size&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">CGFloat&lt;/span> &lt;span class="n">width&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">size&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">width&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">CGFloat&lt;/span> &lt;span class="n">height&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">size&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">height&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">  &lt;/span> &lt;span class="err"> &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">CGRect&lt;/span> &lt;span class="n">rect&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">CGRectMake&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">width&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">sizeText&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">width&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">height&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">sizeText&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">height&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">sizeText&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">width&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">sizeText&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">height&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="c1">//绘制文字
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">title&lt;/span> &lt;span class="nl">drawInRect&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">rect&lt;/span> &lt;span class="nl">withAttributes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="l">@{&lt;/span> &lt;span class="nl">NSFontAttributeName&lt;/span>&lt;span class="p">:[&lt;/span>&lt;span class="n">UIFont&lt;/span> &lt;span class="nl">systemFontOfSize&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">fontSize&lt;/span>&lt;span class="p">],&lt;/span>&lt;span class="nl">NSForegroundColorAttributeName&lt;/span>&lt;span class="p">:[&lt;/span> &lt;span class="n">UIColor&lt;/span> &lt;span class="n">whiteColor&lt;/span>&lt;span class="p">],&lt;/span>&lt;span class="nl">NSParagraphStyleAttributeName&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">paragraphStyle&lt;/span>&lt;span class="l">}&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">  &lt;/span> &lt;span class="err"> &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="c1">//返回绘制的新图形
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">UIImage&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">newImage&lt;/span>&lt;span class="o">=&lt;/span> &lt;span class="n">UIGraphicsGetImageFromCurrentImageContext&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">UIGraphicsEndImageContext&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="n">newImage&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="查找一个视图的所有子视图">查找一个视图的所有子视图&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="p">-&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">NSMutableArray&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nf">allSubViewsForView:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">UIView&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">view&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">NSMutableArray&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">array&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">NSMutableArray&lt;/span> &lt;span class="nl">arrayWithCapacity&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">UIView&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">subView&lt;/span> &lt;span class="k">in&lt;/span> &lt;span class="n">view&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">subviews&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">array&lt;/span> &lt;span class="nl">addObject&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">subView&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">subView&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">subviews&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">count&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">array&lt;/span> &lt;span class="nl">addObjectsFromArray&lt;/span>&lt;span class="p">:[&lt;/span>&lt;span class="nb">self&lt;/span> &lt;span class="nl">allSubViewsForView&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">subView&lt;/span>&lt;span class="p">]];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="n">array&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="计算文件大小">计算文件大小&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//文件大小
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">-&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">long&lt;/span> &lt;span class="kt">long&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nf">fileSizeAtPath:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">NSString&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">path&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">NSFileManager&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">fileManager&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">NSFileManager&lt;/span> &lt;span class="n">defaultManager&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">  &lt;/span> &lt;span class="err"> &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">([&lt;/span>&lt;span class="n">fileManager&lt;/span> &lt;span class="nl">fileExistsAtPath&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">path&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="kt">long&lt;/span> &lt;span class="kt">long&lt;/span> &lt;span class="n">size&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">fileManager&lt;/span> &lt;span class="nl">attributesOfItemAtPath&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">path&lt;/span> &lt;span class="nl">error&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nb">nil&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">fileSize&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="n">size&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">  &lt;/span> &lt;span class="err"> &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//文件夹大小
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">-&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">long&lt;/span> &lt;span class="kt">long&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nf">folderSizeAtPath:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">NSString&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">path&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">NSFileManager&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">fileManager&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">NSFileManager&lt;/span> &lt;span class="n">defaultManager&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">  &lt;/span> &lt;span class="err"> &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="kt">long&lt;/span> &lt;span class="kt">long&lt;/span> &lt;span class="n">folderSize&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">  &lt;/span> &lt;span class="err"> &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">([&lt;/span>&lt;span class="n">fileManager&lt;/span> &lt;span class="nl">fileExistsAtPath&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">path&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">NSArray&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">childerFiles&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">fileManager&lt;/span> &lt;span class="nl">subpathsAtPath&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">path&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">NSString&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">fileName&lt;/span> &lt;span class="k">in&lt;/span> &lt;span class="n">childerFiles&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">NSString&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">fileAbsolutePath&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">path&lt;/span> &lt;span class="nl">stringByAppendingPathComponent&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">fileName&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">([&lt;/span>&lt;span class="n">fileManager&lt;/span> &lt;span class="nl">fileExistsAtPath&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">fileAbsolutePath&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="kt">long&lt;/span> &lt;span class="kt">long&lt;/span> &lt;span class="n">size&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">fileManager&lt;/span> &lt;span class="nl">attributesOfItemAtPath&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">fileAbsolutePath&lt;/span> &lt;span class="nl">error&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nb">nil&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">fileSize&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">folderSize&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="n">size&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">  &lt;/span> &lt;span class="err"> &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="n">folderSize&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="uiview设置部分圆角">UIView设置部分圆角&lt;/h1>
&lt;p>你是不是也遇到过这样的问题，一个button或者label，只要右边的两个角圆角，或者只要一个圆角。该怎么办呢。这就需要图层蒙版来帮助我们了&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="n">CGRect&lt;/span> &lt;span class="n">rect&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">view&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">bounds&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">CGSize&lt;/span> &lt;span class="n">radio&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">CGSizeMake&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">30&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">30&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="c1">//圆角尺寸
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">UIRectCorner&lt;/span> &lt;span class="n">corner&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UIRectCornerTopLeft&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="n">UIRectCornerTopRight&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="c1">//这只圆角位置
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">UIBezierPath&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">path&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">UIBezierPath&lt;/span> &lt;span class="nl">bezierPathWithRoundedRect&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">rect&lt;/span> &lt;span class="nl">byRoundingCorners&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">corner&lt;/span> &lt;span class="nl">cornerRadii&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">radio&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">CAShapeLayer&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">masklayer&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[[&lt;/span>&lt;span class="n">CAShapeLayer&lt;/span> &lt;span class="n">alloc&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="n">init&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="c1">//创建shapelayer
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">masklayer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">frame&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">view&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">bounds&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">masklayer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">path&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">path&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">CGPath&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="c1">//设置路径
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">view&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">layer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">mask&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">masklayer&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="取上整与取下整">取上整与取下整&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="n">floor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="err">有时候也写做&lt;/span>&lt;span class="n">Floor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="err">，其功能是“下取整”，即取不大于&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="err">的最大整数&lt;/span> &lt;span class="err">例如：&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">x&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mf">3.14&lt;/span>&lt;span class="err">，&lt;/span>&lt;span class="n">floor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">3&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">y&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mf">9.99999&lt;/span>&lt;span class="err">，&lt;/span>&lt;span class="n">floor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">9&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">与&lt;/span>&lt;span class="n">floor&lt;/span>&lt;span class="err">函数对应的是&lt;/span>&lt;span class="n">ceil&lt;/span>&lt;span class="err">函数，即上取整函数。&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">ceil&lt;/span>&lt;span class="err">函数的作用是求不小于给定实数的最小整数。&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">ceil&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">ceil&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">1.2&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">cei&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">1.5&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mf">2.00&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">floor&lt;/span>&lt;span class="err">函数与&lt;/span>&lt;span class="n">ceil&lt;/span>&lt;span class="err">函数的返回值均为&lt;/span>&lt;span class="n">double&lt;/span>&lt;span class="err">型&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="计算字符串字符长度一个汉字算两个字符">计算字符串字符长度，一个汉字算两个字符&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//方法一：
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">-&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nf">convertToInt:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">NSString&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">strtemp&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">strlength&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="kt">char&lt;/span>&lt;span class="o">*&lt;/span> &lt;span class="n">p&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">char&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">)[&lt;/span>&lt;span class="n">strtemp&lt;/span> &lt;span class="nl">cStringUsingEncoding&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">NSUnicodeStringEncoding&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">0&lt;/span> &lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">strtemp&lt;/span> &lt;span class="nl">lengthOfBytesUsingEncoding&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">NSUnicodeStringEncoding&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">;&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">p&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">strlength&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="k">else&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">p&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">  &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="n">strlength&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//方法二：
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">-(&lt;/span>&lt;span class="n">NSUInteger&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nf">unicodeLengthOfString:&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">NSString&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nv">text&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">NSUInteger&lt;/span> &lt;span class="n">asciiLength&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">NSUInteger&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">text&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">length&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="kt">unichar&lt;/span> &lt;span class="n">uc&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">text&lt;/span> &lt;span class="nl">characterAtIndex&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">asciiLength&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="n">isascii&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">uc&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="n">asciiLength&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="给uiview设置图片">给UIView设置图片&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="n">UIImage&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">image&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">UIImage&lt;/span> &lt;span class="nl">imageNamed&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s">@&amp;#34;image&amp;#34;&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">MYView&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">layer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">contents&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="k">__bridge&lt;/span> &lt;span class="kt">id&lt;/span> &lt;span class="n">_Nullable&lt;/span>&lt;span class="p">)(&lt;/span>&lt;span class="n">image&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">CGImage&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">MYView&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">layer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">contentsRect&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">CGRectMake&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.5&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="防止scrollview手势覆盖侧滑手势">防止scrollView手势覆盖侧滑手势&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>&lt;span class="n">scrollView&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nl">panGestureRecognizerrequireGestureRecognizerToFail&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nb">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">navigationController&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">interactivePopGestureRecognizer&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="去掉导航栏返回的back标题">去掉导航栏返回的back标题&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="p">[[&lt;/span>&lt;span class="n">UIBarButtonItemappearance&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="nl">setBackButtonTitlePositionAdjustment&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">UIOffsetMake&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">60&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nl">forBarMetrics&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">UIBarMetricsDefault&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="字符串中是否含有中文">字符串中是否含有中文&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="p">+&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">BOOL&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nf">checkIsChinese:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">NSString&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">string&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">string&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">length&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="kt">unichar&lt;/span> &lt;span class="n">ch&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">string&lt;/span> &lt;span class="nl">characterAtIndex&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mh">0x4E00&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="n">ch&lt;/span>&lt;span class="err"> &lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="n">ch&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="mh">0x9FA5&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="nb">YES&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="nb">NO&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="dispatch_group的使用">dispatch_group的使用&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span>&lt;span class="n">dispatch_group_t&lt;/span> &lt;span class="n">dispatchGroup&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">dispatch_group_create&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">dispatch_group_enter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dispatchGroup&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">dispatch_after&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dispatch_time&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">DISPATCH_TIME_NOW&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">int64_t&lt;/span>&lt;span class="p">)(&lt;/span>&lt;span class="mi">1&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">NSEC_PER_SEC&lt;/span>&lt;span class="p">)),&lt;/span> &lt;span class="n">dispatch_get_main_queue&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="o">^&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">NSLog&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">@&amp;#34;第一个请求完成&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">dispatch_group_leave&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dispatchGroup&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">  &lt;/span> &lt;span class="err"> &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">dispatch_group_enter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dispatchGroup&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">  &lt;/span> &lt;span class="err"> &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">dispatch_after&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dispatch_time&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">DISPATCH_TIME_NOW&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">int64_t&lt;/span>&lt;span class="p">)(&lt;/span>&lt;span class="mi">10&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">NSEC_PER_SEC&lt;/span>&lt;span class="p">)),&lt;/span> &lt;span class="n">dispatch_get_main_queue&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="o">^&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">NSLog&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">@&amp;#34;第二个请求完成&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">dispatch_group_leave&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dispatchGroup&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">  &lt;/span> &lt;span class="err"> &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">dispatch_group_notify&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dispatchGroup&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">dispatch_get_main_queue&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="o">^&lt;/span>&lt;span class="p">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">NSLog&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">@&amp;#34;请求完成&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="uitextfield每四位加一个空格实现代理">UITextField每四位加一个空格,实现代理&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="p">-&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">BOOL&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nf">textField:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">UITextField&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">textField&lt;/span> &lt;span class="nf">shouldChangeCharactersInRange:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">NSRange&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">range&lt;/span> &lt;span class="nf">replacementString:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">NSString&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">string&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="c1">// 四位加一个空格
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">([&lt;/span>&lt;span class="n">string&lt;/span> &lt;span class="nl">isEqualToString&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s">@&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="c1">// 删除字符
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">((&lt;/span>&lt;span class="n">textField&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">text&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">length&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="mi">5&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">textField&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">text&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">textField&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">text&lt;/span> &lt;span class="nl">substringToIndex&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">textField&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">text&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">length&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="nb">YES&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="k">else&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">textField&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">text&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">length&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="mi">5&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">textField&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">text&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">NSString&lt;/span> &lt;span class="nl">stringWithFormat&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s">@&amp;#34;%@ &amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">textField&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">text&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="nb">YES&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="获取私有属性和成员变量-import-objcruntimeh">获取私有属性和成员变量 #import &amp;lt;objc/runtime.h&amp;gt;&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//获取私有属性 比如设置UIDatePicker的字体颜色
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">-&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nf">setTextColor&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="c1">//获取所有的属性，去查看有没有对应的属性
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="kt">unsigned&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">count&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">objc_property_t&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">propertys&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">class_copyPropertyList&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="n">UIDatePicker&lt;/span> &lt;span class="k">class&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">count&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">count&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="n">i&lt;/span> &lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="c1">//获得每一个属性
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">objc_property_t&lt;/span> &lt;span class="n">property&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">propertys&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="c1">//获得属性对应的nsstring
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">NSString&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">propertyName&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">NSString&lt;/span> &lt;span class="nl">stringWithCString&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">property_getName&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">property&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nl">encoding&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">NSUTF8StringEncoding&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="c1">//输出打印看对应的属性
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">NSLog&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">@&amp;#34;propertyname = %@&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">propertyName&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">([&lt;/span>&lt;span class="n">propertyName&lt;/span> &lt;span class="nl">isEqualToString&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s">@&amp;#34;textColor&amp;#34;&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">datePicker&lt;/span> &lt;span class="nl">setValue&lt;/span>&lt;span class="p">:[&lt;/span>&lt;span class="n">UIColor&lt;/span> &lt;span class="n">whiteColor&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="nl">forKey&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">propertyName&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//获得成员变量 比如修改UIAlertAction的按钮字体颜色
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="kt">unsigned&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">count&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">Ivar&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">ivars&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">class_copyIvarList&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="n">UIAlertAction&lt;/span> &lt;span class="k">class&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">count&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">count&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="n">i&lt;/span> &lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">Ivar&lt;/span> &lt;span class="n">ivar&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ivars&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">NSString&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">ivarName&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">NSString&lt;/span> &lt;span class="nl">stringWithCString&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">ivar_getName&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ivar&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nl">encoding&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">NSUTF8StringEncoding&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">NSLog&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">@&amp;#34;uialertion.ivarName = %@&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">ivarName&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">([&lt;/span>&lt;span class="n">ivarName&lt;/span> &lt;span class="nl">isEqualToString&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s">@&amp;#34;_titleTextColor&amp;#34;&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">alertOk&lt;/span> &lt;span class="nl">setValue&lt;/span>&lt;span class="p">:[&lt;/span>&lt;span class="n">UIColor&lt;/span> &lt;span class="n">blueColor&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="nl">forKey&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s">@&amp;#34;titleTextColor&amp;#34;&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">alertCancel&lt;/span> &lt;span class="nl">setValue&lt;/span>&lt;span class="p">:[&lt;/span>&lt;span class="n">UIColor&lt;/span> &lt;span class="n">purpleColor&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="nl">forKey&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s">@&amp;#34;titleTextColor&amp;#34;&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="获取手机安装的应用">获取手机安装的应用&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">Class&lt;/span> &lt;span class="n">c&lt;/span> &lt;span class="o">=&lt;/span>&lt;span class="n">NSClassFromString&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">@&amp;#34;LSApplicationWorkspace&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">id&lt;/span> &lt;span class="n">s&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[(&lt;/span>&lt;span class="kt">id&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">c&lt;/span> &lt;span class="nl">performSelector&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">NSSelectorFromString&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">@&amp;#34;defaultWorkspace&amp;#34;&lt;/span>&lt;span class="p">)];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">NSArray&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">array&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">s&lt;/span> &lt;span class="nl">performSelector&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">NSSelectorFromString&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">@&amp;#34;allInstalledApplications&amp;#34;&lt;/span>&lt;span class="p">)];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">id&lt;/span> &lt;span class="n">item&lt;/span> &lt;span class="k">in&lt;/span> &lt;span class="n">array&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">NSLog&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">@&amp;#34;%@&amp;#34;&lt;/span>&lt;span class="p">,[&lt;/span>&lt;span class="n">item&lt;/span> &lt;span class="nl">performSelector&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">NSSelectorFromString&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">@&amp;#34;applicationIdentifier&amp;#34;&lt;/span>&lt;span class="p">)]);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="c1">//NSLog(@&amp;#34;%@&amp;#34;,[item performSelector:NSSelectorFromString(@&amp;#34;bundleIdentifier&amp;#34;)]);
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">NSLog&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">@&amp;#34;%@&amp;#34;&lt;/span>&lt;span class="p">,[&lt;/span>&lt;span class="n">item&lt;/span> &lt;span class="nl">performSelector&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">NSSelectorFromString&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">@&amp;#34;bundleVersion&amp;#34;&lt;/span>&lt;span class="p">)]);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">NSLog&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">@&amp;#34;%@&amp;#34;&lt;/span>&lt;span class="p">,[&lt;/span>&lt;span class="n">item&lt;/span> &lt;span class="nl">performSelector&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">NSSelectorFromString&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">@&amp;#34;shortVersionString&amp;#34;&lt;/span>&lt;span class="p">)]);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="判断两个日期是否在同一周-写在nsdate的category里面">判断两个日期是否在同一周 写在NSDate的category里面&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="p">-&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">BOOL&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nf">isSameDateWithDate:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">NSDate&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">date&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="c1">//日期间隔大于七天之间返回NO
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">fabs&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="nb">self&lt;/span> &lt;span class="nl">timeIntervalSinceDate&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">date&lt;/span>&lt;span class="p">])&lt;/span> &lt;span class="o">&amp;gt;=&lt;/span> &lt;span class="mi">7&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mi">24&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="mi">3600&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="nb">NO&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">  &lt;/span> &lt;span class="err"> &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">NSCalendar&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">calender&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">NSCalendar&lt;/span> &lt;span class="n">currentCalendar&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">calender&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">firstWeekday&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="c1">//设置每周第一天从周一开始
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="c1">//计算两个日期分别为这年第几周
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">NSUInteger&lt;/span> &lt;span class="n">countSelf&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">calender&lt;/span> &lt;span class="nl">ordinalityOfUnit&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">NSCalendarUnitWeekday&lt;/span> &lt;span class="nl">inUnit&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">NSCalendarUnitYear&lt;/span> &lt;span class="nl">forDate&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nb">self&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">NSUInteger&lt;/span> &lt;span class="n">countDate&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">calender&lt;/span> &lt;span class="nl">ordinalityOfUnit&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">NSCalendarUnitWeekday&lt;/span> &lt;span class="nl">inUnit&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">NSCalendarUnitYear&lt;/span> &lt;span class="nl">forDate&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">date&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="c1">//相等就在同一周，不相等就不在同一周
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="n">countSelf&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">countDate&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="应用内打开系统设置界面">应用内打开系统设置界面&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//iOS8之后
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">[[&lt;/span>&lt;span class="n">UIApplication&lt;/span> &lt;span class="n">sharedApplication&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="nl">openURL&lt;/span>&lt;span class="p">:[&lt;/span>&lt;span class="n">NSURL&lt;/span> &lt;span class="nl">URLWithString&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">UIApplicationOpenSettingsURLString&lt;/span>&lt;span class="p">]];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//如果App没有添加权限，显示的是设定界面。如果App有添加权限（例如通知），显示的是App的设定界面。
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">//iOS8之前
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">//先添加一个url type如下图，在代码中调用如下代码,即可跳转到设置页面的对应项
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">[[UIApplication sharedApplication] openURL:[NSURL URLWithString:@&amp;#34;prefs:root=WIFI&amp;#34;]];
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">可选值如下：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">About — prefs:root=General&amp;amp;path=About
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Accessibility — prefs:root=General&amp;amp;path=ACCESSIBILITY
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Airplane Mode On — prefs:root=AIRPLANE_MODE
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Auto-Lock — prefs:root=General&amp;amp;path=AUTOLOCK
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Brightness — prefs:root=Brightness
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Bluetooth — prefs:root=General&amp;amp;path=Bluetooth
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Date &amp;amp; Time — prefs:root=General&amp;amp;path=DATE_AND_TIME
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">FaceTime — prefs:root=FACETIME
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">General — prefs:root=General
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Keyboard — prefs:root=General&amp;amp;path=Keyboard
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">iCloud — prefs:root=CASTLE
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">iCloud Storage &amp;amp; Backup — prefs:root=CASTLE&amp;amp;path=STORAGE_AND_BACKUP
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">International — prefs:root=General&amp;amp;path=INTERNATIONAL
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Location Services — prefs:root=LOCATION_SERVICES
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Music — prefs:root=MUSIC
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Music Equalizer — prefs:root=MUSIC&amp;amp;path=EQ
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Music Volume Limit — prefs:root=MUSIC&amp;amp;path=VolumeLimit
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Network — prefs:root=General&amp;amp;path=Network
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Nike + iPod — prefs:root=NIKE_PLUS_IPOD
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Notes — prefs:root=NOTES
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Notification — prefs:root=NOTIFICATI*****_ID
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Phone — prefs:root=Phone
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Photos — prefs:root=Photos
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Profile — prefs:root=General&amp;amp;path=ManagedConfigurationList
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Reset — prefs:root=General&amp;amp;path=Reset
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Safari — prefs:root=Safari
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Siri — prefs:root=General&amp;amp;path=Assistant
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Sounds — prefs:root=Sounds
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Software Update — prefs:root=General&amp;amp;path=SOFTWARE_UPDATE_LINK
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Store — prefs:root=STORE
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Twitter — prefs:root=TWITTER
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Usage — prefs:root=General&amp;amp;path=USAGE
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">VPN — prefs:root=General&amp;amp;path=Network/VPN
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Wallpaper — prefs:root=Wallpaper
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Wi-Fi — prefs:root=WIFI
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-0336b1d206210cf1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="Image.png"
>&lt;/p>
&lt;h1 id="屏蔽触发事件2秒后取消屏蔽">屏蔽触发事件，2秒后取消屏蔽&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="p">[[&lt;/span>&lt;span class="n">UIApplication&lt;/span> &lt;span class="n">sharedApplication&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">beginIgnoringInteractionEvents&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">dispatch_after&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dispatch_time&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">DISPATCH_TIME_NOW&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">int64_t&lt;/span>&lt;span class="p">)(&lt;/span>&lt;span class="mi">2&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">NSEC_PER_SEC&lt;/span>&lt;span class="p">)),&lt;/span> &lt;span class="n">dispatch_get_main_queue&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="o">^&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[[&lt;/span>&lt;span class="n">UIApplication&lt;/span> &lt;span class="n">sharedApplication&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">endIgnoringInteractionEvents&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="动画暂停再开始">动画暂停再开始&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="p">-(&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nf">pauseLayer:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">CALayer&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">layer&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">CFTimeInterval&lt;/span> &lt;span class="n">pausedTime&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">layer&lt;/span> &lt;span class="nl">convertTime&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">CACurrentMediaTime&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="nl">fromLayer&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nb">nil&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">layer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">speed&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mf">0.0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">layer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">timeOffset&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">pausedTime&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">-(&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nf">resumeLayer:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">CALayer&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">layer&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">CFTimeInterval&lt;/span> &lt;span class="n">pausedTime&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">layer&lt;/span> &lt;span class="n">timeOffset&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">layer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">speed&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mf">1.0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">layer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">timeOffset&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mf">0.0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">layer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">beginTime&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mf">0.0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">CFTimeInterval&lt;/span> &lt;span class="n">timeSincePause&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">layer&lt;/span> &lt;span class="nl">convertTime&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">CACurrentMediaTime&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="nl">fromLayer&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nb">nil&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">pausedTime&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">layer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">beginTime&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">timeSincePause&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="fillrule原理">fillRule原理&lt;/h1>
&lt;p>&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-102c8b228637e659.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="Image.png"
>&lt;/p>
&lt;h1 id="ios中数字的格式化">iOS中数字的格式化&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//通过NSNumberFormatter，同样可以设置NSNumber输出的格式。例如如下代码：
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">NSNumberFormatter&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">formatter&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[[&lt;/span>&lt;span class="n">NSNumberFormatter&lt;/span> &lt;span class="n">alloc&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">init&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">formatter&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">numberStyle&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">NSNumberFormatterDecimalStyle&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">NSString&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">string&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">formatter&lt;/span> &lt;span class="nl">stringFromNumber&lt;/span>&lt;span class="p">:[&lt;/span>&lt;span class="n">NSNumber&lt;/span> &lt;span class="nl">numberWithInt&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">123456789&lt;/span>&lt;span class="p">]];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">NSLog&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">@&amp;#34;Formatted number string:%@&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">string&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//输出结果为：[1223:403] Formatted number string:123,456,789
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//其中NSNumberFormatter类有个属性numberStyle，它是一个枚举型，设置不同的值可以输出不同的数字格式。该枚举包括：
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">typedef&lt;/span> &lt;span class="nf">NS_ENUM&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">NSUInteger&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">NSNumberFormatterStyle&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">NSNumberFormatterNoStyle&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">kCFNumberFormatterNoStyle&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">NSNumberFormatterDecimalStyle&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">kCFNumberFormatterDecimalStyle&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">NSNumberFormatterCurrencyStyle&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">kCFNumberFormatterCurrencyStyle&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">NSNumberFormatterPercentStyle&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">kCFNumberFormatterPercentStyle&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">NSNumberFormatterScientificStyle&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">kCFNumberFormatterScientificStyle&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">NSNumberFormatterSpellOutStyle&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">kCFNumberFormatterSpellOutStyle&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//各个枚举对应输出数字格式的效果如下：其中第三项和最后一项的输出会根据系统设置的语言区域的不同而不同。
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1243&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mi">403&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">Formatted&lt;/span> &lt;span class="n">number&lt;/span> &lt;span class="nl">string&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">123456789&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>&lt;span class="mi">1243&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mi">403&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">Formatted&lt;/span> &lt;span class="n">number&lt;/span> &lt;span class="nl">string&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">123&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">456&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">789&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>&lt;span class="mi">1243&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mi">403&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">Formatted&lt;/span> &lt;span class="n">number&lt;/span> &lt;span class="nl">string&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="err">￥&lt;/span>&lt;span class="mi">123&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">456&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mf">789.00&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>&lt;span class="mi">1243&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mi">403&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">Formatted&lt;/span> &lt;span class="n">number&lt;/span> &lt;span class="nl">string&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">539&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">222&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">988&lt;/span>&lt;span class="o">%&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>&lt;span class="mi">1243&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mi">403&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">Formatted&lt;/span> &lt;span class="n">number&lt;/span> &lt;span class="nl">string&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mf">1.23456789E8&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>&lt;span class="mi">1243&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mi">403&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">Formatted&lt;/span> &lt;span class="n">number&lt;/span> &lt;span class="nl">string&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="err">一亿二千三百四十五万六千七百八十九&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="如何获取webview所有的图片地址">如何获取WebView所有的图片地址，&lt;/h1>
&lt;p>在网页加载完成时，通过js获取图片和添加点击的识别方式&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//UIWebView
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">-&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nf">webViewDidFinishLoad:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">UIWebView&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">webView&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="c1">//这里是js，主要目的实现对url的获取
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="k">static&lt;/span>&lt;span class="err"> &lt;/span> &lt;span class="n">NSString&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="n">jsGetImages&lt;/span> &lt;span class="o">=&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="s">@&amp;#34;function getImages(){\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">    var objs = document.getElementsByTagName(&lt;/span>&lt;span class="se">\&amp;#34;&lt;/span>&lt;span class="s">img&lt;/span>&lt;span class="se">\&amp;#34;&lt;/span>&lt;span class="s">);\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">    var imgScr = &amp;#39;&amp;#39;;\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">    for(var i=0;i&amp;lt;objs.length;i++){\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">    imgScr = imgScr + objs[i].src + &amp;#39;+&amp;#39;;\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">    };\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">    return imgScr;\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">    };&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">  &lt;/span> &lt;span class="err"> &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">webView&lt;/span> &lt;span class="nl">stringByEvaluatingJavaScriptFromString&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">jsGetImages&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="c1">//注入js方法
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">NSString&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">urlResult&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">webView&lt;/span> &lt;span class="nl">stringByEvaluatingJavaScriptFromString&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s">@&amp;#34;getImages()&amp;#34;&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">NSArray&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">urlArray&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">NSMutableArray&lt;/span> &lt;span class="nl">arrayWithArray&lt;/span>&lt;span class="p">:[&lt;/span>&lt;span class="n">urlResult&lt;/span> &lt;span class="nl">componentsSeparatedByString&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s">@&amp;#34;+&amp;#34;&lt;/span>&lt;span class="p">]];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="c1">//urlResurlt 就是获取到得所有图片的url的拼接；mUrlArray就是所有Url的数组
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//WKWebView
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">-&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nf">webView:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">WKWebView&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">webView&lt;/span> &lt;span class="nf">didFinishNavigation:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">null_unspecified&lt;/span> &lt;span class="n">WKNavigation&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">navigation&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="k">static&lt;/span>&lt;span class="err"> &lt;/span> &lt;span class="n">NSString&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="n">jsGetImages&lt;/span> &lt;span class="o">=&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="s">@&amp;#34;function getImages(){\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">    var objs = document.getElementsByTagName(&lt;/span>&lt;span class="se">\&amp;#34;&lt;/span>&lt;span class="s">img&lt;/span>&lt;span class="se">\&amp;#34;&lt;/span>&lt;span class="s">);\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">    var imgScr = &amp;#39;&amp;#39;;\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">    for(var i=0;i&amp;lt;objs.length;i++){\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">    imgScr = imgScr + objs[i].src + &amp;#39;+&amp;#39;;\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">    };\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">    return imgScr;\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">    };&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">  &lt;/span> &lt;span class="err"> &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">webView&lt;/span> &lt;span class="nl">evaluateJavaScript&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">jsGetImages&lt;/span> &lt;span class="nl">completionHandler&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nb">nil&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">webView&lt;/span> &lt;span class="nl">evaluateJavaScript&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s">@&amp;#34;getImages()&amp;#34;&lt;/span> &lt;span class="nl">completionHandler&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">id&lt;/span> &lt;span class="n">_Nullable&lt;/span> &lt;span class="n">result&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">NSError&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">_Nullable&lt;/span> &lt;span class="n">error&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">NSLog&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">@&amp;#34;%@&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">}];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="获取到webview的高度">获取到webview的高度&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="n">CGFloat&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="n">height&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="p">[[&lt;/span>&lt;span class="nb">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">webView&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="nl">stringByEvaluatingJavaScriptFromString&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s">@&amp;#34;document.body.offsetHeight&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="err"> &lt;/span>&lt;span class="n">floatValue&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="navigationbar变为纯透明">navigationBar变为纯透明&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//第一种方法
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//导航栏纯透明
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nb">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">navigationBar&lt;/span> &lt;span class="nl">setBackgroundImage&lt;/span>&lt;span class="p">:[&lt;/span>&lt;span class="n">UIImage&lt;/span> &lt;span class="n">new&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="nl">forBarMetrics&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">UIBarMetricsDefault&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//去掉导航栏底部的黑线
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="nb">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">navigationBar&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">shadowImage&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">UIImage&lt;/span> &lt;span class="n">new&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//第二种方法
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">[[&lt;/span>&lt;span class="nb">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">navigationBar&lt;/span> &lt;span class="n">subviews&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="nl">objectAtIndex&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">alpha&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="tabbar同理">tabBar同理&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>&lt;span class="nb">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">tabBar&lt;/span> &lt;span class="nl">setBackgroundImage&lt;/span>&lt;span class="p">:[&lt;/span>&lt;span class="n">UIImage&lt;/span> &lt;span class="n">new&lt;/span>&lt;span class="p">]];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">tabBar&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">shadowImage&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">UIImage&lt;/span> &lt;span class="n">new&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="navigationbar根据滑动距离的渐变色实现">navigationBar根据滑动距离的渐变色实现&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//第一种
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">-&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nf">scrollViewDidScroll:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">UIScrollView&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">scrollView&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">CGFloat&lt;/span> &lt;span class="n">offsetToShow&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mf">200.0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="c1">//滑动多少就完全显示
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">CGFloat&lt;/span> &lt;span class="n">alpha&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">offsetToShow&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">scrollView&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">contentOffset&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="n">offsetToShow&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">[[&lt;/span>&lt;span class="nb">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">navigationController&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">navigationBar&lt;/span> &lt;span class="n">subviews&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="nl">objectAtIndex&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">alpha&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">alpha&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//第二种
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">-&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nf">scrollViewDidScroll:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">UIScrollView&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">scrollView&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">CGFloat&lt;/span> &lt;span class="n">offsetToShow&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mf">200.0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">CGFloat&lt;/span> &lt;span class="n">alpha&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">offsetToShow&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">scrollView&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">contentOffset&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="n">offsetToShow&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">  &lt;/span> &lt;span class="err"> &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="nb">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">navigationController&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">navigationBar&lt;/span> &lt;span class="nl">setShadowImage&lt;/span>&lt;span class="p">:[&lt;/span>&lt;span class="n">UIImage&lt;/span> &lt;span class="n">new&lt;/span>&lt;span class="p">]];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="nb">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">navigationController&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">navigationBar&lt;/span> &lt;span class="nl">setBackgroundImage&lt;/span>&lt;span class="p">:[&lt;/span>&lt;span class="nb">self&lt;/span> &lt;span class="nl">imageWithColor&lt;/span>&lt;span class="p">:[[&lt;/span>&lt;span class="n">UIColor&lt;/span> &lt;span class="n">orangeColor&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="nl">colorWithAlphaComponent&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">alpha&lt;/span>&lt;span class="p">]]&lt;/span> &lt;span class="nl">forBarMetrics&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">UIBarMetricsDefault&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//生成一张纯色的图片
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">-&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">UIImage&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nf">imageWithColor:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">UIColor&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">color&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">CGRect&lt;/span> &lt;span class="n">rect&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">CGRectMake&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1.0f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1.0f&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">UIGraphicsBeginImageContext&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rect&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">size&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">CGContextRef&lt;/span> &lt;span class="n">context&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UIGraphicsGetCurrentContext&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">CGContextSetFillColorWithColor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">color&lt;/span> &lt;span class="n">CGColor&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">CGContextFillRect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">rect&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">UIImage&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">theImage&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UIGraphicsGetImageFromCurrentImageContext&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">UIGraphicsEndImageContext&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">  &lt;/span> &lt;span class="err"> &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="n">theImage&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="ios-开发中一些相关的路径">iOS 开发中一些相关的路径&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">模拟器的位置:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs 
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">文档安装位置:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/Applications/Xcode.app/Contents/Developer/Documentation/DocSets
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">插件保存路径:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">~/Library/ApplicationSupport/Developer/Shared/Xcode/Plug-ins
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">自定义代码段的保存路径:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">~/Library/Developer/Xcode/UserData/CodeSnippets/ 
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">如果找不到CodeSnippets文件夹，可以自己新建一个CodeSnippets文件夹。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">描述文件路径
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">~/Library/MobileDevice/Provisioning Profiles
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="navigationitem的barbuttonitem如何紧靠屏幕右边界或者左边界">navigationItem的BarButtonItem如何紧靠屏幕右边界或者左边界？&lt;/h1>
&lt;p>一般情况下，右边的item会和屏幕右侧保持一段距离：
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-2b25556ad97436ad.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="image.png"
>
下面是通过添加一个负值宽度的固定间距的item来解决，也可以改变宽度实现不同的间隔：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="n">UIImage&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">img&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[[&lt;/span>&lt;span class="n">UIImage&lt;/span> &lt;span class="nl">imageNamed&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s">@&amp;#34;icon_cog&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="nl">imageWithRenderingMode&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">UIImageRenderingModeAlwaysOriginal&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//宽度为负数的固定间距的系统item
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">UIBarButtonItem&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">rightNegativeSpacer&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[[&lt;/span>&lt;span class="n">UIBarButtonItem&lt;/span> &lt;span class="n">alloc&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="nl">initWithBarButtonSystemItem&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">UIBarButtonSystemItemFixedSpace&lt;/span> &lt;span class="nl">target&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nb">nil&lt;/span> &lt;span class="nl">action&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nb">nil&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>&lt;span class="n">rightNegativeSpacer&lt;/span> &lt;span class="nl">setWidth&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">15&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">UIBarButtonItem&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">rightBtnItem1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[[&lt;/span>&lt;span class="n">UIBarButtonItem&lt;/span> &lt;span class="n">alloc&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="nl">initWithImage&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">img&lt;/span> &lt;span class="nl">style&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">UIBarButtonItemStylePlain&lt;/span> &lt;span class="nl">target&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nb">self&lt;/span> &lt;span class="nl">action&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="k">@selector&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nl">rightButtonItemClicked&lt;/span>&lt;span class="p">:)];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">UIBarButtonItem&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">rightBtnItem2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[[&lt;/span>&lt;span class="n">UIBarButtonItem&lt;/span> &lt;span class="n">alloc&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="nl">initWithImage&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">img&lt;/span> &lt;span class="nl">style&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">UIBarButtonItemStylePlain&lt;/span> &lt;span class="nl">target&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nb">self&lt;/span> &lt;span class="nl">action&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="k">@selector&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nl">rightButtonItemClicked&lt;/span>&lt;span class="p">:)];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">navigationItem&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rightBarButtonItems&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="l">@[&lt;/span>&lt;span class="n">rightNegativeSpacer&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">rightBtnItem1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">rightBtnItem2&lt;/span>&lt;span class="l">]&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-649770861a945c45.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;h1 id="nsstring进行url编码和解码">NSString进行URL编码和解码&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="n">NSString&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">string&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">@&amp;#34;http://abc.com?aaa=你好&amp;amp;bbb=tttee&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//编码 打印：http://abc.com?aaa=%E4%BD%A0%E5%A5%BD&amp;amp;bbb=tttee
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">string&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">string&lt;/span> &lt;span class="nl">stringByAddingPercentEncodingWithAllowedCharacters&lt;/span>&lt;span class="p">:[&lt;/span>&lt;span class="n">NSCharacterSet&lt;/span> &lt;span class="n">URLQueryAllowedCharacterSet&lt;/span>&lt;span class="p">]];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//解码 打印：http://abc.com?aaa=你好&amp;amp;bbb=tttee
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">string&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">string&lt;/span> &lt;span class="n">stringByRemovingPercentEncoding&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="uiwebview设置user-agent">UIWebView设置User-Agent。&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//设置
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">NSDictionary&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">dic&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="l">@{&lt;/span>&lt;span class="s">@&amp;#34;UserAgent&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="s">@&amp;#34;your UserAgent&amp;#34;&lt;/span>&lt;span class="l">}&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">[[&lt;/span>&lt;span class="n">NSUserDefaults&lt;/span> &lt;span class="n">standardUserDefaults&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="nl">registerDefaults&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">dic&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//获取
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">NSString&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">agent&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="nb">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">WebView&lt;/span> &lt;span class="nl">stringByEvaluatingJavaScriptFromString&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s">@&amp;#34;navigator.userAgent&amp;#34;&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="获取硬盘总容量与可用容量">获取硬盘总容量与可用容量:&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="n">NSFileManager&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">fileManager&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">NSFileManager&lt;/span> &lt;span class="n">defaultManager&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">NSDictionary&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">attributes&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">fileManager&lt;/span> &lt;span class="nl">attributesOfFileSystemForPath&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">NSHomeDirectory&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="nl">error&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nb">nil&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">NSLog&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">@&amp;#34;容量%.2fG&amp;#34;&lt;/span>&lt;span class="p">,[&lt;/span>&lt;span class="n">attributes&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">NSFileSystemSize&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">doubleValue&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">powf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1024&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">)));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">NSLog&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">@&amp;#34;可用%.2fG&amp;#34;&lt;/span>&lt;span class="p">,[&lt;/span>&lt;span class="n">attributes&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">NSFileSystemFreeSize&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">doubleValue&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="n">powf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1024&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="获取uicolor的rgba值">获取UIColor的RGBA值&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="n">UIColor&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">color&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">UIColor&lt;/span> &lt;span class="nl">colorWithRed&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mf">0.2&lt;/span> &lt;span class="nl">green&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mf">0.3&lt;/span> &lt;span class="nl">blue&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mf">0.9&lt;/span> &lt;span class="nl">alpha&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mf">1.0&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">const&lt;/span> &lt;span class="n">CGFloat&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">components&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">CGColorGetComponents&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">color&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">CGColor&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">NSLog&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">@&amp;#34;Red: %.1f&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">components&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">NSLog&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">@&amp;#34;Green: %.1f&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">components&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">NSLog&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">@&amp;#34;Blue: %.1f&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">components&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">NSLog&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">@&amp;#34;Alpha: %.1f&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">components&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="修改textfield的placeholder的字体颜色大小">修改textField的placeholder的字体颜色、大小&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>&lt;span class="nb">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">textField&lt;/span> &lt;span class="nl">setValue&lt;/span>&lt;span class="p">:[&lt;/span>&lt;span class="n">UIColor&lt;/span> &lt;span class="n">redColor&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="nl">forKeyPath&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s">@&amp;#34;_placeholderLabel.textColor&amp;#34;&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>&lt;span class="nb">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">textField&lt;/span> &lt;span class="nl">setValue&lt;/span>&lt;span class="p">:[&lt;/span>&lt;span class="n">UIFont&lt;/span> &lt;span class="nl">boldSystemFontOfSize&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">16&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="nl">forKeyPath&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s">@&amp;#34;_placeholderLabel.font&amp;#34;&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="afn移除json中的nsnull">AFN移除JSON中的NSNull&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="n">AFJSONResponseSerializer&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">response&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">AFJSONResponseSerializer&lt;/span> &lt;span class="n">serializer&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">response&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">removesKeysWithNullValues&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">YES&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="ceil和floor">ceil()和floor()&lt;/h1>
&lt;p>&lt;code>ceil()&lt;/code>功 能：返回大于或者等于指定表达式的最小整数
&lt;code>floor()&lt;/code>功 能：返回小于或者等于指定表达式的最大整数&lt;/p>
&lt;h1 id="uiwebview里面的图片自适应屏幕">UIWebView里面的图片自适应屏幕&lt;/h1>
&lt;p>在webView加载完的代理方法里面这样写：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="p">-&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nf">webViewDidFinishLoad:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">UIWebView&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">webView&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">NSString&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">js&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">@&amp;#34;function imgAutoFit() { \
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">    var imgs = document.getElementsByTagName(&amp;#39;img&amp;#39;); \
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">    for (var i = 0; i &amp;lt; imgs.length; ++i) { \
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">    var img = imgs[i]; \
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">    img.style.maxWidth = %f; \
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">    } \
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">    }&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">  &lt;/span> &lt;span class="err"> &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="n">js&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">NSString&lt;/span> &lt;span class="nl">stringWithFormat&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">js&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">UIScreen&lt;/span> &lt;span class="n">mainScreen&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="n">bounds&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">size&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">width&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">20&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">  &lt;/span> &lt;span class="err"> &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">webView&lt;/span> &lt;span class="nl">stringByEvaluatingJavaScriptFromString&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">js&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span> &lt;span class="err"> &lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">webView&lt;/span> &lt;span class="nl">stringByEvaluatingJavaScriptFromString&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s">@&amp;#34;imgAutoFit()&amp;#34;&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="uilabel显示html">UILabel显示Html&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl"> &lt;span class="n">NSString&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">htmlString&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">@&amp;#34;Some html string&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">NSAttributedString&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">attrStr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[[&lt;/span>&lt;span class="n">NSAttributedString&lt;/span> &lt;span class="n">alloc&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="nl">initWithData&lt;/span>&lt;span class="p">:[&lt;/span>&lt;span class="n">htmlString&lt;/span> &lt;span class="nl">dataUsingEncoding&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">NSUnicodeStringEncoding&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="nl">options&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="l">@{&lt;/span>&lt;span class="nl">NSDocumentTypeDocumentAttribute&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">NSHTMLTextDocumentType&lt;/span>&lt;span class="l">}&lt;/span> &lt;span class="nl">documentAttributes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nb">nil&lt;/span> &lt;span class="nl">error&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nb">nil&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">UILabel&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">label&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[[&lt;/span>&lt;span class="n">UILabel&lt;/span> &lt;span class="n">alloc&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="nl">initWithFrame&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nb">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">view&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">bounds&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">label&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">attributedText&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">attrStr&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="nb">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">view&lt;/span> &lt;span class="nl">addSubview&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">label&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="模拟器语言切换">模拟器语言切换&lt;/h1>
&lt;p>xode&amp;mdash;&amp;gt;Product&amp;mdash;&amp;gt;Scheme&amp;mdash;&amp;gt;Edit Scheme&amp;mdash;&amp;gt;Run&amp;mdash;&amp;gt;Application Language&amp;amp;Region
在这里选择所需要的语言，这样再运行的时候，模拟器语言就变成了所选的。
&lt;img src="https://upload-images.jianshu.io/upload_images/1608265-691609ca39a4e069.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;h1 id="汉字转拼音">汉字转拼音&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="n">NSString&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">chineseText&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">@&amp;#34;啦啦啦德玛西亚&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">chineseText&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">length&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">NSMutableString&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">ms&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[[&lt;/span>&lt;span class="n">NSMutableString&lt;/span> &lt;span class="n">alloc&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="nl">initWithString&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">chineseText&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//带声标
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">CFStringTransform&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="k">__bridge&lt;/span> &lt;span class="n">CFMutableStringRef&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">ms&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">kCFStringTransformMandarinLatin&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">NO&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">NSLog&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">@&amp;#34;pinyin: %@&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ms&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//不带声标
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">CFStringTransform&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="k">__bridge&lt;/span> &lt;span class="n">CFMutableStringRef&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">ms&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">kCFStringTransformStripDiacritics&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">NO&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">NSLog&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">@&amp;#34;pinyin: %@&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ms&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">NSString&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">NSString&lt;/span> &lt;span class="nl">stringWithString&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">ms&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">NSLog&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">@&amp;#34;%@&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="使用uiinterpolatingmotioneffect可以使页面随着设备在空间的移动而发生微移具体的效果可以查看ios7系统的解锁界面">使用UIInterpolatingMotionEffect可以使页面随着设备在空间的移动而发生微移。具体的效果可以查看IOS7系统的解锁界面&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="n">UIInterpolatingMotionEffect&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">interpolationHorizontal&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[[&lt;/span>&lt;span class="n">UIInterpolatingMotionEffect&lt;/span> &lt;span class="n">alloc&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="nl">initWithKeyPath&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s">@&amp;#34;center.x&amp;#34;&lt;/span> &lt;span class="nl">type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">UIInterpolatingMotionEffectTypeTiltAlongHorizontalAxis&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">interpolationHorizontal&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">minimumRelativeValue&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="l">@(&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">20&lt;/span>&lt;span class="l">)&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">interpolationHorizontal&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">maximumRelativeValue&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="l">@(&lt;/span>&lt;span class="mi">20&lt;/span>&lt;span class="l">)&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">UIInterpolatingMotionEffect&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">interpolationVertical&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[[&lt;/span>&lt;span class="n">UIInterpolatingMotionEffect&lt;/span> &lt;span class="n">alloc&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="nl">initWithKeyPath&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s">@&amp;#34;center.y&amp;#34;&lt;/span> &lt;span class="nl">type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">UIInterpolatingMotionEffectTypeTiltAlongVerticalAxis&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">interpolationVertical&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">minimumRelativeValue&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="l">@(&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">20&lt;/span>&lt;span class="l">)&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">interpolationVertical&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">maximumRelativeValue&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="l">@(&lt;/span>&lt;span class="mi">20&lt;/span>&lt;span class="l">)&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>&lt;span class="nb">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">view&lt;/span> &lt;span class="nl">addMotionEffect&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">interpolationHorizontal&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>&lt;span class="nb">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">view&lt;/span> &lt;span class="nl">addMotionEffect&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">interpolationVertical&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="ns_requires_super">NS_REQUIRES_SUPER&lt;/h1>
&lt;p>要求子类重写父类的方法必须先调用super，子类重写这个方法就会自动警告提示要调用这个super方法。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="p">-&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nf">prepare&lt;/span> &lt;span class="n">NS_REQUIRES_SUPER&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="webview长按保存图片">WebView长按保存图片&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="err">加一个长按手势，在响应里：&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">NSString&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">imgURL&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">NSString&lt;/span> &lt;span class="nl">stringWithFormat&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s">@&amp;#34;document.elementFromPoint(%f, %f).src&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">touchPoint&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">touchPoint&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">NSString&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">urlToSave&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="nb">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">webView&lt;/span> &lt;span class="nl">stringByEvaluatingJavaScriptFromString&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">imgURL&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="文字转语音播放">文字转语音播放&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#import &amp;lt;AVFoundation/AVFoundation.h&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="k">@property&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="k">nonatomic&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">strong&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">AVSpeechSynthesizer&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">av&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//开始或暂停
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">-&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nf">start:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">UIButton&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">sender&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">sender&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">selected&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nb">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">av&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">isPaused&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="nb">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">av&lt;/span> &lt;span class="n">continueSpeaking&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">sender&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">selected&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">!&lt;/span>&lt;span class="n">sender&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">selected&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">AVSpeechUtterance&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">utterance&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[[&lt;/span>&lt;span class="n">AVSpeechUtterance&lt;/span> &lt;span class="n">alloc&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="nl">initWithString&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s">@&amp;#34;大渣好 我系渣渣辉&amp;#34;&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">utterance&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rate&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mf">0.5&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="c1">// 设置语速，范围0-1，注意0最慢，1最快；AVSpeechUtteranceMinimumSpeechRate最慢，AVSpeechUtteranceMaximumSpeechRate最快
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">utterance&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">voice&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">AVSpeechSynthesisVoice&lt;/span> &lt;span class="nl">voiceWithLanguage&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s">@&amp;#34;en-GB&amp;#34;&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="c1">//设置发音，这是中文普通话;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">av&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[[&lt;/span>&lt;span class="n">AVSpeechSynthesizer&lt;/span> &lt;span class="n">alloc&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">init&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">av&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">delegate&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">self&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="nb">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">av&lt;/span> &lt;span class="nl">speakUtterance&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">utterance&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">sender&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">selected&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">!&lt;/span>&lt;span class="n">sender&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">selected&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//[av stopSpeakingAtBoundary:AVSpeechBoundaryWord];//感觉效果一样，对应代理&amp;gt;&amp;gt;&amp;gt;取消
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="nb">self&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">av&lt;/span> &lt;span class="nl">pauseSpeakingAtBoundary&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">AVSpeechBoundaryWord&lt;/span>&lt;span class="p">];&lt;/span>&lt;span class="c1">//暂停
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">sender&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">selected&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">!&lt;/span>&lt;span class="n">sender&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">selected&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">@protocol&lt;/span> &lt;span class="nc">AVSpeechSynthesizerDelegate&lt;/span> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">NSObject&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">@optional&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">-&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nl">speechSynthesizer&lt;/span>&lt;span class="p">:(&lt;/span>&lt;span class="n">AVSpeechSynthesizer&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">synthesizer&lt;/span> &lt;span class="nl">didStartSpeechUtterance&lt;/span>&lt;span class="p">:(&lt;/span>&lt;span class="n">AVSpeechUtterance&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">utterance&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">-&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nf">speechSynthesizer:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">AVSpeechSynthesizer&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">synthesizer&lt;/span> &lt;span class="nf">didFinishSpeechUtterance:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">AVSpeechUtterance&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">utterance&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">-&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nf">speechSynthesizer:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">AVSpeechSynthesizer&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">synthesizer&lt;/span> &lt;span class="nf">didPauseSpeechUtterance:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">AVSpeechUtterance&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">utterance&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">-&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nf">speechSynthesizer:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">AVSpeechSynthesizer&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">synthesizer&lt;/span> &lt;span class="nf">didContinueSpeechUtterance:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">AVSpeechUtterance&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">utterance&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">-&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nf">speechSynthesizer:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">AVSpeechSynthesizer&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">synthesizer&lt;/span> &lt;span class="nf">didCancelSpeechUtterance:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">AVSpeechUtterance&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">utterance&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">-&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nf">speechSynthesizer:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">AVSpeechSynthesizer&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">synthesizer&lt;/span> &lt;span class="nf">willSpeakRangeOfSpeechString:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">NSRange&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">characterRange&lt;/span> &lt;span class="nf">utterance:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">AVSpeechUtterance&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">utterance&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">@end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="在dock上添加空白区格">在Dock上添加空白区格&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">终端运行两条命令：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">defaults write com.apple.dock persistent-apps -array-add &lt;span class="s1">&amp;#39;{&amp;#34;tile-type&amp;#34;=&amp;#34;spacer-tile&amp;#34;;}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">killall Dock
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="改变截屏文件的类型">改变截屏文件的类型&lt;/h1>
&lt;p>默认的，MacOS把截屏存成PNG格式，通常这都没什么问题。但是如果你想要其他的格式，例如jpg？则使用以下命令：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">defaults write com.apple.screencapture &lt;span class="nb">type&lt;/span> jpg
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>只需要把jpg替换成你想要的扩展格式，无论是JPEG，TIFF或者是PDF，然后键入如下命令：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">killall SystemUIServer
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="将数字转成字节单位">将数字转成字节单位&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="n">NSString&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">folderSizeStr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">NSByteCountFormatter&lt;/span> &lt;span class="nl">stringFromByteCount&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">12334&lt;/span> &lt;span class="nl">countStyle&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">NSByteCountFormatterCountStyleBinary&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">NSLog&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">@&amp;#34;%@&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">folderSizeStr&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="检查有没有使用idfa">检查有没有使用idfa&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">终端运行:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">grep -r advertisingIdentifier .
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="查看app启动耗时">查看app启动耗时&lt;/h1>
&lt;p>在 Xcode 中 Edit scheme -&amp;gt; Run -&amp;gt; Auguments 添加环境变量DYLD_PRINT_STATISTICS 设为 1。启动app控制台输出的内容如下：
&lt;img src="https://upload-images.jianshu.io/upload_images/1608265-1315e7704c009305.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="查看app启动耗时"
>&lt;/p>
&lt;h1 id="获取图片类型">获取图片类型&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="p">-&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">NSString&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nf">contentTypeForImageData:&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">NSData&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nv">data&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">uint8_t&lt;/span> &lt;span class="n">c&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="n">data&lt;/span> &lt;span class="nl">getBytes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">c&lt;/span> &lt;span class="nl">length&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">switch&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="mh">0xFF&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="s">@&amp;#34;jpeg&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="mh">0x89&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="s">@&amp;#34;png&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="mh">0x47&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="s">@&amp;#34;gif&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="mh">0x49&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="mh">0x4D&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="s">@&amp;#34;tiff&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="mh">0x52&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">([&lt;/span>&lt;span class="n">data&lt;/span> &lt;span class="n">length&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">12&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nb">nil&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">NSString&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">testString&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[[&lt;/span>&lt;span class="n">NSString&lt;/span> &lt;span class="n">alloc&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="nl">initWithData&lt;/span>&lt;span class="p">:[&lt;/span>&lt;span class="n">data&lt;/span> &lt;span class="nl">subdataWithRange&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">NSMakeRange&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">12&lt;/span>&lt;span class="p">)]&lt;/span> &lt;span class="nl">encoding&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">NSASCIIStringEncoding&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">([&lt;/span>&lt;span class="n">testString&lt;/span> &lt;span class="nl">hasPrefix&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s">@&amp;#34;RIFF&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">testString&lt;/span> &lt;span class="nl">hasSuffix&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s">@&amp;#34;WEBP&amp;#34;&lt;/span>&lt;span class="p">])&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="s">@&amp;#34;webp&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nb">nil&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nb">nil&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>持续更新中……。&lt;/p></description></item><item><title>iOS开发常用宏，持续更新中</title><link>https://lisongrc.github.io/p/201608c4f2d814/</link><pubDate>Thu, 18 Aug 2016 16:22:23 +0000</pubDate><guid>https://lisongrc.github.io/p/201608c4f2d814/</guid><description>&lt;p>大家都是知道使用宏不仅方便，而且可以提高开发效率。下面总结了iOS开发过程中的一些常用宏，会持续的往里面添加。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//字符串是否为空
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="cp">#define kStringIsEmpty(str) ([str isKindOfClass:[NSNull class]] || str == nil || [str length] &amp;lt; 1 ? YES : NO )
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="c1">//数组是否为空
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="cp">#define kArrayIsEmpty(array) (array == nil || [array isKindOfClass:[NSNull class]] || array.count == 0)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="c1">//字典是否为空
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="cp">#define kDictIsEmpty(dic) (dic == nil || [dic isKindOfClass:[NSNull class]] || dic.allKeys == 0)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="c1">//是否是空对象
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="cp">#define kObjectIsEmpty(_object) (_object == nil \
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">|| [_object isKindOfClass:[NSNull class]] \
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">|| ([_object respondsToSelector:@selector(length)] &amp;amp;&amp;amp; [(NSData *)_object length] == 0) \
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">|| ([_object respondsToSelector:@selector(count)] &amp;amp;&amp;amp; [(NSArray *)_object count] == 0))
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//获取屏幕宽度与高度
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="cp">#define kScreenWidth \
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">([[UIScreen mainScreen] respondsToSelector:@selector(nativeBounds)] ? [UIScreen mainScreen].nativeBounds.size.width/[UIScreen mainScreen].nativeScale : [UIScreen mainScreen].bounds.size.width)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#define kScreenHeight \
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">([[UIScreen mainScreen] respondsToSelector:@selector(nativeBounds)] ? [UIScreen mainScreen].nativeBounds.size.height/[UIScreen mainScreen].nativeScale : [UIScreen mainScreen].bounds.size.height)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#define kScreenSize \
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">([[UIScreen mainScreen] respondsToSelector:@selector(nativeBounds)] ? CGSizeMake([UIScreen mainScreen].nativeBounds.size.width/[UIScreen mainScreen].nativeScale,[UIScreen mainScreen].nativeBounds.size.height/[UIScreen mainScreen].nativeScale) : [UIScreen mainScreen].bounds.size)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//一些缩写
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="cp">#define kApplication        [UIApplication sharedApplication]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#define kKeyWindow          [UIApplication sharedApplication].keyWindow
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#define kAppDelegate        [UIApplication sharedApplication].delegate
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#define kUserDefaults       [NSUserDefaults standardUserDefaults]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#define kNotificationCenter [NSNotificationCenter defaultCenter]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//APP版本号
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="cp">#define kAppVersion [[[NSBundle mainBundle] infoDictionary] objectForKey:@&amp;#34;CFBundleShortVersionString&amp;#34;]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="c1">//系统版本号
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="cp">#define kSystemVersion [[UIDevice currentDevice] systemVersion]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="c1">//获取当前语言
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="cp">#define kCurrentLanguage ([[NSLocale preferredLanguages] objectAtIndex:0])
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="c1">//判断是否为iPhone
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="cp">#define kISiPhone (UI_USER_INTERFACE_IDIOM() == UIUserInterfaceIdiomPhone)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="c1">//判断是否为iPad
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="cp">#define kISiPad (UI_USER_INTERFACE_IDIOM() == UIUserInterfaceIdiomPad)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//获取沙盒Document路径
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="cp">#define kDocumentPath [NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES) firstObject]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="c1">//获取沙盒temp路径
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="cp">#define kTempPath NSTemporaryDirectory()
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="c1">//获取沙盒Cache路径
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="cp">#define kCachePath [NSSearchPathForDirectoriesInDomains(NSCachesDirectory, NSUserDomainMask, YES) firstObject]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//判断是真机还是模拟器
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="cp">#if TARGET_OS_IPHONE
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="c1">//真机
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="cp">#endif
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#if TARGET_IPHONE_SIMULATOR
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="c1">//模拟器
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="cp">#endif
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//开发的时候打印，但是发布的时候不打印的NSLog
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="cp">#ifdef DEBUG
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#define NSLog(...) NSLog(@&amp;#34;%s 第%d行 \n %@\n\n&amp;#34;,__func__,__LINE__,[NSString stringWithFormat:__VA_ARGS__])
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#else
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#define NSLog(...)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#endif
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//颜色
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="cp">#define kRGBColor(r, g, b)     [UIColor colorWithRed:(r)/255.0 green:(g)/255.0 blue:(b)/255.0 alpha:1.0]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#define kRGBAColor(r, g, b, a) [UIColor colorWithRed:(r)/255.0 green:(r)/255.0 blue:(r)/255.0 alpha:a]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#define kRandomColor kRGBColor(arc4random_uniform(256),arc4random_uniform(256),arc4random_uniform(256))
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#define kColorWithHex(rgbValue) \
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">[UIColor colorWithRed:((float)((rgbValue &amp;amp; 0xFF0000) &amp;gt;&amp;gt; 16)) / 255.0 \
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">green:((float)((rgbValue &amp;amp; 0xFF00) &amp;gt;&amp;gt; 8)) / 255.0 \
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">blue:((float)(rgbValue &amp;amp; 0xFF)) / 255.0 alpha:1.0]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//弱引用/强引用
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="cp">#define kWeakSelf(type)   __weak typeof(type) weak##type = type;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#define kStrongSelf(type) __strong typeof(type) type = weak##type;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//由角度转换弧度
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="cp">#define kDegreesToRadian(x)      (M_PI * (x) / 180.0)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="c1">//由弧度转换角度
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="cp">#define kRadianToDegrees(radian) (radian * 180.0) / (M_PI)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//获取一段时间间隔
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="cp">#define kStartTime CFAbsoluteTime start = CFAbsoluteTimeGetCurrent();
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#define kEndTime   NSLog(@&amp;#34;Time: %f&amp;#34;, CFAbsoluteTimeGetCurrent() - start)
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>持续更新中……。&lt;/p></description></item></channel></rss>