<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ClangFormat on 小松哥的博客</title><link>https://lisongrc.github.io/tags/clangformat/</link><description>Recent content in ClangFormat on 小松哥的博客</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Sat, 10 Sep 2016 21:44:04 +0000</lastBuildDate><atom:link href="https://lisongrc.github.io/tags/clangformat/index.xml" rel="self" type="application/rss+xml"/><item><title>超详细的Xcode代码格式化教程，可自定义样式</title><link>https://lisongrc.github.io/p/2016099de00e69/</link><pubDate>Sat, 10 Sep 2016 21:44:04 +0000</pubDate><guid>https://lisongrc.github.io/p/2016099de00e69/</guid><description>&lt;h1 id="为什么要格式化代码">为什么要格式化代码&lt;/h1>
&lt;p>当团队内有多人开发的时候，每个人写的代码格式都有自己的喜好，也可能会忙着写代码而忽略了格式的问题。
在之前，我们可能会写完代码后，再一点一点去调格式，很浪费时间。&lt;/p>
&lt;p>有了&lt;code>ClangFormat&lt;/code>插件后，就可以一键把代码格式化成统一的样式，不仅节省了时间，也使得代码更规范。我们还可以定制自己喜欢的样式。&lt;/p>
&lt;h1 id="安装clangformat插件">安装ClangFormat插件&lt;/h1>
&lt;p>可以手动安装(下载&lt;a class="link" href="https://github.com/travisjeffery/ClangFormat-Xcode" target="_blank" rel="noopener"
>GitHub项目&lt;/a>编译)，也可以用&lt;a class="link" href="https://github.com/alcatraz/Alcatraz" target="_blank" rel="noopener"
>Alcatraz&lt;/a>(插件管理器)安装，都很简单，具体可以看我的文章&lt;a class="link" href="http://www.jianshu.com/p/51635869b027" target="_blank" rel="noopener"
>《Xcode方便开发的插件推荐》&lt;/a>。&lt;/p>
&lt;p>装好后是下图这样的，我们可以看到它内置了&lt;code>LLVM&lt;/code>、&lt;code>Google&lt;/code>、&lt;code>Chromium&lt;/code>、&lt;code>Mozilla&lt;/code>、&lt;code>WebKit&lt;/code>五种样式。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-851e929f08aa1ed8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="插件菜单"
>&lt;/p>
&lt;h1 id="使用方法">使用方法&lt;/h1>
&lt;p>通过菜单可以看到，它可以格式化选中的文字们，或者格式化选择的文件们。下面演示下&lt;code>LLVM&lt;/code>样式下的格式化：
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-ebca3898fbfb438a.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="LLVM样式下的格式化"
>&lt;/p>
&lt;h1 id="使用自定义样式">使用自定义样式&lt;/h1>
&lt;p>1、需要先把上面菜单里面的File选中，因为我们需要让它用我们自己写的配置文件。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-819361a437dcba49.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="选中File"
>&lt;/p>
&lt;p>2、在工程目录下创建配置文件&lt;code>.clang-format&lt;/code>文件并编辑。&lt;code>.clang-format&lt;/code>文件用的是&lt;code>YAML&lt;/code>格式:里面要用的字段在后面会详细解释。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">key1&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">value1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 一个注释&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">key2&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">value2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-da9562ec5051cc32.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="自定义样式格式化代码"
>&lt;/p>
&lt;p>当然如果你已经有&lt;code>.clang-format&lt;/code>文件的话，直接拖动到项目根目录也可以。
文章结尾有我在用的&lt;code>.clang-format&lt;/code>文件。&lt;/p>
&lt;p>温馨提示：&lt;code>.clang-format&lt;/code>文件是隐藏文件，默认是看不见的。需要在终端输入以下命令：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">//显示 隐藏文件
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">defaults write com.apple.finder AppleShowAllFiles -bool &lt;span class="nb">true&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">killall Finder
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">//隐藏 隐藏文件
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">defaults write com.apple.finder AppleShowAllFiles -bool &lt;span class="nb">false&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">killall Finder
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="全局配置">全局配置&lt;/h1>
&lt;p>上面我们是在项目根目录创建的&lt;code>.clang-format&lt;/code>文件，每次建新项目都要有。如果你想让所有的项目公用一个文件，把&lt;code>.clang-format&lt;/code>文件放在所有项目都在的一个最大根目录下就可以了。&lt;/p>
&lt;p>###让一段代码不受格式化影响
如果想让一段代码不受格式化影响，需要将他们包含在&lt;code>// clang-format off&lt;/code> 和 &lt;code>// clang-format on&lt;/code>这两句注释之间，这样这段代码就不会被格式化，但是这两句注释本身是会被格式化的。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-6c78a84cca358db2.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="让一段代码不受格式化影响"
>&lt;/p>
&lt;h1 id="设置快捷键">设置快捷键&lt;/h1>
&lt;p>首先你可以选中菜单中的 &lt;code>Enable Format On Sava&lt;/code>，把它点&lt;code>Disable Format On Sava&lt;/code>，这样以后每次按&lt;code>⌘+S&lt;/code>保存文件时就可以自动格式化了。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-1084e334da53f3b1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="屏幕快照 2016-09-10 下午12.43.50.png"
>&lt;/p>
&lt;p>我们也可以给一些菜单设置快捷键，使用的时候不用每次去选择各级菜单了。比如我们给&lt;code>Format Selected Text&lt;/code>设置快捷键：
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-4c570e4af91ed499.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="设置格式化快捷键"
>&lt;/p>
&lt;p>你也可以为其他菜单设置快捷键，其实呢，我用&lt;code>Format Selected Text&lt;/code>的时候很少，每次都是想格式化的时候直接&lt;code>⌘+S&lt;/code>就行了哈哈哈。&lt;/p>
&lt;h1 id="配置文件中属性的含义讲解">配置文件中属性的含义讲解&lt;/h1>
&lt;p>下面说一些配置文件的常用的参数介绍，其他的可以看官方文档：&lt;a class="link" href="http://clang.llvm.org/docs/ClangFormatStyleOptions.html" target="_blank" rel="noopener"
>Clang-Format Style Options&lt;/a>，其中小括号内代表他需的是什么类型的值。&lt;/p>
&lt;p>&lt;strong>BasedOnStyle&lt;/strong> (string)
基于哪种样式。除了文件中写出的定制属性外，别的没定制的属性都默认用这种样式的。
可选值有五种：
&lt;code>LLVM&lt;/code>：一种遵循&lt;a class="link" href="http://llvm.org/docs/CodingStandards.html" target="_blank" rel="noopener"
>LLVM coding standards&lt;/a>的样式。
&lt;code>Google&lt;/code>：一种遵循&lt;a class="link" href="http://google-styleguide.googlecode.com/svn/trunk/cppguide.xml" target="_blank" rel="noopener"
>Google’s C++ style guide&lt;/a>的样式。
&lt;code>Chromium&lt;/code>：一种遵循&lt;a class="link" href="http://www.chromium.org/developers/coding-style" target="_blank" rel="noopener"
>Chromium’s style guide&lt;/a>的样式。
&lt;code>Mozilla&lt;/code>：一种遵循&lt;a class="link" href="https://developer.mozilla.org/en-US/docs/Developer_Guide/Coding_Style" target="_blank" rel="noopener"
>Mozilla’s style guide&lt;/a>的样式。
&lt;code>WebKit&lt;/code>：一种遵循&lt;a class="link" href="http://www.webkit.org/coding/coding-style.html" target="_blank" rel="noopener"
>WebKit’s style guide&lt;/a>的样式。&lt;/p>
&lt;p>&lt;strong>AccessModifierOffset&lt;/strong> (int)
访问修饰词 (比如public) 前面额外需要加的缩进长度。默认为0。&lt;/p>
&lt;p>&lt;strong>AlignConsecutiveAssignments&lt;/strong> (bool)
如果是true，把连续的赋值操作按=对齐，默认为false。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-8f8ce880dfe20834.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="AlignConsecutiveDeclarations-true"
>&lt;/p>
&lt;p>&lt;strong>AlignConsecutiveDeclarations&lt;/strong> (bool)
如果是true，把连续行的变量名对齐。默认为false。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-f6f5813271f55d32.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="AlignConsecutiveDeclarations-true"
>&lt;/p>
&lt;p>&lt;strong>AlignTrailingComments&lt;/strong> (bool)
如果是true，对齐尾部注释。默认为false。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-9aeb5efd657ce59e.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="AlignTrailingComments-true"
>&lt;/p>
&lt;p>&lt;strong>AllowShortCaseLabelsOnASingleLine&lt;/strong> (bool)
如果是true, 允许一个case在一行写完，默认为false。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-ed5a85374909cd10.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="AllowShortCaseLabelsOnASingleLine-true"
>&lt;/p>
&lt;p>&lt;strong>BreakBeforeBraces&lt;/strong> (string)
大括号前面是否换行，具体可选值看文档。一般用Allman，代表所有大括号都换行。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-52fa2344d0d9deba.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="BreakBeforeBraces-Allman"
>&lt;/p>
&lt;p>&lt;strong>ColumnLimit&lt;/strong> (unsigned)
每行最多多少个字符，0不限制&lt;/p>
&lt;p>&lt;strong>IndentWidth&lt;/strong> (unsigned)
缩进宽度，默认为2，但是我们一般设置为4。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-b23f5f1d0ce8986d.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="IndentWidth-4"
>&lt;/p>
&lt;p>&lt;strong>IndentCaseLabels&lt;/strong> (bool)
switch的case缩进宽度，一般用true。默认为false，case会和switch对齐。&lt;/p>
&lt;p>&lt;strong>KeepEmptyLinesAtTheStartOfBlocks&lt;/strong> (bool)
是否保留block里面开始的空行们。默认为true。&lt;/p>
&lt;p>&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-c113fbb4bb5f9107.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="KeepEmptyLinesAtTheStartOfBlocks-true"
>
&lt;strong>MaxEmptyLinesToKeep&lt;/strong> (unsigned)
最多可以有连续几行空行，默认为1。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-997b9eed8eda63ea.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="MaxEmptyLinesToKeep-1"
>&lt;/p>
&lt;p>&lt;strong>ObjCBlockIndentWidth&lt;/strong>
OC的block里面的缩进宽度，默认为4。&lt;/p>
&lt;p>&lt;strong>ObjCSpaceAfterProperty&lt;/strong> (bool)
OC里面，是否在@property后加空格。默认为false。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-0759d6e90844a00d.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="ObjCSpaceAfterProperty-true"
>&lt;/p>
&lt;p>&lt;strong>ObjCSpaceBeforeProtocolList&lt;/strong> (bool)
OC里面，是否在Protocol名字列表前面加空格，默认为true。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-a750da85c92c20df.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="ObjCSpaceBeforeProtocolList-true"
>&lt;/p>
&lt;p>&lt;strong>PointerAlignment&lt;/strong> (string)
指针的位置。默认为Right。
可选值：
Left：&lt;code>NSString* name&lt;/code>
Middle：&lt;code>NSString * name&lt;/code>
Right：&lt;code>NSString *name&lt;/code>&lt;/p>
&lt;p>&lt;strong>SpaceBeforeAssignmentOperators&lt;/strong> (bool)
&lt;code>=&lt;/code> 前面是否有空格。默认为true。&lt;/p>
&lt;p>&lt;strong>SpaceBeforeParens&lt;/strong> (string)
是否在&lt;code>(&lt;/code>前面加空格。默认ControlStatements。
可选值：
Never: 从来不在&lt;code>(&lt;/code>前面加空格。
ControlStatements:在控制语句(for/if/while&amp;hellip;)的&lt;code>(&lt;/code>前面加空格。
Always:总会在&lt;code>(&lt;/code>前面加空格。&lt;/p>
&lt;p>&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-70ecea9d5279030b.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="SpaceBeforeParens-ControlStatements"
>
&lt;strong>SpaceInEmptyParentheses&lt;/strong> (bool)
是否在&lt;code>()&lt;/code>里面插入一个空格。默认false。&lt;/p>
&lt;p>&lt;strong>SpacesBeforeTrailingComments&lt;/strong> (unsigned)
在尾部//注释前面加几个空格。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-0e3aecf7e11187da.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="SpacesBeforeTrailingComments-3"
>&lt;/p>
&lt;p>&lt;strong>SpacesInAngles&lt;/strong> (bool)
是否在&lt;code>&amp;lt;&lt;/code>后边和&lt;code>&amp;gt;&lt;/code>前边插入空格，默认为false。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-965992106a532ac1.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="SpacesInAngles-true"
>&lt;/p>
&lt;p>&lt;strong>SpacesInContainerLiterals&lt;/strong> (bool)
&lt;code>@[]&lt;/code>里面，是否在 &lt;code>[&lt;/code> 后和 &lt;code>]&lt;/code> 前加空格。默认为true。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-1a38aac48c0c1fe6.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="SpacesInContainerLiterals-true"
>&lt;/p>
&lt;p>&lt;strong>SpacesInParentheses&lt;/strong> (bool)
是否在&lt;code>(&lt;/code>后面和&lt;code>)&lt;/code>前面加空格，默认为false。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-b496ff2996fa1804.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="SpacesInParentheses-true"
>&lt;/p>
&lt;p>当项目里面有多种语言时，我们可以分别设置样式：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 我们默认用 LLVM 样式, 缩进宽度为4。&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">BasedOnStyle&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">LLVM&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">IndentWidth&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">4&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">Language&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Cpp&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># C++ 设置星号左对齐。&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">PointerAlignment&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Left&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">Language&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">JavaScript&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># JavaScript 每行字符限制设置为100。&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">ColumnLimit&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">100&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">Language&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Proto&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 不格式化Proto文件。&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">DisableFormat&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nn">...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这个是我在用的&lt;a class="link" href="https://github.com/lisongrc/clang-format" target="_blank" rel="noopener"
>.clang-format&lt;/a>文件。大家可以下载下来自己修改一下再用。&lt;/p></description></item></channel></rss>