<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>UIImage on 小松哥的博客</title><link>https://lisongrc.github.io/tags/uiimage/</link><description>Recent content in UIImage on 小松哥的博客</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Sun, 04 Sep 2016 20:37:30 +0000</lastBuildDate><atom:link href="https://lisongrc.github.io/tags/uiimage/index.xml" rel="self" type="application/rss+xml"/><item><title>UIImage图片处理，旋转、截取、平铺、缩放等操作，持续更新中</title><link>https://lisongrc.github.io/p/2016095d76ea11/</link><pubDate>Sun, 04 Sep 2016 20:37:30 +0000</pubDate><guid>https://lisongrc.github.io/p/2016095d76ea11/</guid><description>&lt;p>有时候我们需要处理图片，比如改变大小，旋转，截取等等，所以今天说一说图片处理相关的一些操作。
本文所说的方法都是写在UIImage的Category中，这样使用起来也方便；由于代码太多，这里就不贴具体实现代码了，大家可以去我的Github查看&lt;a class="link" href="https://github.com/lisongrc/UIImage-Categories" target="_blank" rel="noopener"
>demo&lt;/a>，效果如下：&lt;/p>
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-5023a6afa907f819.gif?imageMogr2/auto-orient/strip" alt="demo效果.gif" style="zoom: 67%;" />
&lt;h1 id="颜色相关">颜色相关&lt;/h1>
&lt;p>&lt;strong>1.根据颜色生成纯色图片&lt;/strong>
就是根据制定的颜色生成一张纯色的图片&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">+ (UIImage *)imageWithColor:(UIColor *)color;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>使用方法，比如设置UIImageView的图片为红色纯图片：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">self.imageView.image = [UIImage imageWithColor:[UIColor redColor]];
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>2.取图片上某一像素的颜色&lt;/strong>
有时候我们需要获取图片上的某一点的颜色，比如画板应用选择画笔颜色的时候，其实是在一张有所有颜色的图片上点击选择实现的。
需要注意的是这里要传的参数point是相对于图片上的点。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">- (UIColor *)colorAtPixel:(CGPoint)point;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>使用方法，比如我们在图片上加个tap手势，然后在响应方法里面这样写就可以了：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">- (void)handleTap:(UITapGestureRecognizer *)tap
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    CGPoint point = [tap locationInView:tap.view];
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    UIImage *image = self.imageView.image;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    CGPoint pointInImage = CGPointMake(point.x * image.size.width / self.imageView.frame.size.width, point.y * image.size.height / self.imageView.frame.size.height);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    self.view.backgroundColor = [image colorAtPixel:pointInImage];
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>**3.获得灰度图 **
获取一张彩色图片的黑白图片&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">- (UIImage *)convertToGrayImage;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>使用方法：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">self.imageView.image = [image convertToGrayImage];
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="旋转相关">旋转相关&lt;/h1>
&lt;p>&lt;strong>1.纠正图片的方向&lt;/strong>
当我们需要读取相册的图片，发现相册里面的方向和展示出来的图片的方向不一样，这时候就要矫正方向了。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">- (UIImage *)fixOrientation;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>使用:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">self.imageView.image = [image fixOrientation];
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>2.按给定的方向旋转图片&lt;/strong>
在做图片处理工具的时候，我们可能需要旋转图片。
这个方法的参数是系统枚举UIImageOrientation。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">typedef NS_ENUM(NSInteger, UIImageOrientation) {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    UIImageOrientationUp,            // default orientation
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    UIImageOrientationDown,          // 180 deg rotation
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    UIImageOrientationLeft,          // 90 deg CCW
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    UIImageOrientationRight,         // 90 deg CW
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    UIImageOrientationUpMirrored,    // as above but image mirrored along other axis. horizontal flip
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    UIImageOrientationDownMirrored,  // horizontal flip
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    UIImageOrientationLeftMirrored,  // vertical flip
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">    UIImageOrientationRightMirrored, // vertical flip
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">};
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- (UIImage*)rotate:(UIImageOrientation)orient;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>使用，比如顺时针旋转180度：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">self.imageView.image = [image rotate:UIImageOrientationDown];
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>3.垂直翻转&lt;/strong>
其实就是上面的方法传UIImageOrientationDownMirrored参数。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">- (UIImage *)flipVertical;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>4.水平翻转&lt;/strong>
其实就是传UIImageOrientationUpMirrored参数。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">- (UIImage *)flipHorizontal;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>5.将图片旋转degrees角度&lt;/strong>
传入一个自定义的角度。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">- (UIImage *)imageRotatedByDegrees:(CGFloat)degrees;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>6.将图片旋转radians弧度&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">- (UIImage *)imageRotatedByRadians:(CGFloat)radians;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="生成图相关">生成图相关&lt;/h1>
&lt;p>&lt;strong>1.截取image对象rect区域内的图像&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">- (UIImage *)subImageWithRect:(CGRect)rect;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>2.压缩图片至指定尺寸&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">- (UIImage *)rescaleImageToSize:(CGSize)size;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>3.压缩图片至指定像素&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">- (UIImage *)rescaleImageToPX:(CGFloat )toPX;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>4.生成一个size大小的平铺图片&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">- (UIImage *)getTiledImageWithSize:(CGSize)size;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>5..UIView转化为UIImage&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">+ (UIImage *)imageFromView:(UIView *)view;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>6.将两个图片生成一张图片&lt;/strong>
firstImage在下面，secondImage在上面&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">+ (UIImage*)mergeImage:(UIImage*)firstImage withImage:(UIImage*)secondImage;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="gif相关">Gif相关&lt;/h1>
&lt;p>将一个Gif直接设置为UIImageView的image就可以显示动态图了。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">/** 用一个Gif生成UIImage，传入一个GIFData */
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+ (UIImage *)animatedImageWithAnimatedGIFData:(NSData *)theData;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/** 用一个Gif生成UIImage，传入一个GIF路径 */
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+ (UIImage *)animatedImageWithAnimatedGIFURL:(NSURL *)theURL;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>使用：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">NSString *path = [[NSBundle mainBundle] pathForResource:@&amp;#34;gif&amp;#34; ofType:@&amp;#34;gif&amp;#34;];
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">self.imageView.image = [UIImage animatedImageWithAnimatedGIFURL:[NSURL fileURLWithPath:path]];
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">//或者
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">self.imageView.image = [UIImage animatedImageWithAnimatedGIFData:[NSData dataWithContentsOfFile:path]];
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>希望能帮到大家，持续更新中。&lt;/p></description></item></channel></rss>