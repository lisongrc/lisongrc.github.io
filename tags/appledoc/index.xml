<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>appledoc on 小松哥的博客</title><link>https://lisongrc.github.io/tags/appledoc/</link><description>Recent content in appledoc on 小松哥的博客</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Tue, 13 Dec 2016 15:47:22 +0000</lastBuildDate><atom:link href="https://lisongrc.github.io/tags/appledoc/index.xml" rel="self" type="application/rss+xml"/><item><title>Objective-C自动生成文档工具:appledoc</title><link>https://lisongrc.github.io/p/201612objective-c%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90%E6%96%87%E6%A1%A3%E5%B7%A5%E5%85%B7appledoc/</link><pubDate>Tue, 13 Dec 2016 15:47:22 +0000</pubDate><guid>https://lisongrc.github.io/p/201612objective-c%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90%E6%96%87%E6%A1%A3%E5%B7%A5%E5%85%B7appledoc/</guid><description>&lt;meta name="referrer" content="no-referrer"/>
&lt;p>由于最近琐事比较多，所以好久没有写文章了。今天我们聊一聊Objective-C自动生成文档。&lt;/p>
&lt;p>做项目的人多了，就需要文档了。手工写文档是一件苦差事，但是我们也有从源码中抽取注释生成文档的专用工具。&lt;/p>
&lt;p>经过查找，比较大众的有三个：&lt;/p>
&lt;!-- more -->
&lt;blockquote>
&lt;p>&lt;a class="link" href="http://www.stack.nl/~dimitri/doxygen/index.html" target="_blank" rel="noopener"
>doxygen&lt;/a>：适于生成html文档与pdf文档。 支持的语言多，可以配置的地方也比较多。默认生成的风格与苹果的风格不一致。&lt;/p>
&lt;p>&lt;a class="link" href="http://developer.apple.com/opensource/tools/headerdoc.html" target="_blank" rel="noopener"
>headdoc&lt;/a> ：是 Xcode 自带的文档生成工具。在安装完 Xcode 后，就可以用命令行来生成对应的文档。不过它只生成以&lt;code>/*! */&lt;/code>的格式的注释。不兼容 &lt;code>/** */&lt;/code>格式的注释&lt;/p>
&lt;p>&lt;a class="link" href="http://gentlebytes.com/appledoc/" target="_blank" rel="noopener"
>appledoc&lt;/a>: &lt;a class="link" href="https://github.com/tomaz/appledoc" target="_blank" rel="noopener"
>Github地址&lt;/a> ，适于生成html文档和xcode帮助文档（docset）。可以兼容 &lt;code>/** */&lt;/code>格式，也可以兼容 &lt;code>/*! */&lt;/code>格式的注释。&lt;/p>
&lt;/blockquote>
&lt;p>我感觉appledoc是最好的，所以在这里，我只介绍一下appledoc的使用，有兴趣的童鞋也可以研究下其他两种。&lt;/p>
&lt;h1 id="appledoc的安装">appledoc的安装&lt;/h1>
&lt;p>第一种：打开终端，输入以下命令：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">git clone git://github.com/tomaz/appledoc.git
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> appledoc
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo sh install-appledoc.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>第二种：如果你装了homebrew，打开终端，输入以下命令：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">brew install appledoc
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="appledoc的使用">appledoc的使用&lt;/h1>
&lt;p>为了演示appledoc的使用，我在桌面新建了一个工程Test，然后在ViewController类里面加了一些注释：&lt;/p>
&lt;p>&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-54c02d5dfefe5185.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="ViewController.h"
>&lt;/p>
&lt;p>&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-1b5ceeb31f275a8e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="ViewController.m"
>&lt;/p>
&lt;p>然后演示appledoc的使用：&lt;/p>
&lt;h2 id="1在终端中使用">1.在终端中使用&lt;/h2>
&lt;p>使用 appledoc 时，打开终端，进入项目所在目录，使用如下命令即可：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">appledoc --output 输出路径 --project-name 工程名 --project-company 公司名 --company-id 公司ID .
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>例如我在这里使用的命令是：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">appledoc --output ./doc --project-name Test --project-company lisong --company-id lisong .
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>具体过程如下：
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-38d08feeb2bd337c.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="生成Docset"
>&lt;/p>
&lt;p>appledoc 会扫描当前路径下的所有文件，然后生成好文档放到 doc 目录下。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-75315ae0d0d5293b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="doc目录"
>&lt;/p>
&lt;p>编译出的Docset
默认会放在&lt;code>~/Library/Developer/Shared/Documentation/DocSets&lt;/code>路径下，里面包含html的文档。首先显示生成的Docset的包内容，然后在Contents/Resources/Documents路径下，双击打开里面的index.html可以在浏览器中查看文档了。&lt;/p>
&lt;p>并且生成的Docset已经安装到Xcode中。重启Xcode后，在&lt;code>Help—Documentation and API Reference&lt;/code>菜单下也可以看到生成的文档：
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-3b0a83b380a0550e.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="在Xcode中查看"
>&lt;/p>
&lt;p>如果不想生成Docset，而是想生成html，就需要加一个&lt;code>--no-create-docset&lt;/code>，这里我使用命令：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">appledoc --no-create-docset --output ./doc --project-name Test --project-company lisong --company-id lisong .
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>则会在doc目录下生成一个html文件夹，也是双击里面的index.html就可以在浏览器中查看文档了。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-4f6f78eb9d0d3911.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"
loading="lazy"
alt="html文档"
>&lt;/p>
&lt;p>你也可以在终端用&lt;code>appledoc --help&lt;/code>查看所有可用的参数。详细的信息可以查看官方的文档：&lt;a class="link" href="http://gentlebytes.com/appledoc/" target="_blank" rel="noopener"
>http://gentlebytes.com/appledoc/&lt;/a>&lt;/p>
&lt;h2 id="2在xcode里使用">2.在Xcode里使用&lt;/h2>
&lt;p>1.首先创建一个Aggregate类型的Target，取名Document
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-dc46a5c77a483ecc.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="创建Target"
>&lt;/p>
&lt;p>2.选择Build Phases，点击左边的小加号，选择New Run Script Phase，建好了以后打开刚刚建立的Run Script，在框里输入命令，命令与终端一样，这里我们输入：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">appledoc --no-create-docset --output ./doc --project-name Test --project-company lisong --company-id lisong .
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-bdce67e2e0fae042.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="添加script"
>&lt;/p>
&lt;p>3..然后点左上角选择Document，编译一下，成功后文档就生成在doc目录下了。
&lt;img src="http://upload-images.jianshu.io/upload_images/1608265-163ba983a5c4ae7b.gif?imageMogr2/auto-orient/strip"
loading="lazy"
alt="编译生成文档"
>&lt;/p>
&lt;h1 id="注释样式">注释样式&lt;/h1>
&lt;p>因为appledoc是通过注释生成文档的，下面说说注释的样式，几种常见的有：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-objc" data-lang="objc">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">/// Single line comment.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">/// Single line comment spreading
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">/// over multiple lines.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/** Single line comment. */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/*! Single line comment */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * Single line comment spreading
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * over multiple lines.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> Single line comment spreading
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> over multiple lines. No star
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> */&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在Xcode里面，我们可以用&lt;code>command + option + /&lt;/code>方便快捷地生成注释，很方便。大家可以多尝试尝试各种注释。&lt;a class="link" href="https://github.com/tomaz/appledoc/blob/master/CommentsFormattingStyle.markdown" target="_blank" rel="noopener"
>更多的注释格式可以看这里&lt;/a>&lt;/p></description></item></channel></rss>